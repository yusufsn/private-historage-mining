-import static org.junit.Assert.*;
-import org.apache.hadoop.hbase.*;
-    NavigableSet<String> regions = getAllOnlineRegions(cluster);
-    regions = getAllOnlineRegions(cluster);
-    // Bring the RS hosting hbase:meta down
-    RegionServerThread metaServer = getServerHostingMeta(cluster);
-    log("Stopping server hosting hbase:meta #1");
-    metaServer.getRegionServer().stop("Stopping hbase:meta server");
-    cluster.hbaseCluster.waitOnRegionServer(metaServer);
-    log("Meta server down #1");
-    expectedNumRS--;
-    log("Waiting for meta server #1 RS shutdown to be handled by master");
-    waitForRSShutdownToStartAndFinish(activeMaster,
-        metaServer.getRegionServer().getServerName());
-    log("Waiting for no more RIT");
-    long start = System.currentTimeMillis();
-    do {
-      blockUntilNoRIT(zkw, master);
-    } while (getNumberOfOnlineRegions(cluster) < numRegions 
-        && System.currentTimeMillis()-start < 60000);
-    log("Verifying there are " + numRegions + " assigned on cluster");
-    assertRegionsAssigned(cluster, regions);
-    assertEquals(expectedNumRS, cluster.getRegionServerThreads().size());
-
-    // Kill off the server hosting hbase:meta again
-    metaServer = getServerHostingMeta(cluster);
-    log("Stopping server hosting hbase:meta #2");
-    metaServer.getRegionServer().stop("Stopping hbase:meta server");
-    cluster.hbaseCluster.waitOnRegionServer(metaServer);
-    log("Meta server down");
-    expectedNumRS--;
-    log("Waiting for RS shutdown to be handled by master");
-    waitForRSShutdownToStartAndFinish(activeMaster,
-        metaServer.getRegionServer().getServerName());
-    log("RS shutdown done, waiting for no more RIT");
-    blockUntilNoRIT(zkw, master);
-    log("Verifying there are " + numRegions + " assigned on cluster");
-    assertRegionsAssigned(cluster, regions);
-    assertEquals(expectedNumRS, cluster.getRegionServerThreads().size());
-
-    // Start 3 RS again
-    cluster.startRegionServer().waitForServerOnline();
-    cluster.startRegionServer().waitForServerOnline();
-    cluster.startRegionServer().waitForServerOnline();
-    Thread.sleep(1000);
-    log("Waiting for no more RIT");
-    blockUntilNoRIT(zkw, master);
-    log("Verifying there are " + numRegions + " assigned on cluster");
-    assertRegionsAssigned(cluster, regions);
-    // Shutdown server hosting META
-    metaServer = getServerHostingMeta(cluster);
-    log("Stopping server hosting hbase:meta (1 of 3)");
-    metaServer.getRegionServer().stop("Stopping hbase:meta server");
-    cluster.hbaseCluster.waitOnRegionServer(metaServer);
-    log("Meta server down (1 of 3)");
-    log("Waiting for RS shutdown to be handled by master");
-    waitForRSShutdownToStartAndFinish(activeMaster,
-        metaServer.getRegionServer().getServerName());
-    log("RS shutdown done, waiting for no more RIT");
-    blockUntilNoRIT(zkw, master);
-    log("Verifying there are " + numRegions + " assigned on cluster");
-    assertRegionsAssigned(cluster, regions);
-
-    // Shutdown server hosting hbase:meta again
-    metaServer = getServerHostingMeta(cluster);
-    log("Stopping server hosting hbase:meta (2 of 3)");
-    metaServer.getRegionServer().stop("Stopping hbase:meta server");
-    cluster.hbaseCluster.waitOnRegionServer(metaServer);
-    log("Meta server down (2 of 3)");
-    log("Waiting for RS shutdown to be handled by master");
-    waitForRSShutdownToStartAndFinish(activeMaster,
-        metaServer.getRegionServer().getServerName());
-    log("RS shutdown done, waiting for no more RIT");
-    blockUntilNoRIT(zkw, master);
-    log("Verifying there are " + numRegions + " assigned on cluster");
-    assertRegionsAssigned(cluster, regions);
-
-    // Shutdown server hosting hbase:meta again
-    metaServer = getServerHostingMeta(cluster);
-    log("Stopping server hosting hbase:meta (3 of 3)");
-    metaServer.getRegionServer().stop("Stopping hbase:meta server");
-    cluster.hbaseCluster.waitOnRegionServer(metaServer);
-    log("Meta server down (3 of 3)");
-    log("Waiting for RS shutdown to be handled by master");
-    waitForRSShutdownToStartAndFinish(activeMaster,
-        metaServer.getRegionServer().getServerName());
-    log("RS shutdown done, waiting for no more RIT");
-    blockUntilNoRIT(zkw, master);
-    log("Verifying there are " + numRegions + " assigned on cluster");
-    assertRegionsAssigned(cluster, regions);
-
-    if (cluster.getRegionServerThreads().size() != 1) {
-      log("Online regionservers:");
-      for (RegionServerThread rst : cluster.getRegionServerThreads()) {
-        log("RS: " + rst.getRegionServer().getServerName());
-      }
-    }
-    assertEquals(2, cluster.getRegionServerThreads().size());
-
-
-  private RegionServerThread getServerHostingMeta(MiniHBaseCluster cluster)
-      throws IOException {
-    return getServerHosting(cluster, HRegionInfo.FIRST_META_REGIONINFO);
-  }
-
-  private RegionServerThread getServerHosting(MiniHBaseCluster cluster,
-      HRegionInfo region) throws IOException {
-    for (RegionServerThread rst : cluster.getRegionServerThreads()) {
-      if (ProtobufUtil.getOnlineRegions(rst.getRegionServer()).contains(region)) {
-        return rst;
-      }
-    }
-    return null;
-  }
-
-      NavigableSet<String> foundRegions = getAllOnlineRegions(cluster);
-  private NavigableSet<String> getAllOnlineRegions(MiniHBaseCluster cluster)
-      throws IOException {
-    NavigableSet<String> online = new TreeSet<String>();
-    for (RegionServerThread rst : cluster.getLiveRegionServerThreads()) {
-      for (HRegionInfo region : ProtobufUtil.getOnlineRegions(rst.getRegionServer())) {
-        online.add(region.getRegionNameAsString());
-      }
-    }
-    return online;
-  }
-
-      for (HRegionInfo region : ProtobufUtil.getOnlineRegions(rst.getRegionServer())) {
