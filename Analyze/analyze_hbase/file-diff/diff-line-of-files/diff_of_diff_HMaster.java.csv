line_no,diffmyers-HMaster.java,diffhistogram-HMaster.java,diffminimal-HMaster.java,diffpatience-HMaster.java
336 , - , +  mastercoprocessorhost cphost; , - , +  mastercoprocessorhost cphost;
337 , -  private tabledescriptors tabledescriptors; ,  , -  private tabledescriptors tabledescriptors; , 
338 , +  mastercoprocessorhost cphost; , -  private tabledescriptors tabledescriptors; , - , -  private tabledescriptors tabledescriptors;
339 ,  , - , -  // table level lock manager for schema changes , -
340 , -  // table level lock manager for schema changes , -  // table level lock manager for schema changes , -  private tablelockmanager tablelockmanager; , -  // table level lock manager for schema changes
341 , -  private tablelockmanager tablelockmanager; , -  private tablelockmanager tablelockmanager; , +  mastercoprocessorhost cphost; , -  private tablelockmanager tablelockmanager;
342 , - , - ,  , -
491 ," @@ -519', '161 +269', '60 @@ masterservices', 'server { "," @@ -519', '161 +269', '60 @@ masterservices', 'server { "," @@ -519', '161 +269', '60 @@ masterservices', 'server { "," @@ -519', '163 +269', '62 @@ masterservices', 'server {"
495 , - , +    startactivemastermanager(); , - , +    startactivemastermanager();
496 , -    distributedlogreplay = this.conf.getboolean(hconstants.distributed_log_replay_key , +  } , -    distributedlogreplay = this.conf.getboolean(hconstants.distributed_log_replay_key , +  }
497 , -      hconstants.default_distributed_log_replay_config); ,  , -      hconstants.default_distributed_log_replay_config); , 
498 , +    startactivemastermanager(); , -    distributedlogreplay = this.conf.getboolean(hconstants.distributed_log_replay_key , +    startactivemastermanager(); , -    distributedlogreplay = this.conf.getboolean(hconstants.distributed_log_replay_key
499 , } , -      hconstants.default_distributed_log_replay_config); , } , -      hconstants.default_distributed_log_replay_config);
500 ,  , +  @visiblefortesting ,  , +  @visiblefortesting
501 , -  /** , +  public masterrpcservices getmasterrpcservices() { , -  /** , +  public masterrpcservices getmasterrpcservices() {
502 , -   * @return list of blocking services and their security info classes that this server supports , +    return (masterrpcservices)rpcservices; , -   * @return list of blocking services and their security info classes that this server supports , +    return (masterrpcservices)rpcservices;
503 , -   */ , +  } , -   */ , }
504 , -  private list<blockingserviceandinterface> getservices() { , + , -  private list<blockingserviceandinterface> getservices() { , 
505 , -    list<blockingserviceandinterface> bssi = new arraylist<blockingserviceandinterface>(3); , +  public boolean balanceswitch(final boolean b) throws ioexception { , -    list<blockingserviceandinterface> bssi = new arraylist<blockingserviceandinterface>(3); , -  /**
506 , -    bssi.add(new blockingserviceandinterface( ," +    return getmasterrpcservices().switchbalancer(b', 'balanceswitchmode.async); ", -    bssi.add(new blockingserviceandinterface( , -   * @return list of blocking services and their security info classes that this server supports
507 , -        masterprotos.masterservice.newreflectiveblockingservice(this) , +  } , -        masterprotos.masterservice.newreflectiveblockingservice(this) , -   */
508 , -        masterprotos.masterservice.blockinginterface.class)); , + , -        masterprotos.masterservice.blockinginterface.class)); , -  private list<blockingserviceandinterface> getservices() {
509 , -    bssi.add(new blockingserviceandinterface( , +  protected string getprocessname() { , -    bssi.add(new blockingserviceandinterface( , -    list<blockingserviceandinterface> bssi = new arraylist<blockingserviceandinterface>(3);
510 , -        regionserverstatusprotos.regionserverstatusservice.newreflectiveblockingservice(this) , +    return master; , -        regionserverstatusprotos.regionserverstatusservice.newreflectiveblockingservice(this) , -    bssi.add(new blockingserviceandinterface(
511 , -        regionserverstatusprotos.regionserverstatusservice.blockinginterface.class)); , +  } , -        regionserverstatusprotos.regionserverstatusservice.blockinginterface.class)); , -        masterprotos.masterservice.newreflectiveblockingservice(this)
512 , -    return bssi; , + , -    return bssi; , -        masterprotos.masterservice.blockinginterface.class));
513 , +  @visiblefortesting , +  protected boolean cancreatebaseznode() { , +  @visiblefortesting , -    bssi.add(new blockingserviceandinterface(
514 , +  public masterrpcservices getmasterrpcservices() { , +    return true; , +  public masterrpcservices getmasterrpcservices() { , -        regionserverstatusprotos.regionserverstatusservice.newreflectiveblockingservice(this)
515 , +    return (masterrpcservices)rpcservices; , +  } , +    return (masterrpcservices)rpcservices; , -        regionserverstatusprotos.regionserverstatusservice.blockinginterface.class));
516 , } , + , } , -    return bssi;
517 ,  , +  protected boolean canupdatetabledescriptor() { ,  , +  public boolean balanceswitch(final boolean b) throws ioexception {
518 , -  /** , +    return true; , -  /** ," +    return getmasterrpcservices().switchbalancer(b', 'balanceswitchmode.async);"
519 , -   * stall startup if we are designated a backup master; i.e. we want someone , +  } , -   * stall startup if we are designated a backup master; i.e. we want someone , +  }
520 , -   * else to become the master before proceeding. , + , -   * else to become the master before proceeding. , +
521 , -   * @param c configuration , +  protected rsrpcservices createrpcservices() throws ioexception { , -   * @param c configuration , +  protected string getprocessname() {
522 , -   * @param amm , +    return new masterrpcservices(this); , -   * @param amm , +    return master;
523 , -   * @throws interruptedexception , +  } , -   * @throws interruptedexception , +  }
524 , -   */ , + , -   */ , +
525 , -  private static void stallifbackupmaster(final configuration c , +  protected void configureinfoserver() { , -  private static void stallifbackupmaster(final configuration c , +  protected boolean cancreatebaseznode() {
526 , -      final activemastermanager amm) ," +    infoserver.addservlet(""master-status""', '""/master-status""', 'masterstatusservlet.class); ", -      final activemastermanager amm) , +    return true;
527 , -  throws interruptedexception { ," +    infoserver.setattribute(master', 'this); ", -  throws interruptedexception { , +  }
528 ," [""-    // if we're a backup master"", 'stall until a primary to writes his address ", +    super.configureinfoserver(); ," [""-    // if we're a backup master"", 'stall until a primary to writes his address ", +
529 , -    if (!c.getboolean(hconstants.master_type_backup , +  } , -    if (!c.getboolean(hconstants.master_type_backup , +  protected boolean canupdatetabledescriptor() {
530 , -      hconstants.default_master_type_backup)) { , + , -      hconstants.default_master_type_backup)) { , +    return true;
531 , -      return; , +  protected class<? extends httpservlet> getdumpservlet() { , -      return; , +  }
532 , -    } , +    return masterdumpservlet.class; , -    } , +
533 ," -    log.debug(""hmaster started in backup mode.  "" + ", } ," -    log.debug(""hmaster started in backup mode.  "" + ", +  protected rsrpcservices createrpcservices() throws ioexception {
534 ," -      ""stalling until master znode is written.""); ",  ," -      ""stalling until master znode is written.""); ", +    return new masterrpcservices(this);
535 , -    // this will only be a minute or so while the cluster starts up , /** , -    // this will only be a minute or so while the cluster starts up , +  }
536 ," [""-    // so don't worry about setting watches on the parent znode""] ", -   * @return list of blocking services and their security info classes that this server supports ," [""-    // so don't worry about setting watches on the parent znode""] ", +
537 , -    while (!amm.isactivemaster()) { ," +   * emit the hmaster metrics', 'such as region in transition metrics. ", -    while (!amm.isactivemaster()) { , +  protected void configureinfoserver() {
538 ," -      log.debug(""waiting for master address znode to be written "" + "," [""+   * surrounding in a try block just to be sure metrics doesn't abort hmaster.""] "," -      log.debug(""waiting for master address znode to be written "" + "," +    infoserver.addservlet(""master-status""', '""/master-status""', 'masterstatusservlet.class);"
539 ," -        ""(also watching cluster state node)""); ", */ ," -        ""(also watching cluster state node)""); "," +    infoserver.setattribute(master', 'this);"
540 , -      thread.sleep( , -  private list<blockingserviceandinterface> getservices() { , -      thread.sleep( , +    super.configureinfoserver();
541 ," -        c.getint(hconstants.zk_session_timeout', 'hconstants.default_zk_session_timeout)); ", -    list<blockingserviceandinterface> bssi = new arraylist<blockingserviceandinterface>(3); ," -        c.getint(hconstants.zk_session_timeout', 'hconstants.default_zk_session_timeout)); ", +  }
542 , +  public boolean balanceswitch(final boolean b) throws ioexception { , -    bssi.add(new blockingserviceandinterface( , +  public boolean balanceswitch(final boolean b) throws ioexception { , +
543 ," +    return getmasterrpcservices().switchbalancer(b', 'balanceswitchmode.async); ", -        masterprotos.masterservice.newreflectiveblockingservice(this) ," +    return getmasterrpcservices().switchbalancer(b', 'balanceswitchmode.async); ", +  protected class<? extends httpservlet> getdumpservlet() {
544 , } , -        masterprotos.masterservice.blockinginterface.class)); , } , +    return masterdumpservlet.class;
545 ,  , -    bssi.add(new blockingserviceandinterface( ,  , }
546 , +  protected string getprocessname() { , -        regionserverstatusprotos.regionserverstatusservice.newreflectiveblockingservice(this) , +  protected string getprocessname() { , 
547 , +    return master; , -        regionserverstatusprotos.regionserverstatusservice.blockinginterface.class)); , +    return master; , /**
548 , } , -    return bssi; , } , -   * stall startup if we are designated a backup master; i.e. we want someone
549 ,  , -  } ,  , -   * else to become the master before proceeding.
550 , -  metricsmaster getmetrics() { , - , -  metricsmaster getmetrics() { , -   * @param c configuration
551 , -    return metricsmaster; , -  /** , -    return metricsmaster; , -   * @param amm
552 , +  protected boolean cancreatebaseznode() { , -   * stall startup if we are designated a backup master; i.e. we want someone , +  protected boolean cancreatebaseznode() { , -   * @throws interruptedexception
553 , +    return true; , -   * else to become the master before proceeding. , +    return true; ," +   * emit the hmaster metrics', 'such as region in transition metrics."
554 , } , -   * @param c configuration , } ," [""+   * surrounding in a try block just to be sure metrics doesn't abort hmaster.""]"
555 ,  , -   * @param amm ,  , */
556 , -  /** , -   * @throws interruptedexception , -  /** , -  private static void stallifbackupmaster(final configuration c
557 , -   * main processing loop for the hmaster. , -   */ , -   * main processing loop for the hmaster. , -      final activemastermanager amm)
558 , -   * <ol> , -  private static void stallifbackupmaster(final configuration c , -   * <ol> , -  throws interruptedexception {
559 , -   * <li>block until becoming active master , -      final activemastermanager amm) , -   * <li>block until becoming active master ," [""-    // if we're a backup master"", 'stall until a primary to writes his address"
560 , -   * <li>finish initialization via finishinitialization(monitoredtask) , -  throws interruptedexception { , -   * <li>finish initialization via finishinitialization(monitoredtask) , -    if (!c.getboolean(hconstants.master_type_backup
561 , -   * <li>enter loop until we are stopped ," [""-    // if we're a backup master"", 'stall until a primary to writes his address ", -   * <li>enter loop until we are stopped , -      hconstants.default_master_type_backup)) {
562 , -   * <li>stop services and perform cleanup once stopped , -    if (!c.getboolean(hconstants.master_type_backup , -   * <li>stop services and perform cleanup once stopped , -      return;
563 , -   * </ol> , -      hconstants.default_master_type_backup)) { , -   * </ol> , +  protected void dometrics() {
564 , -   */ , -      return; , -   */ , +    try {
565 , -  @override , -    } , -  @override , +      if (assignmentmanager != null) {
566 , -  public void run() { ," -    log.debug(""hmaster started in backup mode.  "" + ", -  public void run() { , +        assignmentmanager.updateregionsintransitionmetrics();
567 , -    monitoredtask startupstatus = ," -      ""stalling until master znode is written.""); ", -    monitoredtask startupstatus = , }
568 ," -      taskmonitor.get().createstatus(""master startup""); ", -    // this will only be a minute or so while the cluster starts up ," -      taskmonitor.get().createstatus(""master startup""); "," -    log.debug(""hmaster started in backup mode.  "" +"
569 ," -    startupstatus.setdescription(""master startup""); "," [""-    // so don't worry about setting watches on the parent znode""] "," -    startupstatus.setdescription(""master startup""); "," -      ""stalling until master znode is written."");"
570 , -    masterstarttime = system.currenttimemillis(); , -    while (!amm.isactivemaster()) { , -    masterstarttime = system.currenttimemillis(); , -    // this will only be a minute or so while the cluster starts up
571 , -    try { ," -      log.debug(""waiting for master address znode to be written "" + ", -    try { ," [""-    // so don't worry about setting watches on the parent znode""]"
572 ," -      this.masteraddresstracker = new masteraddresstracker(getzookeeperwatcher()', 'this); "," -        ""(also watching cluster state node)""); "," -      this.masteraddresstracker = new masteraddresstracker(getzookeeperwatcher()', 'this); ", -    while (!amm.isactivemaster()) {
573 , -      this.masteraddresstracker.start(); , -      thread.sleep( , -      this.masteraddresstracker.start(); ," -      log.debug(""waiting for master address znode to be written "" +"
574 , - ," -        c.getint(hconstants.zk_session_timeout', 'hconstants.default_zk_session_timeout)); ", - ," -        ""(also watching cluster state node)"");"
575 , -      // put up info server. , -    } , -      // put up info server. , -      thread.sleep(
576 ," -      int port = this.conf.getint(""hbase.master.info.port""', 'hconstants.default_master_infoport); ", - ," -      int port = this.conf.getint(""hbase.master.info.port""', 'hconstants.default_master_infoport); "," -        c.getint(hconstants.zk_session_timeout', 'hconstants.default_zk_session_timeout));"
577 , -      if (port >= 0) { , -  } , -      if (port >= 0) { , +    } catch (throwable e) {
578 ," -        string a = this.conf.get(""hbase.master.info.bindaddress""', '""0.0.0.0""); ", - ," -        string a = this.conf.get(""hbase.master.info.bindaddress""', '""0.0.0.0""); "," +      log.error(""couldn\'t update metrics: "" + e.getmessage());"
579 ," -        this.infoserver = new infoserver(master', 'a', 'port', 'false', 'this.conf); ", -  metricsmaster getmetrics() { ," -        this.infoserver = new infoserver(master', 'a', 'port', 'false', 'this.conf); ", }
580 ," -        this.infoserver.addservlet(""status""', '""/master-status""', 'masterstatusservlet.class); ", -    return metricsmaster; ," -        this.infoserver.addservlet(""status""', '""/master-status""', 'masterstatusservlet.class); ", -
581 ," -        this.infoserver.addservlet(""dump""', '""/dump""', 'masterdumpservlet.class); ", -  } ," -        this.infoserver.addservlet(""dump""', '""/dump""', 'masterdumpservlet.class); ", }
582 ," -        this.infoserver.setattribute(master', 'this); ", - ," -        this.infoserver.setattribute(master', 'this); ", 
583 , -        this.infoserver.start(); , -  /** , -        this.infoserver.start(); , -  metricsmaster getmetrics() {
584 , +  protected boolean canupdatetabledescriptor() { , -   * main processing loop for the hmaster. , +  protected boolean canupdatetabledescriptor() { , +  metricsmaster getmastermetrics() {
585 , +    return true; , -   * <ol> , +    return true; , return metricsmaster;
586 , } , -   * <li>block until becoming active master , } , }
587 ,  , -   * <li>finish initialization via finishinitialization(monitoredtask) ,  , 
588 , -      this.registeredzklistenersbeforerecovery = this.zookeeper.getlisteners(); , -   * <li>enter loop until we are stopped , -      this.registeredzklistenersbeforerecovery = this.zookeeper.getlisteners(); , -  /**
589 , -      /* , -   * <li>stop services and perform cleanup once stopped , -      /* , -   * main processing loop for the hmaster.
590 , -       * block on becoming the active master. , -   * </ol> , -       * block on becoming the active master. , -   * <ol>
591 , -       * , -   */ , -       * , -   * <li>block until becoming active master
592 , -       * we race with other masters to write our address into zookeeper.  if we , -  @override , -       * we race with other masters to write our address into zookeeper.  if we , -   * <li>finish initialization via finishinitialization(monitoredtask)
593 ," -       * succeed', 'we are the primary/active master and finish initialization. ", -  public void run() { ," -       * succeed', 'we are the primary/active master and finish initialization. ", -   * <li>enter loop until we are stopped
594 , -       * , -    monitoredtask startupstatus = , -       * , -   * <li>stop services and perform cleanup once stopped
595 ," -       * if we do not succeed', 'there is another active master and we should "," -      taskmonitor.get().createstatus(""master startup""); "," -       * if we do not succeed', 'there is another active master and we should ", -   * </ol>
596 , -       * now wait until it dies to try and become the next active master.  if we ," -    startupstatus.setdescription(""master startup""); ", -       * now wait until it dies to try and become the next active master.  if we , -   */
597 ," -       * do not succeed on our first attempt', 'this is no longer a cluster startup. ", -    masterstarttime = system.currenttimemillis(); ," -       * do not succeed on our first attempt', 'this is no longer a cluster startup. ", -  @override
598 , -       */ , +  protected void dometrics() { , -       */ , -  public void run() {
599 , -      becomeactivemaster(startupstatus); , try { , -      becomeactivemaster(startupstatus); , -    monitoredtask startupstatus =
600 , +  protected rsrpcservices createrpcservices() throws ioexception { ," -      this.masteraddresstracker = new masteraddresstracker(getzookeeperwatcher()', 'this); ", +  protected rsrpcservices createrpcservices() throws ioexception { ," -      taskmonitor.get().createstatus(""master startup"");"
601 , +    return new masterrpcservices(this); , -      this.masteraddresstracker.start(); , +    return new masterrpcservices(this); ," -    startupstatus.setdescription(""master startup"");"
602 , +  } , - , +  } , -    masterstarttime = system.currenttimemillis();
603 ,  , -      // put up info server. ,  , -    try {
604 , -      // we are either the active master or we were asked to shutdown ," -      int port = this.conf.getint(""hbase.master.info.port""', 'hconstants.default_master_infoport); ", -      // we are either the active master or we were asked to shutdown ," -      this.masteraddresstracker = new masteraddresstracker(getzookeeperwatcher()', 'this);"
605 , -      if (!this.stopped) { , -      if (port >= 0) { , -      if (!this.stopped) { , -      this.masteraddresstracker.start();
606 ," -        finishinitialization(startupstatus', 'false); "," -        string a = this.conf.get(""hbase.master.info.bindaddress""', '""0.0.0.0""); "," -        finishinitialization(startupstatus', 'false); ", -
607 , -        loop(); ," -        this.infoserver = new infoserver(master', 'a', 'port', 'false', 'this.conf); ", -        loop(); , -      // put up info server.
608 , +  protected void configureinfoserver() { ," -        this.infoserver.addservlet(""status""', '""/master-status""', 'masterstatusservlet.class); ", +  protected void configureinfoserver() { ," -      int port = this.conf.getint(""hbase.master.info.port""', 'hconstants.default_master_infoport);"
609 ," +    infoserver.addservlet(""master-status""', '""/master-status""', 'masterstatusservlet.class); "," -        this.infoserver.addservlet(""dump""', '""/dump""', 'masterdumpservlet.class); "," +    infoserver.addservlet(""master-status""', '""/master-status""', 'masterstatusservlet.class); ", -      if (port >= 0) {
610 ," +    infoserver.setattribute(master', 'this); "," -        this.infoserver.setattribute(master', 'this); "," +    infoserver.setattribute(master', 'this); "," -        string a = this.conf.get(""hbase.master.info.bindaddress""', '""0.0.0.0"");"
611 , +    super.configureinfoserver(); , -        this.infoserver.start(); , +    super.configureinfoserver(); ," -        this.infoserver = new infoserver(master', 'a', 'port', 'false', 'this.conf);"
612 , } , +      if (assignmentmanager != null) { , } ," -        this.infoserver.addservlet(""status""', '""/master-status""', 'masterstatusservlet.class);"
613 , -    } catch (throwable t) { , +        assignmentmanager.updateregionsintransitionmetrics(); , -    } catch (throwable t) { ," -        this.infoserver.addservlet(""dump""', '""/dump""', 'masterdumpservlet.class);"
614 , -      // hbase-5680: likely hadoop23 vs hadoop 20.x/1.x incompatibility , +      } , -      // hbase-5680: likely hadoop23 vs hadoop 20.x/1.x incompatibility ," -        this.infoserver.setattribute(master', 'this);"
615 , -      if (t instanceof noclassdeffounderror && , +    } catch (throwable e) { , -      if (t instanceof noclassdeffounderror && , -        this.infoserver.start();
616 ," -          t.getmessage().contains(""org/apache/hadoop/hdfs/protocol/fsconstants$safemodeaction"")) { "," +      log.error(""couldn\'t update metrics: "" + e.getmessage()); "," -          t.getmessage().contains(""org/apache/hadoop/hdfs/protocol/fsconstants$safemodeaction"")) { ", -      }
617 , -          // improved error message for this special case , +    } , -          // improved error message for this special case , -
618 ," -          abort(""hbase is having a problem with its hadoop jars.  you may need to "" ", } ," -          abort(""hbase is having a problem with its hadoop jars.  you may need to "" ", -      this.registeredzklistenersbeforerecovery = this.zookeeper.getlisteners();
619 ," -              + ""recompile hbase against hadoop version "" ",  ," -              + ""recompile hbase against hadoop version "" ", -      /*
620 , -              +  org.apache.hadoop.util.versioninfo.getversion() , -      this.registeredzklistenersbeforerecovery = this.zookeeper.getlisteners(); , -              +  org.apache.hadoop.util.versioninfo.getversion() , -       * block on becoming the active master.
621 ," -              + "" or change your hadoop jars to start properly""', 't); ", -      /* ," -              + "" or change your hadoop jars to start properly""', 't); ", -       *
622 , -      } else { , -       * block on becoming the active master. , -      } else { , -       * we race with other masters to write our address into zookeeper.  if we
623 ," -        abort(""unhandled exception. starting shutdown.""', 't); ", -       * ," -        abort(""unhandled exception. starting shutdown.""', 't); "," -       * succeed', 'we are the primary/active master and finish initialization."
624 , + , -       * we race with other masters to write our address into zookeeper.  if we , + , -       *
625 , +  protected class<? extends httpservlet> getdumpservlet() { ," -       * succeed', 'we are the primary/active master and finish initialization. ", +  protected class<? extends httpservlet> getdumpservlet() { ," -       * if we do not succeed', 'there is another active master and we should"
626 , +    return masterdumpservlet.class; , -       * , +    return masterdumpservlet.class; , -       * now wait until it dies to try and become the next active master.  if we
627 , } ," -       * if we do not succeed', 'there is another active master and we should ", } ," -       * do not succeed on our first attempt', 'this is no longer a cluster startup."
628 , -    } finally { , -       * now wait until it dies to try and become the next active master.  if we , -    } finally { , -       */
629 , -      startupstatus.cleanup(); ," -       * do not succeed on our first attempt', 'this is no longer a cluster startup. ", -      startupstatus.cleanup(); , -      becomeactivemaster(startupstatus);
630 ,  , -       */ ,  , -
631 , -      stopchores(); , -      becomeactivemaster(startupstatus); , -      stopchores(); , -      // we are either the active master or we were asked to shutdown
632 , -      // wait for all the remaining region servers to report in iff we were , - , -      // wait for all the remaining region servers to report in iff we were , -      if (!this.stopped) {
633 , -      // running a cluster shutdown and we were not aborting. , -      // we are either the active master or we were asked to shutdown , -      // running a cluster shutdown and we were not aborting. ," -        finishinitialization(startupstatus', 'false);"
634 , -      if (!this.abort && this.servermanager != null && , -      if (!this.stopped) { , -      if (!this.abort && this.servermanager != null && , -        loop();
635 , -          this.servermanager.isclustershutdown()) { ," -        finishinitialization(startupstatus', 'false); ", -          this.servermanager.isclustershutdown()) { , -      }
636 , -        this.servermanager.letregionserversshutdown(); , -        loop(); , -        this.servermanager.letregionserversshutdown(); , -    } catch (throwable t) {
637 , +  /** , -      } , +  /** , -      // hbase-5680: likely hadoop23 vs hadoop 20.x/1.x incompatibility
638 ," +   * emit the hmaster metrics', 'such as region in transition metrics. ", -    } catch (throwable t) { ," +   * emit the hmaster metrics', 'such as region in transition metrics. ", -      if (t instanceof noclassdeffounderror &&
639 ," [""+   * surrounding in a try block just to be sure metrics doesn't abort hmaster.""] ", -      // hbase-5680: likely hadoop23 vs hadoop 20.x/1.x incompatibility ," [""+   * surrounding in a try block just to be sure metrics doesn't abort hmaster.""] "," -          t.getmessage().contains(""org/apache/hadoop/hdfs/protocol/fsconstants$safemodeaction"")) {"
640 , +   */ , -      if (t instanceof noclassdeffounderror && , +   */ , -          // improved error message for this special case
641 , +  protected void dometrics() { ," -          t.getmessage().contains(""org/apache/hadoop/hdfs/protocol/fsconstants$safemodeaction"")) { ", +  protected void dometrics() { ," -          abort(""hbase is having a problem with its hadoop jars.  you may need to """
642 , +    try { , -          // improved error message for this special case , +    try { ," -              + ""recompile hbase against hadoop version """
643 , +      if (assignmentmanager != null) { ," -          abort(""hbase is having a problem with its hadoop jars.  you may need to "" ", +      if (assignmentmanager != null) { , -              +  org.apache.hadoop.util.versioninfo.getversion()
644 , +        assignmentmanager.updateregionsintransitionmetrics(); ," -              + ""recompile hbase against hadoop version "" ", +        assignmentmanager.updateregionsintransitionmetrics(); ," -              + "" or change your hadoop jars to start properly""', 't);"
645 , } , -              +  org.apache.hadoop.util.versioninfo.getversion() , } , -      } else {
646 , -      stopservicethreads(); ," -              + "" or change your hadoop jars to start properly""', 't); ", -      stopservicethreads(); ," -        abort(""unhandled exception. starting shutdown.""', 't);"
647 , -      // stop services started for both backup and active masters , -      } else { , -      // stop services started for both backup and active masters , -      }
648 , -      if (this.activemastermanager != null) this.activemastermanager.stop(); ," -        abort(""unhandled exception. starting shutdown.""', 't); ", -      if (this.activemastermanager != null) this.activemastermanager.stop(); , -    } finally {
649 , -      if (this.catalogtracker != null) this.catalogtracker.stop(); , -      } , -      if (this.catalogtracker != null) this.catalogtracker.stop(); , -      startupstatus.cleanup();
650 , -      if (this.servermanager != null) this.servermanager.stop(); , -    } finally { , -      if (this.servermanager != null) this.servermanager.stop(); , -
651 , -      if (this.assignmentmanager != null) this.assignmentmanager.stop(); , -      startupstatus.cleanup(); , -      if (this.assignmentmanager != null) this.assignmentmanager.stop(); , -      stopchores();
652 , -      if (this.filesystemmanager != null) this.filesystemmanager.stop(); , - , -      if (this.filesystemmanager != null) this.filesystemmanager.stop(); , -      // wait for all the remaining region servers to report in iff we were
653 ," -      if (this.mpmhost != null) this.mpmhost.stop(""server shutting down.""); ", -      stopchores(); ," -      if (this.mpmhost != null) this.mpmhost.stop(""server shutting down.""); ", -      // running a cluster shutdown and we were not aborting.
654 , -      this.zookeeper.close(); , -      // wait for all the remaining region servers to report in iff we were , -      this.zookeeper.close(); , -      if (!this.abort && this.servermanager != null &&
655 , +    } catch (throwable e) { , -      // running a cluster shutdown and we were not aborting. , +    } catch (throwable e) { , -          this.servermanager.isclustershutdown()) {
656 ," +      log.error(""couldn\'t update metrics: "" + e.getmessage()); ", -      if (!this.abort && this.servermanager != null && ," +      log.error(""couldn\'t update metrics: "" + e.getmessage()); ", -        this.servermanager.letregionserversshutdown();
657 , } , -          this.servermanager.isclustershutdown()) { , } , -      }
658 ," -    log.info(""hmaster main thread exiting""); ", -        this.servermanager.letregionserversshutdown(); ," -    log.info(""hmaster main thread exiting""); ", -      stopservicethreads();
659 , } , -      } , } , -      // stop services started for both backup and active masters
660 ,  , -      stopservicethreads(); ,  , -      if (this.activemastermanager != null) this.activemastermanager.stop();
661 , -  /** , -      // stop services started for both backup and active masters , -  /** , -      if (this.catalogtracker != null) this.catalogtracker.stop();
662 , -   * try becoming active master. , -      if (this.activemastermanager != null) this.activemastermanager.stop(); , -   * try becoming active master. , -      if (this.servermanager != null) this.servermanager.stop();
663 , -   * @param startupstatus , -      if (this.catalogtracker != null) this.catalogtracker.stop(); , -   * @param startupstatus , -      if (this.assignmentmanager != null) this.assignmentmanager.stop();
664 , -   * @return true if we could successfully become the active master. , -      if (this.servermanager != null) this.servermanager.stop(); , -   * @return true if we could successfully become the active master. , -      if (this.filesystemmanager != null) this.filesystemmanager.stop();
665 , -   * @throws interruptedexception , -      if (this.assignmentmanager != null) this.assignmentmanager.stop(); , -   * @throws interruptedexception ," -      if (this.mpmhost != null) this.mpmhost.stop(""server shutting down."");"
666 , -   */ , -      if (this.filesystemmanager != null) this.filesystemmanager.stop(); , -   */ , -      this.zookeeper.close();
667 , -  private boolean becomeactivemaster(monitoredtask startupstatus) ," -      if (this.mpmhost != null) this.mpmhost.stop(""server shutting down.""); ", -  private boolean becomeactivemaster(monitoredtask startupstatus) , -    }
668 , -  throws interruptedexception { , -      this.zookeeper.close(); , -  throws interruptedexception { ," -    log.info(""hmaster main thread exiting"");"
669 , -    // todo: this is wrong!!!! should have new servername if we restart ourselves , -    } , -    // todo: this is wrong!!!! should have new servername if we restart ourselves , -  }
670 , -    // if we come back to life. ," -    log.info(""hmaster main thread exiting""); ", -    // if we come back to life. , -
671 ," -    this.activemastermanager = new activemastermanager(zookeeper', 'this.servername ", -  } ," -    this.activemastermanager = new activemastermanager(zookeeper', 'this.servername ", -  /**
672 , -        this); , - , -        this); , -   * try becoming active master.
673 , -    this.zookeeper.registerlistener(activemastermanager); , -  /** , -    this.zookeeper.registerlistener(activemastermanager); , -   * @param startupstatus
674 ," -    stallifbackupmaster(this.conf', 'this.activemastermanager); ", -   * try becoming active master. ," -    stallifbackupmaster(this.conf', 'this.activemastermanager); ", -   * @return true if we could successfully become the active master.
675 , - , -   * @param startupstatus , - , -   * @throws interruptedexception
676 , -    // the clusterstatustracker is setup before the other , -   * @return true if we could successfully become the active master. , -    // the clusterstatustracker is setup before the other , -   */
677 ," [""-    // zkbasedsystemtrackers because it's needed by the activemastermanager""] ", -   * @throws interruptedexception ," [""-    // zkbasedsystemtrackers because it's needed by the activemastermanager""] ", -  private boolean becomeactivemaster(monitoredtask startupstatus)
678 , -    // to check if the cluster should be shutdown. , -   */ , -    // to check if the cluster should be shutdown. , -  throws interruptedexception {
679 ," -    this.clusterstatustracker = new clusterstatustracker(getzookeeper()', 'this); ", -  private boolean becomeactivemaster(monitoredtask startupstatus) ," -    this.clusterstatustracker = new clusterstatustracker(getzookeeper()', 'this); ", -    // todo: this is wrong!!!! should have new servername if we restart ourselves
680 , -    this.clusterstatustracker.start(); , -  throws interruptedexception { , -    this.clusterstatustracker.start(); , -    // if we come back to life.
681 , -    return this.activemastermanager.blockuntilbecomingactivemaster(startupstatus); , -    // todo: this is wrong!!!! should have new servername if we restart ourselves , -    return this.activemastermanager.blockuntilbecomingactivemaster(startupstatus); ," -    this.activemastermanager = new activemastermanager(zookeeper', 'this.servername"
682 , +  metricsmaster getmastermetrics() { , -    // if we come back to life. , +  metricsmaster getmastermetrics() { , -        this);
683 , +    return metricsmaster; ," -    this.activemastermanager = new activemastermanager(zookeeper', 'this.servername ", +    return metricsmaster; , -    this.zookeeper.registerlistener(activemastermanager);
684 , } , -        this); , } ," -    stallifbackupmaster(this.conf', 'this.activemastermanager);"
685 ,  , -    this.zookeeper.registerlistener(activemastermanager); ,  , -
686 , /** ," -    stallifbackupmaster(this.conf', 'this.activemastermanager); ", /** , -    // the clusterstatustracker is setup before the other
687 ," @@ -683', '14 +332', '11 @@ masterservices', 'server { ", - ," @@ -683', '14 +332', '11 @@ masterservices', 'server { "," [""-    // zkbasedsystemtrackers because it's needed by the activemastermanager""]"
688 , */ , -    // the clusterstatustracker is setup before the other , */ , -    // to check if the cluster should be shutdown.
689 , void initializezkbasedsystemtrackers() throws ioexception ," [""-    // zkbasedsystemtrackers because it's needed by the activemastermanager""] ", void initializezkbasedsystemtrackers() throws ioexception ," -    this.clusterstatustracker = new clusterstatustracker(getzookeeper()', 'this);"
690 ," interruptedexception', 'keeperexception { ", -    // to check if the cluster should be shutdown. ," interruptedexception', 'keeperexception { ", -    this.clusterstatustracker.start();
691 ," -    this.catalogtracker = createcatalogtracker(this.zookeeper', 'this.conf', 'this); "," -    this.clusterstatustracker = new clusterstatustracker(getzookeeper()', 'this); "," -    this.catalogtracker = createcatalogtracker(this.zookeeper', 'this.conf', 'this); ", -    return this.activemastermanager.blockuntilbecomingactivemaster(startupstatus);
692 , -    this.catalogtracker.start(); , -    this.clusterstatustracker.start(); , -    this.catalogtracker.start(); , -  }
693 , - , -    return this.activemastermanager.blockuntilbecomingactivemaster(startupstatus); , - , -
694 , this.balancer = loadbalancerfactory.getloadbalancer(conf); , +  metricsmaster getmastermetrics() { , this.balancer = loadbalancerfactory.getloadbalancer(conf); , /**
695 ," this.loadbalancertracker = new loadbalancertracker(zookeeper', 'this); ", +    return metricsmaster; ," this.loadbalancertracker = new loadbalancertracker(zookeeper', 'this); ", * initialize all zk based system trackers.
696 , this.loadbalancertracker.start(); , } , this.loadbalancertracker.start(); , * @throws ioexception
697 ," this.assignmentmanager = new assignmentmanager(this', 'servermanager ",  ," this.assignmentmanager = new assignmentmanager(this', 'servermanager "," @@ -683', '14 +332', '11 @@ masterservices', 'server {"
698 ," -      this.catalogtracker', 'this.balancer', 'this.executorservice', 'this.metricsmaster ", /** ," -      this.catalogtracker', 'this.balancer', 'this.executorservice', 'this.metricsmaster ", */
699 ," +      this.catalogtracker', 'this.balancer', 'this.service', 'this.metricsmaster "," @@ -683', '14 +332', '11 @@ masterservices', 'server { "," +      this.catalogtracker', 'this.balancer', 'this.service', 'this.metricsmaster ", void initializezkbasedsystemtrackers() throws ioexception
700 , this.tablelockmanager); , */ , this.tablelockmanager); ," interruptedexception', 'keeperexception {"
701 , zookeeper.registerlistenerfirst(assignmentmanager); , void initializezkbasedsystemtrackers() throws ioexception , zookeeper.registerlistenerfirst(assignmentmanager); ," -    this.catalogtracker = createcatalogtracker(this.zookeeper', 'this.conf', 'this);"
702 ,  ," interruptedexception', 'keeperexception { ",  , -    this.catalogtracker.start();
703 ," @@ -720', '74 +366', '26 @@ masterservices', 'server { "," -    this.catalogtracker = createcatalogtracker(this.zookeeper', 'this.conf', 'this); "," @@ -720', '74 +366', '26 @@ masterservices', 'server { ", -
704 ," this.mpmhost.initialize(this', 'this.metricsmaster); ", -    this.catalogtracker.start(); ," this.mpmhost.initialize(this', 'this.metricsmaster); ", this.balancer = loadbalancerfactory.getloadbalancer(conf);
705 , } , - , } ," this.loadbalancertracker = new loadbalancertracker(zookeeper', 'this);"
706 ,  , this.balancer = loadbalancerfactory.getloadbalancer(conf); ,  , this.loadbalancertracker.start();
707 , -  /** ," this.loadbalancertracker = new loadbalancertracker(zookeeper', 'this); ", -  /** ," this.assignmentmanager = new assignmentmanager(this', 'servermanager"
708 , -   * create catalogtracker. , this.loadbalancertracker.start(); , -   * create catalogtracker. ," -      this.catalogtracker', 'this.balancer', 'this.executorservice', 'this.metricsmaster"
709 , -   * in its own method so can intercept and mock it over in tests. ," this.assignmentmanager = new assignmentmanager(this', 'servermanager ", -   * in its own method so can intercept and mock it over in tests. ," +      this.catalogtracker', 'this.balancer', 'this.service', 'this.metricsmaster"
710 ," -   * @param zk if zk is null', ""we'll create an instance (and shut it down""] "," -      this.catalogtracker', 'this.balancer', 'this.executorservice', 'this.metricsmaster "," -   * @param zk if zk is null', ""we'll create an instance (and shut it down""] ", this.tablelockmanager);
711 ," [""-   * when {@link #stop(string)} is called) else we'll use what is passed.""] "," +      this.catalogtracker', 'this.balancer', 'this.service', 'this.metricsmaster "," [""-   * when {@link #stop(string)} is called) else we'll use what is passed.""] ", zookeeper.registerlistenerfirst(assignmentmanager);
712 , -   * @param conf , this.tablelockmanager); , -   * @param conf , 
713 ," [""-   * @param abortable if fatal exception we'll call abort on this.  may be null.""] ", zookeeper.registerlistenerfirst(assignmentmanager); ," [""-   * @param abortable if fatal exception we'll call abort on this.  may be null.""] "," @@ -720', '74 +366', '26 @@ masterservices', 'server {"
714 ," [""-   * if it is we'll use the connection associated with the passed""] ",  ," [""-   * if it is we'll use the connection associated with the passed""] "," this.mpmhost.initialize(this', 'this.metricsmaster);"
715 , -   * {@link configuration} as our {@link abortable}. ," @@ -720', '74 +366', '26 @@ masterservices', 'server { ", -   * {@link configuration} as our {@link abortable}. , }
716 , -   * ({@link object#wait(long)} when passed a <code>0</code> waits for ever). ," this.mpmhost.initialize(this', 'this.metricsmaster); ", -   * ({@link object#wait(long)} when passed a <code>0</code> waits for ever). , 
717 , -   * @throws ioexception , } , -   * @throws ioexception , -  /**
718 , -   */ ,  , -   */ , -   * create catalogtracker.
719 , -  catalogtracker createcatalogtracker(final zookeeperwatcher zk , -  /** , -  catalogtracker createcatalogtracker(final zookeeperwatcher zk , -   * in its own method so can intercept and mock it over in tests.
720 ," -      final configuration conf', 'abortable abortable) ", -   * create catalogtracker. ," -      final configuration conf', 'abortable abortable) "," -   * @param zk if zk is null', ""we'll create an instance (and shut it down""]"
721 , -  throws ioexception { , -   * in its own method so can intercept and mock it over in tests. , -  throws ioexception { ," [""-   * when {@link #stop(string)} is called) else we'll use what is passed.""]"
722 ," -    return new catalogtracker(zk', 'conf', 'abortable); "," -   * @param zk if zk is null', ""we'll create an instance (and shut it down""] "," -    return new catalogtracker(zk', 'conf', 'abortable); ", -   * @param conf
723 , -  } ," [""-   * when {@link #stop(string)} is called) else we'll use what is passed.""] ", -  } ," [""-   * @param abortable if fatal exception we'll call abort on this.  may be null.""]"
724 , - , -   * @param conf , - ," [""-   * if it is we'll use the connection associated with the passed""]"
725 , -  // check if we should stop every 100ms ," [""-   * @param abortable if fatal exception we'll call abort on this.  may be null.""] ", -  // check if we should stop every 100ms , -   * {@link configuration} as our {@link abortable}.
726 ," -  private sleeper stopsleeper = new sleeper(100', 'this); "," [""-   * if it is we'll use the connection associated with the passed""] "," -  private sleeper stopsleeper = new sleeper(100', 'this); ", -   * ({@link object#wait(long)} when passed a <code>0</code> waits for ever).
727 , - , -   * {@link configuration} as our {@link abortable}. , - , -   * @throws ioexception
728 , -  private void loop() { , -   * ({@link object#wait(long)} when passed a <code>0</code> waits for ever). , -  private void loop() { , -   */
729 , -    long lastmsgts = 0l; , -   * @throws ioexception , -    long lastmsgts = 0l; , -  catalogtracker createcatalogtracker(final zookeeperwatcher zk
730 , -    long now = 0l; , -   */ , -    long now = 0l; ," -      final configuration conf', 'abortable abortable)"
731 , -    while (!this.stopped) { , -  catalogtracker createcatalogtracker(final zookeeperwatcher zk , -    while (!this.stopped) { , -  throws ioexception {
732 , -      now = system.currenttimemillis(); ," -      final configuration conf', 'abortable abortable) ", -      now = system.currenttimemillis(); ," -    return new catalogtracker(zk', 'conf', 'abortable);"
733 , -      if ((now - lastmsgts) >= this.msginterval) { , -  throws ioexception { , -      if ((now - lastmsgts) >= this.msginterval) { , -  }
734 , -        dometrics(); ," -    return new catalogtracker(zk', 'conf', 'abortable); ", -        dometrics(); , -
735 , -        lastmsgts = system.currenttimemillis(); , -  } , -        lastmsgts = system.currenttimemillis(); , -  // check if we should stop every 100ms
736 , -      } , - , -      } ," -  private sleeper stopsleeper = new sleeper(100', 'this);"
737 , -      stopsleeper.sleep(); , -  // check if we should stop every 100ms , -      stopsleeper.sleep(); , -
738 , -    } ," -  private sleeper stopsleeper = new sleeper(100', 'this); ", -    } , -  private void loop() {
739 , -  } , - , -  } , -    long lastmsgts = 0l;
740 , - , -  private void loop() { , - , -    long now = 0l;
741 , -  /** , -    long lastmsgts = 0l; , -  /** , -    while (!this.stopped) {
742 ," -   * emit the hmaster metrics', 'such as region in transition metrics. ", -    long now = 0l; ," -   * emit the hmaster metrics', 'such as region in transition metrics. ", -      now = system.currenttimemillis();
743 ," [""-   * surrounding in a try block just to be sure metrics doesn't abort hmaster.""] ", -    while (!this.stopped) { ," [""-   * surrounding in a try block just to be sure metrics doesn't abort hmaster.""] ", -      if ((now - lastmsgts) >= this.msginterval) {
744 , -   */ , -      now = system.currenttimemillis(); , -   */ , -        dometrics();
745 , -  private void dometrics() { , -      if ((now - lastmsgts) >= this.msginterval) { , -  private void dometrics() { , -        lastmsgts = system.currenttimemillis();
746 , -    try { , -        dometrics(); , -    try { , -      }
747 , -      this.assignmentmanager.updateregionsintransitionmetrics(); , -        lastmsgts = system.currenttimemillis(); , -      this.assignmentmanager.updateregionsintransitionmetrics(); , -      stopsleeper.sleep();
748 , -    } catch (throwable e) { , -      } , -    } catch (throwable e) { , -    }
749 ," -      log.error(""couldn\'t update metrics: "" + e.getmessage()); ", -      stopsleeper.sleep(); ," -      log.error(""couldn\'t update metrics: "" + e.getmessage()); ", -  }
750 , -    } , -    } , -    } , -
751 , -  } , -  } , -  } , -  /**
752 , - , - , - ," -   * emit the hmaster metrics', 'such as region in transition metrics."
753 , /** , -  /** , /** ," [""-   * surrounding in a try block just to be sure metrics doesn't abort hmaster.""]"
754 , * finish initialization of hmaster after becoming the primary master. ," -   * emit the hmaster metrics', 'such as region in transition metrics. ", * finish initialization of hmaster after becoming the primary master. , -   */
755 , * ," [""-   * surrounding in a try block just to be sure metrics doesn't abort hmaster.""] ", * , -  private void dometrics() {
756 , * <ol> , -   */ , * <ol> , -    try {
757 ," * <li>initialize master components - file system manager', 'server manager ", -  private void dometrics() { ," * <li>initialize master components - file system manager', 'server manager ", -      this.assignmentmanager.updateregionsintransitionmetrics();
758 ," -   *     assignment manager', 'region server tracker', 'catalog tracker', 'etc</li> ", -    try { ," -   *     assignment manager', 'region server tracker', 'catalog tracker', 'etc</li> ", -    } catch (throwable e) {
759 ," -   * <li>start necessary service threads - rpc server', 'info server ", -      this.assignmentmanager.updateregionsintransitionmetrics(); ," -   * <li>start necessary service threads - rpc server', 'info server "," -      log.error(""couldn\'t update metrics: "" + e.getmessage());"
760 ," +   *     assignment manager', 'region server tracker', 'etc</li> ", -    } catch (throwable e) { ," +   *     assignment manager', 'region server tracker', 'etc</li> ", -    }
761 ," +   * <li>start necessary service threads - balancer', 'catalog janior "," -      log.error(""couldn\'t update metrics: "" + e.getmessage()); "," +   * <li>start necessary service threads - balancer', 'catalog janior ", -  }
762 ," *     executor services', 'etc</li> ", -    } ," *     executor services', 'etc</li> ", -
763 , * <li>set cluster as up in zookeeper</li> , -  } , * <li>set cluster as up in zookeeper</li> , /**
764 , * <li>wait for regionservers to check-in</li> , - , * <li>wait for regionservers to check-in</li> , * finish initialization of hmaster after becoming the primary master.
765 ," * <li>split logs and perform data recovery', 'if necessary</li> ", /** ," * <li>split logs and perform data recovery', 'if necessary</li> ", *
766 , -   * <li>ensure assignment of meta regions<li> , * finish initialization of hmaster after becoming the primary master. , -   * <li>ensure assignment of meta regions<li> , * <ol>
767 , +   * <li>ensure assignment of meta/namespace regions<li> , * , +   * <li>ensure assignment of meta/namespace regions<li> ," * <li>initialize master components - file system manager', 'server manager"
768 , * <li>handle either fresh cluster start or master failover</li> , * <ol> , * <li>handle either fresh cluster start or master failover</li> ," -   *     assignment manager', 'region server tracker', 'catalog tracker', 'etc</li>"
769 , * </ol> ," * <li>initialize master components - file system manager', 'server manager ", * </ol> ," -   * <li>start necessary service threads - rpc server', 'info server"
770 , * ," -   *     assignment manager', 'region server tracker', 'catalog tracker', 'etc</li> ", * ," +   *     assignment manager', 'region server tracker', 'etc</li>"
771 , -   * @param masterrecovery ," -   * <li>start necessary service threads - rpc server', 'info server ", -   * @param masterrecovery ," +   * <li>start necessary service threads - balancer', 'catalog janior"
772 , -   * ," +   *     assignment manager', 'region server tracker', 'etc</li> ", -   * ," *     executor services', 'etc</li>"
773 , * @throws ioexception ," +   * <li>start necessary service threads - balancer', 'catalog janior ", * @throws ioexception , * <li>set cluster as up in zookeeper</li>
774 , * @throws interruptedexception ," *     executor services', 'etc</li> ", * @throws interruptedexception , * <li>wait for regionservers to check-in</li>
775 , * @throws keeperexception , * <li>set cluster as up in zookeeper</li> , * @throws keeperexception ," * <li>split logs and perform data recovery', 'if necessary</li>"
776 , */ , * <li>wait for regionservers to check-in</li> , */ , -   * <li>ensure assignment of meta regions<li>
777 ," -  private void finishinitialization(monitoredtask status', 'boolean masterrecovery) "," * <li>split logs and perform data recovery', 'if necessary</li> "," -  private void finishinitialization(monitoredtask status', 'boolean masterrecovery) ", +   * <li>ensure assignment of meta/namespace regions<li>
778 , +  private void finishactivemasterinitialization(monitoredtask status) , -   * <li>ensure assignment of meta regions<li> , +  private void finishactivemasterinitialization(monitoredtask status) , * <li>handle either fresh cluster start or master failover</li>
779 ," throws ioexception', 'interruptedexception', 'keeperexception { ", +   * <li>ensure assignment of meta/namespace regions<li> ," throws ioexception', 'interruptedexception', 'keeperexception { ", * </ol>
780 ,  , * <li>handle either fresh cluster start or master failover</li> ,  , *
781 , isactivemaster = true; , * </ol> , isactivemaster = true; , -   * @param masterrecovery
782 ," @@ -802', '44 +400', '31 @@ masterservices', 'server { ", * ," @@ -802', '44 +400', '31 @@ masterservices', 'server { ", -   *
783 ,  , -   * @param masterrecovery ,  , * @throws ioexception
784 , this.masteractivetime = system.currenttimemillis(); , -   * , this.masteractivetime = system.currenttimemillis(); , * @throws interruptedexception
785 ," // todo: do this using dependency injection', 'using picocontainer', 'guice or spring. ", * @throws ioexception ," // todo: do this using dependency injection', 'using picocontainer', 'guice or spring. ", * @throws keeperexception
786 ," -    this.filesystemmanager = new masterfilesystem(this', 'this', 'masterrecovery); ", * @throws interruptedexception ," -    this.filesystemmanager = new masterfilesystem(this', 'this', 'masterrecovery); ", */
787 , - , * @throws keeperexception , - ," -  private void finishinitialization(monitoredtask status', 'boolean masterrecovery)"
788 , -    this.tabledescriptors = , */ , -    this.tabledescriptors = , +  private void finishactivemasterinitialization(monitoredtask status)
789 , -      new fstabledescriptors(this.filesystemmanager.getfilesystem() ," -  private void finishinitialization(monitoredtask status', 'boolean masterrecovery) ", -      new fstabledescriptors(this.filesystemmanager.getfilesystem() ," throws ioexception', 'interruptedexception', 'keeperexception {"
790 , -      this.filesystemmanager.getrootdir()); , +  private void finishactivemasterinitialization(monitoredtask status) , -      this.filesystemmanager.getrootdir()); , 
791 ," +    this.filesystemmanager = new masterfilesystem(this', 'this); "," throws ioexception', 'interruptedexception', 'keeperexception { "," +    this.filesystemmanager = new masterfilesystem(this', 'this); ", isactivemaster = true;
792 ,  ,  ,  ," @@ -802', '44 +400', '31 @@ masterservices', 'server {"
793 , // publish cluster id , isactivemaster = true; , // publish cluster id , 
794 ," status.setstatus(""publishing cluster id in zookeeper""); "," @@ -802', '44 +400', '31 @@ masterservices', 'server { "," status.setstatus(""publishing cluster id in zookeeper""); ", this.masteractivetime = system.currenttimemillis();
795 ," zkclusterid.setclusterid(this.zookeeper', 'filesystemmanager.getclusterid()); ",  ," zkclusterid.setclusterid(this.zookeeper', 'filesystemmanager.getclusterid()); "," // todo: do this using dependency injection', 'using picocontainer', 'guice or spring."
796 , - , this.masteractivetime = system.currenttimemillis(); , - ," -    this.filesystemmanager = new masterfilesystem(this', 'this', 'masterrecovery);"
797 , -    if (!masterrecovery) { ," // todo: do this using dependency injection', 'using picocontainer', 'guice or spring. ", -    if (!masterrecovery) { , -
798 , -      this.executorservice = new executorservice(getservername().toshortstring()); ," -    this.filesystemmanager = new masterfilesystem(this', 'this', 'masterrecovery); ", -      this.executorservice = new executorservice(getservername().toshortstring()); , -    this.tabledescriptors =
799 ," this.servermanager = createservermanager(this', 'this); ", - ," this.servermanager = createservermanager(this', 'this); ", -      new fstabledescriptors(this.filesystemmanager.getfilesystem()
800 , -    } , -    this.tabledescriptors = , -    } , -      this.filesystemmanager.getrootdir());
801 ,  , -      new fstabledescriptors(this.filesystemmanager.getfilesystem() ,  ," +    this.filesystemmanager = new masterfilesystem(this', 'this);"
802 ," -    //initialize table lock manager', 'and ensure that all write locks held previously ", -      this.filesystemmanager.getrootdir()); ," -    //initialize table lock manager', 'and ensure that all write locks held previously ", 
803 , -    //are invalidated ," +    this.filesystemmanager = new masterfilesystem(this', 'this); ", -    //are invalidated , // publish cluster id
804 ," -    this.tablelockmanager = tablelockmanager.createtablelockmanager(conf', 'zookeeper', 'servername); ",  ," -    this.tablelockmanager = tablelockmanager.createtablelockmanager(conf', 'zookeeper', 'servername); "," status.setstatus(""publishing cluster id in zookeeper"");"
805 , -    if (!masterrecovery) { , // publish cluster id , -    if (!masterrecovery) { ," zkclusterid.setclusterid(this.zookeeper', 'filesystemmanager.getclusterid());"
806 , +    // invalidate all write locks held previously ," status.setstatus(""publishing cluster id in zookeeper""); ", +    // invalidate all write locks held previously , -
807 , this.tablelockmanager.reapwritelocks(); ," zkclusterid.setclusterid(this.zookeeper', 'filesystemmanager.getclusterid()); ", this.tablelockmanager.reapwritelocks(); , -    if (!masterrecovery) {
808 , -    } , - , -    } , -      this.executorservice = new executorservice(getservername().toshortstring());
809 ,  , -    if (!masterrecovery) { ,  ," this.servermanager = createservermanager(this', 'this);"
810 ," status.setstatus(""initializing zk system trackers""); ", -      this.executorservice = new executorservice(getservername().toshortstring()); ," status.setstatus(""initializing zk system trackers""); ", -    }
811 , initializezkbasedsystemtrackers(); ," this.servermanager = createservermanager(this', 'this); ", initializezkbasedsystemtrackers(); , 
812 ,  , -    } ,  ," -    //initialize table lock manager', 'and ensure that all write locks held previously"
813 , -    if (!masterrecovery) { ,  , -    if (!masterrecovery) { , -    //are invalidated
814 , // initialize master side coprocessors before we start handling requests ," -    //initialize table lock manager', 'and ensure that all write locks held previously ", // initialize master side coprocessors before we start handling requests ," -    this.tablelockmanager = tablelockmanager.createtablelockmanager(conf', 'zookeeper', 'servername);"
815 ," status.setstatus(""initializing master coprocessors""); ", -    //are invalidated ," status.setstatus(""initializing master coprocessors""); ", -    if (!masterrecovery) {
816 ," this.cphost = new mastercoprocessorhost(this', 'this.conf); "," -    this.tablelockmanager = tablelockmanager.createtablelockmanager(conf', 'zookeeper', 'servername); "," this.cphost = new mastercoprocessorhost(this', 'this.conf); ", +    // invalidate all write locks held previously
817 ,  , -    if (!masterrecovery) { ,  , this.tablelockmanager.reapwritelocks();
818 , -      spanreceiverhost = spanreceiverhost.getinstance(getconfiguration()); , +    // invalidate all write locks held previously , -      spanreceiverhost = spanreceiverhost.getinstance(getconfiguration()); , -    }
819 , - , this.tablelockmanager.reapwritelocks(); , - , 
820 , // start up all service threads. , -    } , // start up all service threads. ," status.setstatus(""initializing zk system trackers"");"
821 ," status.setstatus(""initializing master service threads""); ",  ," status.setstatus(""initializing master service threads""); ", initializezkbasedsystemtrackers();
822 , startservicethreads(); ," status.setstatus(""initializing zk system trackers""); ", startservicethreads(); , 
823 , -    } , initializezkbasedsystemtrackers(); , -    } , -    if (!masterrecovery) {
824 ,  ,  ,  , // initialize master side coprocessors before we start handling requests
825 , -    // wait for region servers to report in. , -    if (!masterrecovery) { , -    // wait for region servers to report in. ," status.setstatus(""initializing master coprocessors"");"
826 , +    // wake up this server to check in , // initialize master side coprocessors before we start handling requests , +    // wake up this server to check in ," this.cphost = new mastercoprocessorhost(this', 'this.conf);"
827 , +    sleeper.skipsleepcycle(); ," status.setstatus(""initializing master coprocessors""); ", +    sleeper.skipsleepcycle(); , 
828 , + ," this.cphost = new mastercoprocessorhost(this', 'this.conf); ", + , -      spanreceiverhost = spanreceiverhost.getinstance(getconfiguration());
829 , +    // wait for region servers to report in ,  , +    // wait for region servers to report in , -
830 , this.servermanager.waitforregionservers(status); , -      spanreceiverhost = spanreceiverhost.getinstance(getconfiguration()); , this.servermanager.waitforregionservers(status); , // start up all service threads.
831 ," [""// check zk for region servers that are up but didn't register""] ", - ," [""// check zk for region servers that are up but didn't register""] "," status.setstatus(""initializing master service threads"");"
832 , for (servername sn: this.regionservertracker.getonlineservers()) { , // start up all service threads. , for (servername sn: this.regionservertracker.getonlineservers()) { , startservicethreads();
833 ," @@ -850', '9 +435', '7 @@ masterservices', 'server { "," status.setstatus(""initializing master service threads""); "," @@ -850', '9 +435', '7 @@ masterservices', 'server { ", -    }
834 , } , startservicethreads(); , } , 
835 , } , -    } , } , -    // wait for region servers to report in.
836 ,  ,  ,  , +    // wake up this server to check in
837 , -    if (!masterrecovery) { , -    // wait for region servers to report in. , -    if (!masterrecovery) { , +    sleeper.skipsleepcycle();
838 , this.assignmentmanager.starttimeoutmonitor(); , +    // wake up this server to check in , this.assignmentmanager.starttimeoutmonitor(); , +
839 , -    } , +    sleeper.skipsleepcycle(); , -    } , +    // wait for region servers to report in
840 ,  , + ,  , this.servermanager.waitforregionservers(status);
841 , // get a list for previously failed rs which need log splitting work , +    // wait for region servers to report in , // get a list for previously failed rs which need log splitting work ," [""// check zk for region servers that are up but didn't register""]"
842 , // we recover hbase:meta region servers inside master initialization and , this.servermanager.waitforregionservers(status); , // we recover hbase:meta region servers inside master initialization and , for (servername sn: this.regionservertracker.getonlineservers()) {
843 ," @@ -888', '12 +471', '19 @@ masterservices', 'server { "," [""// check zk for region servers that are up but didn't register""] "," @@ -888', '12 +471', '19 @@ masterservices', 'server { "," @@ -850', '9 +435', '7 @@ masterservices', 'server {"
844 , this.balancer.setmasterservices(this); , for (servername sn: this.regionservertracker.getonlineservers()) { , this.balancer.setmasterservices(this); , }
845 , this.balancer.initialize(); ," @@ -850', '9 +435', '7 @@ masterservices', 'server { ", this.balancer.initialize(); , }
846 ,  , } ,  , 
847 , +    // wait for regionserver to finish initialization. , } , +    // wait for regionserver to finish initialization. , -    if (!masterrecovery) {
848 , +    while (!isonline()) { ,  , +    while (!isonline()) { , this.assignmentmanager.starttimeoutmonitor();
849 , +      synchronized (online) { , -    if (!masterrecovery) { , +      synchronized (online) { , -    }
850 , +        online.wait(100); , this.assignmentmanager.starttimeoutmonitor(); , +        online.wait(100); , 
851 , +      } , -    } , +      } , // get a list for previously failed rs which need log splitting work
852 , +    } ,  , +    } , // we recover hbase:meta region servers inside master initialization and
853 , + , // get a list for previously failed rs which need log splitting work , + ," @@ -888', '12 +471', '19 @@ masterservices', 'server {"
854 , // make sure meta assigned before proceeding. , // we recover hbase:meta region servers inside master initialization and , // make sure meta assigned before proceeding. , this.balancer.setmasterservices(this);
855 ," status.setstatus(""assigning meta region""); "," @@ -888', '12 +471', '19 @@ masterservices', 'server { "," status.setstatus(""assigning meta region""); ", this.balancer.initialize();
856 ," assignmeta(status', 'previouslyfailedmetarss); ", this.balancer.setmasterservices(this); ," assignmeta(status', 'previouslyfailedmetarss); ", 
857 ," [""// check if master is shutting down because above assignmeta could return even hbase:meta isn't""] ", this.balancer.initialize(); ," [""// check if master is shutting down because above assignmeta could return even hbase:meta isn't""] ", +    // wait for regionserver to finish initialization.
858 , // assigned when master is shutting down ,  , // assigned when master is shutting down , +    while (!isonline()) {
859 , -    if(this.stopped) return; , +    // wait for regionserver to finish initialization. , -    if(this.stopped) return; , +      synchronized (online) {
860 , +    if(isstopped()) return; , +    while (!isonline()) { , +    if(isstopped()) return; , +        online.wait(100);
861 ,  , +      synchronized (online) { ,  , +      }
862 ," status.setstatus(""submitting log splitting work for previously failed region servers""); ", +        online.wait(100); ," status.setstatus(""submitting log splitting work for previously failed region servers""); ", +    }
863 , // master has recovered hbase:meta region server and we put , +      } , // master has recovered hbase:meta region server and we put , +
864 ," @@ -915', '15 +505', '15 @@ masterservices', 'server { ", +    } ," @@ -915', '15 +505', '15 @@ masterservices', 'server { ", // make sure meta assigned before proceeding.
865 , //set cluster status again after user regions are assigned , + , //set cluster status again after user regions are assigned ," status.setstatus(""assigning meta region"");"
866 , this.balancer.setclusterstatus(getclusterstatus()); , // make sure meta assigned before proceeding. , this.balancer.setclusterstatus(getclusterstatus()); ," assignmeta(status', 'previouslyfailedmetarss);"
867 ,  ," status.setstatus(""assigning meta region""); ",  ," [""// check if master is shutting down because above assignmeta could return even hbase:meta isn't""]"
868 , -    if (!masterrecovery) { ," assignmeta(status', 'previouslyfailedmetarss); ", -    if (!masterrecovery) { , // assigned when master is shutting down
869 , // start balancer and meta catalog janitor after meta and regions have ," [""// check if master is shutting down because above assignmeta could return even hbase:meta isn't""] ", // start balancer and meta catalog janitor after meta and regions have , -    if(this.stopped) return;
870 , // been assigned. , // assigned when master is shutting down , // been assigned. , +    if(isstopped()) return;
871 ," status.setstatus(""starting balancer and catalog janitor""); ", -    if(this.stopped) return; ," status.setstatus(""starting balancer and catalog janitor""); ", 
872 , -      this.clusterstatuschore = getandstartclusterstatuschore(this); , +    if(isstopped()) return; , -      this.clusterstatuschore = getandstartclusterstatuschore(this); ," status.setstatus(""submitting log splitting work for previously failed region servers"");"
873 , -      this.balancerchore = getandstartbalancerchore(this); ,  , -      this.balancerchore = getandstartbalancerchore(this); , // master has recovered hbase:meta region server and we put
874 ," +    this.clusterstatuschore = new clusterstatuschore(this', 'balancer); "," status.setstatus(""submitting log splitting work for previously failed region servers""); "," +    this.clusterstatuschore = new clusterstatuschore(this', 'balancer); "," @@ -915', '15 +505', '15 @@ masterservices', 'server {"
875 , +    threads.setdaemonthreadrunning(clusterstatuschore.getthread()); , // master has recovered hbase:meta region server and we put , +    threads.setdaemonthreadrunning(clusterstatuschore.getthread()); , //set cluster status again after user regions are assigned
876 , +    this.balancerchore = new balancerchore(this); ," @@ -915', '15 +505', '15 @@ masterservices', 'server { ", +    this.balancerchore = new balancerchore(this); , this.balancer.setclusterstatus(getclusterstatus());
877 , +    threads.setdaemonthreadrunning(balancerchore.getthread()); , //set cluster status again after user regions are assigned , +    threads.setdaemonthreadrunning(balancerchore.getthread()); , 
878 ," this.catalogjanitorchore = new catalogjanitor(this', 'this); ", this.balancer.setclusterstatus(getclusterstatus()); ," this.catalogjanitorchore = new catalogjanitor(this', 'this); ", -    if (!masterrecovery) {
879 , -      startcatalogjanitorchore(); ,  , -      startcatalogjanitorchore(); , // start balancer and meta catalog janitor after meta and regions have
880 , -    } , -    if (!masterrecovery) { , -    } , // been assigned.
881 , +    threads.setdaemonthreadrunning(catalogjanitorchore.getthread()); , // start balancer and meta catalog janitor after meta and regions have , +    threads.setdaemonthreadrunning(catalogjanitorchore.getthread()); ," status.setstatus(""starting balancer and catalog janitor"");"
882 ,  , // been assigned. ,  , -      this.clusterstatuschore = getandstartclusterstatuschore(this);
883 ," status.setstatus(""starting namespace manager""); "," status.setstatus(""starting balancer and catalog janitor""); "," status.setstatus(""starting namespace manager""); ", -      this.balancerchore = getandstartbalancerchore(this);
884 , initnamespace(); , -      this.clusterstatuschore = getandstartclusterstatuschore(this); , initnamespace(); ," +    this.clusterstatuschore = new clusterstatuschore(this', 'balancer);"
885 ," @@ -944', '7 +534', '6 @@ masterservices', 'server { ", -      this.balancerchore = getandstartbalancerchore(this); ," @@ -944', '7 +534', '6 @@ masterservices', 'server { ", +    threads.setdaemonthreadrunning(clusterstatuschore.getthread());
886 , // master initialization. see hbase-5916. ," +    this.clusterstatuschore = new clusterstatuschore(this', 'balancer); ", // master initialization. see hbase-5916. , +    this.balancerchore = new balancerchore(this);
887 , this.servermanager.cleardeadserverswithsamehostnameandportofonlineserver(); , +    threads.setdaemonthreadrunning(clusterstatuschore.getthread()); , this.servermanager.cleardeadserverswithsamehostnameandportofonlineserver(); , +    threads.setdaemonthreadrunning(balancerchore.getthread());
888 ,  , +    this.balancerchore = new balancerchore(this); ,  ," this.catalogjanitorchore = new catalogjanitor(this', 'this);"
889 , -    if (!masterrecovery) { , +    threads.setdaemonthreadrunning(balancerchore.getthread()); , -    if (!masterrecovery) { , -      startcatalogjanitorchore();
890 , if (this.cphost != null) { ," this.catalogjanitorchore = new catalogjanitor(this', 'this); ", if (this.cphost != null) { , -    }
891 ," [""// don't let cp initialization errors kill the master""] ", -      startcatalogjanitorchore(); ," [""// don't let cp initialization errors kill the master""] ", +    threads.setdaemonthreadrunning(catalogjanitorchore.getthread());
892 , try { , -    } , try { , 
893 ," @@ -954', '7 +543', '6 @@ masterservices', 'server { ", +    threads.setdaemonthreadrunning(catalogjanitorchore.getthread()); ," @@ -954', '7 +543', '6 @@ masterservices', 'server { "," status.setstatus(""starting namespace manager"");"
894 , } ,  , } , initnamespace();
895 , } ," status.setstatus(""starting namespace manager""); ", } ," @@ -944', '7 +534', '6 @@ masterservices', 'server {"
896 , } , initnamespace(); , } , // master initialization. see hbase-5916.
897 , -  } ," @@ -944', '7 +534', '6 @@ masterservices', 'server { ", -  } , this.servermanager.cleardeadserverswithsamehostnameandportofonlineserver();
898 ,  , // master initialization. see hbase-5916. ,  , 
899 , /** , this.servermanager.cleardeadserverswithsamehostnameandportofonlineserver(); , /** , -    if (!masterrecovery) {
900 , * useful for testing purpose also where we have ,  , * useful for testing purpose also where we have , if (this.cphost != null) {
901 ," @@ -1127', '47 +715', '16 @@ masterservices', 'server { ", -    if (!masterrecovery) { ," @@ -1127', '47 +715', '16 @@ masterservices', 'server { "," [""// don't let cp initialization errors kill the master""]"
902 , return this.tabledescriptors; , if (this.cphost != null) { , return this.tabledescriptors; , try {
903 , } ," [""// don't let cp initialization errors kill the master""] ", } ," @@ -954', '7 +543', '6 @@ masterservices', 'server {"
904 ,  , try { ,  , }
905 , -  /** @return infoserver object. maybe null.*/ ," @@ -954', '7 +543', '6 @@ masterservices', 'server { ", -  /** @return infoserver object. maybe null.*/ , }
906 , -  public infoserver getinfoserver() { , } , -  public infoserver getinfoserver() { , }
907 , -    return this.infoserver; , } , -    return this.infoserver; , -  }
908 , -  } , } , -  } , 
909 , - , -  } , - , /**
910 , -  @override ,  , -  @override , * useful for testing purpose also where we have
911 , -  public configuration getconfiguration() { , /** , -  public configuration getconfiguration() { ," @@ -1127', '47 +715', '16 @@ masterservices', 'server {"
912 , -    return this.conf; , * useful for testing purpose also where we have , -    return this.conf; , return this.tabledescriptors;
913 , -  } ," @@ -1127', '47 +715', '16 @@ masterservices', 'server { ", -  } , }
914 , - , return this.tabledescriptors; , - , 
915 , @override , } , @override , -  /** @return infoserver object. maybe null.*/
916 , public servermanager getservermanager() { ,  , public servermanager getservermanager() { , -  public infoserver getinfoserver() {
917 , return this.servermanager; , -  /** @return infoserver object. maybe null.*/ , return this.servermanager; , -    return this.infoserver;
918 , } , -  public infoserver getinfoserver() { , } , -  }
919 ,  , -    return this.infoserver; ,  , -
920 , -  @override , -  } , -  @override , -  @override
921 , -  public executorservice getexecutorservice() { , - , -  public executorservice getexecutorservice() { , -  public configuration getconfiguration() {
922 , -    return this.executorservice; , -  @override , -    return this.executorservice; , -    return this.conf;
923 , -  } , -  public configuration getconfiguration() { , -  } , -  }
924 , - , -    return this.conf; , - , -
925 , @override , -  } , @override , @override
926 , public masterfilesystem getmasterfilesystem() { , - , public masterfilesystem getmasterfilesystem() { , public servermanager getservermanager() {
927 , return this.filesystemmanager; , @override , return this.filesystemmanager; , return this.servermanager;
928 , } , public servermanager getservermanager() { , } , }
929 ,  , return this.servermanager; ,  , 
930 , -  /** , } , -  /** , -  @override
931 , -   * get the zk wrapper object - needed by master_jsp.java ,  , -   * get the zk wrapper object - needed by master_jsp.java , -  public executorservice getexecutorservice() {
932 , -   * @return the zookeeper wrapper , -  @override , -   * @return the zookeeper wrapper , -    return this.executorservice;
933 , -   */ , -  public executorservice getexecutorservice() { , -   */ , -  }
934 , -  public zookeeperwatcher getzookeeperwatcher() { , -    return this.executorservice; , -  public zookeeperwatcher getzookeeperwatcher() { , -
935 , -    return this.zookeeper; , -  } , -    return this.zookeeper; , @override
936 , -  } , - , -  } , public masterfilesystem getmasterfilesystem() {
937 , - , @override , - , return this.filesystemmanager;
938 , -  public activemastermanager getactivemastermanager() { , public masterfilesystem getmasterfilesystem() { , -  public activemastermanager getactivemastermanager() { , }
939 , -    return this.activemastermanager; , return this.filesystemmanager; , -    return this.activemastermanager; , 
940 , -  } , } , -  } , -  /**
941 , - ,  , - , -   * get the zk wrapper object - needed by master_jsp.java
942 , -  public masteraddresstracker getmasteraddresstracker() { , -  /** , -  public masteraddresstracker getmasteraddresstracker() { , -   * @return the zookeeper wrapper
943 , -    return this.masteraddresstracker; , -   * get the zk wrapper object - needed by master_jsp.java , -    return this.masteraddresstracker; , -   */
944 , -  } , -   * @return the zookeeper wrapper , -  } , -  public zookeeperwatcher getzookeeperwatcher() {
945 , - , -   */ , - , -    return this.zookeeper;
946 , /* , -  public zookeeperwatcher getzookeeperwatcher() { , /* , -  }
947 , * start up all services. if any of these threads gets an unhandled exception , -    return this.zookeeper; , * start up all services. if any of these threads gets an unhandled exception , -
948 , * then they just die with a logged message.  this should be fine because , -  } , * then they just die with a logged message.  this should be fine because , -  public activemastermanager getactivemastermanager() {
949 ," @@ -1175', '99 +732', '65 @@ masterservices', 'server { ", - ," @@ -1175', '99 +732', '65 @@ masterservices', 'server { ", -    return this.activemastermanager;
950 , *  as oomes; it should be lightly loaded. see what hregionserver does if , -  public activemastermanager getactivemastermanager() { , *  as oomes; it should be lightly loaded. see what hregionserver does if , -  }
951 , *  need to install an unexpected exception handler. , -    return this.activemastermanager; , *  need to install an unexpected exception handler. , -
952 , */ , -  } , */ , -  public masteraddresstracker getmasteraddresstracker() {
953 , -  void startservicethreads() throws ioexception{ , - , -  void startservicethreads() throws ioexception{ , -    return this.masteraddresstracker;
954 , +  private void startservicethreads() throws ioexception{ , -  public masteraddresstracker getmasteraddresstracker() { , +  private void startservicethreads() throws ioexception{ , -  }
955 , // start the executor service pools , -    return this.masteraddresstracker; , // start the executor service pools , -
956 , -   this.executorservice.startexecutorservice(executortype.master_open_region , -  } , -   this.executorservice.startexecutorservice(executortype.master_open_region , /*
957 , +   this.service.startexecutorservice(executortype.master_open_region , - , +   this.service.startexecutorservice(executortype.master_open_region , * start up all services. if any of these threads gets an unhandled exception
958 ," conf.getint(""hbase.master.executor.openregion.threads""', '5)); ", /* ," conf.getint(""hbase.master.executor.openregion.threads""', '5)); ", * then they just die with a logged message.  this should be fine because
959 , -   this.executorservice.startexecutorservice(executortype.master_close_region , * start up all services. if any of these threads gets an unhandled exception , -   this.executorservice.startexecutorservice(executortype.master_close_region ," @@ -1175', '99 +732', '65 @@ masterservices', 'server {"
960 , +   this.service.startexecutorservice(executortype.master_close_region , * then they just die with a logged message.  this should be fine because , +   this.service.startexecutorservice(executortype.master_close_region , *  as oomes; it should be lightly loaded. see what hregionserver does if
961 ," conf.getint(""hbase.master.executor.closeregion.threads""', '5)); "," @@ -1175', '99 +732', '65 @@ masterservices', 'server { "," conf.getint(""hbase.master.executor.closeregion.threads""', '5)); ", *  need to install an unexpected exception handler.
962 , -   this.executorservice.startexecutorservice(executortype.master_server_operations , *  as oomes; it should be lightly loaded. see what hregionserver does if , -   this.executorservice.startexecutorservice(executortype.master_server_operations , */
963 , +   this.service.startexecutorservice(executortype.master_server_operations , *  need to install an unexpected exception handler. , +   this.service.startexecutorservice(executortype.master_server_operations , -  void startservicethreads() throws ioexception{
964 ," conf.getint(""hbase.master.executor.serverops.threads""', '5)); ", */ ," conf.getint(""hbase.master.executor.serverops.threads""', '5)); ", +  private void startservicethreads() throws ioexception{
965 , -   this.executorservice.startexecutorservice(executortype.master_meta_server_operations , -  void startservicethreads() throws ioexception{ , -   this.executorservice.startexecutorservice(executortype.master_meta_server_operations , // start the executor service pools
966 , +   this.service.startexecutorservice(executortype.master_meta_server_operations , +  private void startservicethreads() throws ioexception{ , +   this.service.startexecutorservice(executortype.master_meta_server_operations , -   this.executorservice.startexecutorservice(executortype.master_open_region
967 ," conf.getint(""hbase.master.executor.serverops.threads""', '5)); ", // start the executor service pools ," conf.getint(""hbase.master.executor.serverops.threads""', '5)); ", +   this.service.startexecutorservice(executortype.master_open_region
968 , -   this.executorservice.startexecutorservice(executortype.m_log_replay_ops , -   this.executorservice.startexecutorservice(executortype.master_open_region , -   this.executorservice.startexecutorservice(executortype.m_log_replay_ops ," conf.getint(""hbase.master.executor.openregion.threads""', '5));"
969 , +   this.service.startexecutorservice(executortype.m_log_replay_ops , +   this.service.startexecutorservice(executortype.master_open_region , +   this.service.startexecutorservice(executortype.m_log_replay_ops , -   this.executorservice.startexecutorservice(executortype.master_close_region
970 ," conf.getint(""hbase.master.executor.logreplayops.threads""', '10)); "," conf.getint(""hbase.master.executor.openregion.threads""', '5)); "," conf.getint(""hbase.master.executor.logreplayops.threads""', '10)); ", +   this.service.startexecutorservice(executortype.master_close_region
971 ,  , -   this.executorservice.startexecutorservice(executortype.master_close_region ,  ," conf.getint(""hbase.master.executor.closeregion.threads""', '5));"
972 , // we depend on there being only one instance of this executor running , +   this.service.startexecutorservice(executortype.master_close_region , // we depend on there being only one instance of this executor running , -   this.executorservice.startexecutorservice(executortype.master_server_operations
973 ," // at a time.  to do concurrency', 'would need fencing of enable/disable of "," conf.getint(""hbase.master.executor.closeregion.threads""', '5)); "," // at a time.  to do concurrency', 'would need fencing of enable/disable of ", +   this.service.startexecutorservice(executortype.master_server_operations
974 , // tables. , -   this.executorservice.startexecutorservice(executortype.master_server_operations , // tables. ," conf.getint(""hbase.master.executor.serverops.threads""', '5));"
975 ," -   this.executorservice.startexecutorservice(executortype.master_table_operations', '1); ", +   this.service.startexecutorservice(executortype.master_server_operations ," -   this.executorservice.startexecutorservice(executortype.master_table_operations', '1); ", -   this.executorservice.startexecutorservice(executortype.master_meta_server_operations
976 ," +   this.service.startexecutorservice(executortype.master_table_operations', '1); "," conf.getint(""hbase.master.executor.serverops.threads""', '5)); "," +   this.service.startexecutorservice(executortype.master_table_operations', '1); ", +   this.service.startexecutorservice(executortype.master_meta_server_operations
977 ,  , -   this.executorservice.startexecutorservice(executortype.master_meta_server_operations ,  ," conf.getint(""hbase.master.executor.serverops.threads""', '5));"
978 , // start log cleaner thread , +   this.service.startexecutorservice(executortype.master_meta_server_operations , // start log cleaner thread , -   this.executorservice.startexecutorservice(executortype.m_log_replay_ops
979 , -   string n = thread.currentthread().getname(); ," conf.getint(""hbase.master.executor.serverops.threads""', '5)); ", -   string n = thread.currentthread().getname(); , +   this.service.startexecutorservice(executortype.m_log_replay_ops
980 ," int cleanerinterval = conf.getint(""hbase.master.cleaner.interval""', '60 * 1000); ", -   this.executorservice.startexecutorservice(executortype.m_log_replay_ops ," int cleanerinterval = conf.getint(""hbase.master.cleaner.interval""', '60 * 1000); "," conf.getint(""hbase.master.executor.logreplayops.threads""', '10));"
981 , this.logcleaner = , +   this.service.startexecutorservice(executortype.m_log_replay_ops , this.logcleaner = , 
982 , new logcleaner(cleanerinterval ," conf.getint(""hbase.master.executor.logreplayops.threads""', '10)); ", new logcleaner(cleanerinterval , // we depend on there being only one instance of this executor running
983 ," this', 'conf', 'getmasterfilesystem().getfilesystem() ",  ," this', 'conf', 'getmasterfilesystem().getfilesystem() "," // at a time.  to do concurrency', 'would need fencing of enable/disable of"
984 , getmasterfilesystem().getoldlogdir()); , // we depend on there being only one instance of this executor running , getmasterfilesystem().getoldlogdir()); , // tables.
985 ," -         threads.setdaemonthreadrunning(logcleaner.getthread()', 'n + "".oldlogcleaner""); "," // at a time.  to do concurrency', 'would need fencing of enable/disable of "," -         threads.setdaemonthreadrunning(logcleaner.getthread()', 'n + "".oldlogcleaner""); "," -   this.executorservice.startexecutorservice(executortype.master_table_operations', '1);"
986 ," +         threads.setdaemonthreadrunning(logcleaner.getthread()', 'getname() + "".oldlogcleaner""); ", // tables. ," +         threads.setdaemonthreadrunning(logcleaner.getthread()', 'getname() + "".oldlogcleaner""); "," +   this.service.startexecutorservice(executortype.master_table_operations', '1);"
987 ,  ," -   this.executorservice.startexecutorservice(executortype.master_table_operations', '1); ",  , 
988 , //start the hfile archive cleaner thread ," +   this.service.startexecutorservice(executortype.master_table_operations', '1); ", //start the hfile archive cleaner thread , // start log cleaner thread
989 , path archivedir = hfilearchiveutil.getarchivepath(conf); ,  , path archivedir = hfilearchiveutil.getarchivepath(conf); , -   string n = thread.currentthread().getname();
990 ," this.hfilecleaner = new hfilecleaner(cleanerinterval', 'this', 'conf', 'getmasterfilesystem() ", // start log cleaner thread ," this.hfilecleaner = new hfilecleaner(cleanerinterval', 'this', 'conf', 'getmasterfilesystem() "," int cleanerinterval = conf.getint(""hbase.master.cleaner.interval""', '60 * 1000);"
991 ," .getfilesystem()', 'archivedir); ", -   string n = thread.currentthread().getname(); ," .getfilesystem()', 'archivedir); ", this.logcleaner =
992 ," -    threads.setdaemonthreadrunning(hfilecleaner.getthread()', 'n + "".archivedhfilecleaner""); "," int cleanerinterval = conf.getint(""hbase.master.cleaner.interval""', '60 * 1000); "," -    threads.setdaemonthreadrunning(hfilecleaner.getthread()', 'n + "".archivedhfilecleaner""); ", new logcleaner(cleanerinterval
993 , - , this.logcleaner = , - ," this', 'conf', 'getmasterfilesystem().getfilesystem()"
994 , -    // start the health checker , new logcleaner(cleanerinterval , -    // start the health checker , getmasterfilesystem().getoldlogdir());
995 , -    if (this.healthcheckchore != null) { ," this', 'conf', 'getmasterfilesystem().getfilesystem() ", -    if (this.healthcheckchore != null) { ," -         threads.setdaemonthreadrunning(logcleaner.getthread()', 'n + "".oldlogcleaner"");"
996 ," -      threads.setdaemonthreadrunning(this.healthcheckchore.getthread()', 'n + "".healthchecker""); ", getmasterfilesystem().getoldlogdir()); ," -      threads.setdaemonthreadrunning(this.healthcheckchore.getthread()', 'n + "".healthchecker""); "," +         threads.setdaemonthreadrunning(logcleaner.getthread()', 'getname() + "".oldlogcleaner"");"
997 , -    } ," -         threads.setdaemonthreadrunning(logcleaner.getthread()', 'n + "".oldlogcleaner""); ", -    } , 
998 , +    threads.setdaemonthreadrunning(hfilecleaner.getthread() ," +         threads.setdaemonthreadrunning(logcleaner.getthread()', 'getname() + "".oldlogcleaner""); ", +    threads.setdaemonthreadrunning(hfilecleaner.getthread() , //start the hfile archive cleaner thread
999 ," +      getname() + "".archivedhfilecleaner""); ",  ," +      getname() + "".archivedhfilecleaner""); ", path archivedir = hfilearchiveutil.getarchivepath(conf);
1000 ,  , //start the hfile archive cleaner thread ,  ," this.hfilecleaner = new hfilecleaner(cleanerinterval', 'this', 'conf', 'getmasterfilesystem()"
1001 , -    // start allowing requests to happen. , path archivedir = hfilearchiveutil.getarchivepath(conf); , -    // start allowing requests to happen. ," .getfilesystem()', 'archivedir);"
1002 , -    this.rpcserver.openserver(); ," this.hfilecleaner = new hfilecleaner(cleanerinterval', 'this', 'conf', 'getmasterfilesystem() ", -    this.rpcserver.openserver(); ," -    threads.setdaemonthreadrunning(hfilecleaner.getthread()', 'n + "".archivedhfilecleaner"");"
1003 , -    this.rpcserveropen = true; ," .getfilesystem()', 'archivedir); ", -    this.rpcserveropen = true; , +    threads.setdaemonthreadrunning(hfilecleaner.getthread()
1004 , +    servicestarted = true; ," -    threads.setdaemonthreadrunning(hfilecleaner.getthread()', 'n + "".archivedhfilecleaner""); ", +    servicestarted = true; ," +      getname() + "".archivedhfilecleaner"");"
1005 , if (log.istraceenabled()) { , +    threads.setdaemonthreadrunning(hfilecleaner.getthread() , if (log.istraceenabled()) { , 
1006 ," log.trace(""started service threads""); "," +      getname() + "".archivedhfilecleaner""); "," log.trace(""started service threads""); ", -    // start the health checker
1007 , } ,  , } , -    if (this.healthcheckchore != null) {
1008 , } , -    // start the health checker , } ," -      threads.setdaemonthreadrunning(this.healthcheckchore.getthread()', 'n + "".healthchecker"");"
1009 ,  , -    if (this.healthcheckchore != null) { ,  , -    }
1010 , -  /** ," -      threads.setdaemonthreadrunning(this.healthcheckchore.getthread()', 'n + "".healthchecker""); ", -  /** , -
1011 , -   * use this when trying to figure when its ok to send in rpcs.  used by tests. , -    } , -   * use this when trying to figure when its ok to send in rpcs.  used by tests. , -    // start allowing requests to happen.
1012 , -   * @return true if we have successfully run {@link rpcserver#openserver()} , - , -   * @return true if we have successfully run {@link rpcserver#openserver()} , -    this.rpcserver.openserver();
1013 , -   */ , -    // start allowing requests to happen. , -   */ , -    this.rpcserveropen = true;
1014 , -  boolean isrpcserveropen() { , -    this.rpcserver.openserver(); , -  boolean isrpcserveropen() { , +    servicestarted = true;
1015 , -    return this.rpcserveropen; , -    this.rpcserveropen = true; , -    return this.rpcserveropen; , if (log.istraceenabled()) {
1016 , +  protected void stopservicethreads() { , +    servicestarted = true; , +  protected void stopservicethreads() { ," log.trace(""started service threads"");"
1017 , +    super.stopservicethreads(); , if (log.istraceenabled()) { , +    super.stopservicethreads(); , }
1018 , +    stopchores(); ," log.trace(""started service threads""); ", +    stopchores(); , }
1019 , +    // wait for all the remaining region servers to report in iff we were , } , +    // wait for all the remaining region servers to report in iff we were , 
1020 , +    // running a cluster shutdown and we were not aborting. , } , +    // running a cluster shutdown and we were not aborting. , -  /**
1021 , +    if (!isaborted() && this.servermanager != null && ,  , +    if (!isaborted() && this.servermanager != null && , -   * use this when trying to figure when its ok to send in rpcs.  used by tests.
1022 , +        this.servermanager.isclustershutdown()) { , -  /** , +        this.servermanager.isclustershutdown()) { , -   * @return true if we have successfully run {@link rpcserver#openserver()}
1023 , +      this.servermanager.letregionserversshutdown(); , -   * use this when trying to figure when its ok to send in rpcs.  used by tests. , +      this.servermanager.letregionserversshutdown(); , -   */
1024 , } , -   * @return true if we have successfully run {@link rpcserver#openserver()} , } , -  boolean isrpcserveropen() {
1025 , - , -   */ , - , -    return this.rpcserveropen;
1026 , -  private void stopservicethreads() { , -  boolean isrpcserveropen() { , -  private void stopservicethreads() { , +  protected void stopservicethreads() {
1027 , if (log.isdebugenabled()) { , -    return this.rpcserveropen; , if (log.isdebugenabled()) { , +    super.stopservicethreads();
1028 ," log.debug(""stopping service threads""); ", +  protected void stopservicethreads() { ," log.debug(""stopping service threads""); ", +    stopchores();
1029 , } , +    super.stopservicethreads(); , } , +    // wait for all the remaining region servers to report in iff we were
1030 , -    if (this.rpcserver != null) this.rpcserver.stop(); , +    stopchores(); , -    if (this.rpcserver != null) this.rpcserver.stop(); , +    // running a cluster shutdown and we were not aborting.
1031 , -    this.rpcserveropen = false; , +    // wait for all the remaining region servers to report in iff we were , -    this.rpcserveropen = false; , +    if (!isaborted() && this.servermanager != null &&
1032 , // clean up and close up shop , +    // running a cluster shutdown and we were not aborting. , // clean up and close up shop , +        this.servermanager.isclustershutdown()) {
1033 , if (this.logcleaner!= null) this.logcleaner.interrupt(); , +    if (!isaborted() && this.servermanager != null && , if (this.logcleaner!= null) this.logcleaner.interrupt(); , +      this.servermanager.letregionserversshutdown();
1034 , if (this.hfilecleaner != null) this.hfilecleaner.interrupt(); , +        this.servermanager.isclustershutdown()) { , if (this.hfilecleaner != null) this.hfilecleaner.interrupt(); , }
1035 , - , +      this.servermanager.letregionserversshutdown(); , - , -
1036 , -    if (this.infoserver != null) { , } , -    if (this.infoserver != null) { , -  private void stopservicethreads() {
1037 ," -      log.info(""stopping infoserver""); ", - ," -      log.info(""stopping infoserver""); ", if (log.isdebugenabled()) {
1038 , -      try { , -  private void stopservicethreads() { , -      try { ," log.debug(""stopping service threads"");"
1039 , -        this.infoserver.stop(); , if (log.isdebugenabled()) { , -        this.infoserver.stop(); , }
1040 , -      } catch (exception ex) { ," log.debug(""stopping service threads""); ", -      } catch (exception ex) { , -    if (this.rpcserver != null) this.rpcserver.stop();
1041 , -        ex.printstacktrace(); , } , -        ex.printstacktrace(); , -    this.rpcserveropen = false;
1042 , -      } , -    if (this.rpcserver != null) this.rpcserver.stop(); , -      } , // clean up and close up shop
1043 , -    } , -    this.rpcserveropen = false; , -    } , if (this.logcleaner!= null) this.logcleaner.interrupt();
1044 , -    if (this.executorservice != null) this.executorservice.shutdown(); , // clean up and close up shop , -    if (this.executorservice != null) this.executorservice.shutdown(); , if (this.hfilecleaner != null) this.hfilecleaner.interrupt();
1045 , -    if (this.healthcheckchore != null) { , if (this.logcleaner!= null) this.logcleaner.interrupt(); , -    if (this.healthcheckchore != null) { , -
1046 , -      this.healthcheckchore.interrupt(); , if (this.hfilecleaner != null) this.hfilecleaner.interrupt(); , -      this.healthcheckchore.interrupt(); , -    if (this.infoserver != null) {
1047 , -    } , - , -    } ," -      log.info(""stopping infoserver"");"
1048 , -    if (this.pausemonitor != null) { , -    if (this.infoserver != null) { , -    if (this.pausemonitor != null) { , -      try {
1049 , -      this.pausemonitor.stop(); ," -      log.info(""stopping infoserver""); ", -      this.pausemonitor.stop(); , -        this.infoserver.stop();
1050 , -    } , -      try { , -    } , -      } catch (exception ex) {
1051 , -  } , -        this.infoserver.stop(); , -  } , -        ex.printstacktrace();
1052 , - , -      } catch (exception ex) { , - , -      }
1053 , -  private static thread getandstartclusterstatuschore(hmaster master) { , -        ex.printstacktrace(); , -  private static thread getandstartclusterstatuschore(hmaster master) { , -    }
1054 , -    if (master == null || master.balancer == null) { , -      } , -    if (master == null || master.balancer == null) { , -    if (this.executorservice != null) this.executorservice.shutdown();
1055 , -      return null; , -    } , -      return null; , -    if (this.healthcheckchore != null) {
1056 , -    } , -    if (this.executorservice != null) this.executorservice.shutdown(); , -    } , -      this.healthcheckchore.interrupt();
1057 ," -    chore chore = new clusterstatuschore(master', 'master.balancer); ", -    if (this.healthcheckchore != null) { ," -    chore chore = new clusterstatuschore(master', 'master.balancer); ", -    }
1058 , -    return threads.setdaemonthreadrunning(chore.getthread()); , -      this.healthcheckchore.interrupt(); , -    return threads.setdaemonthreadrunning(chore.getthread()); , -    if (this.pausemonitor != null) {
1059 , -  } , -    } , -  } , -      this.pausemonitor.stop();
1060 , - , -    if (this.pausemonitor != null) { , - , -    }
1061 , -  private static thread getandstartbalancerchore(final hmaster master) { , -      this.pausemonitor.stop(); , -  private static thread getandstartbalancerchore(final hmaster master) { , -  }
1062 , -    // start up the load balancer chore , -    } , -    // start up the load balancer chore , -
1063 , -    chore chore = new balancerchore(master); , -  } , -    chore chore = new balancerchore(master); , -  private static thread getandstartclusterstatuschore(hmaster master) {
1064 , -    return threads.setdaemonthreadrunning(chore.getthread()); , - , -    return threads.setdaemonthreadrunning(chore.getthread()); , -    if (master == null || master.balancer == null) {
1065 , +    if (this.activemastermanager != null) this.activemastermanager.stop(); , -  private static thread getandstartclusterstatuschore(hmaster master) { , +    if (this.activemastermanager != null) this.activemastermanager.stop(); , -      return null;
1066 , +    if (this.servermanager != null) this.servermanager.stop(); , -    if (master == null || master.balancer == null) { , +    if (this.servermanager != null) this.servermanager.stop(); , -    }
1067 , +    if (this.assignmentmanager != null) this.assignmentmanager.stop(); , -      return null; , +    if (this.assignmentmanager != null) this.assignmentmanager.stop(); ," -    chore chore = new clusterstatuschore(master', 'master.balancer);"
1068 , +    if (this.filesystemmanager != null) this.filesystemmanager.stop(); , -    } , +    if (this.filesystemmanager != null) this.filesystemmanager.stop(); , -    return threads.setdaemonthreadrunning(chore.getthread());
1069 ," +    if (this.mpmhost != null) this.mpmhost.stop(""server shutting down.""); "," -    chore chore = new clusterstatuschore(master', 'master.balancer); "," +    if (this.mpmhost != null) this.mpmhost.stop(""server shutting down.""); ", -  }
1070 , } , -    return threads.setdaemonthreadrunning(chore.getthread()); , } , -
1071 ,  , -  } ,  , -  private static thread getandstartbalancerchore(final hmaster master) {
1072 , private void stopchores() { , - , private void stopchores() { , -    // start up the load balancer chore
1073 ," @@ -1288', '131 +811', '25 @@ masterservices', 'server { ", -  private static thread getandstartbalancerchore(final hmaster master) { ," @@ -1288', '131 +811', '25 @@ masterservices', 'server { ", -    chore chore = new balancerchore(master);
1074 , } , -    // start up the load balancer chore , } , -    return threads.setdaemonthreadrunning(chore.getthread());
1075 , } , -    chore chore = new balancerchore(master); , } , +    if (this.activemastermanager != null) this.activemastermanager.stop();
1076 ,  , -    return threads.setdaemonthreadrunning(chore.getthread()); ,  , +    if (this.servermanager != null) this.servermanager.stop();
1077 , -  @override , +    if (this.activemastermanager != null) this.activemastermanager.stop(); , -  @override , +    if (this.assignmentmanager != null) this.assignmentmanager.stop();
1078 , -  public regionserverstartupresponse regionserverstartup( , +    if (this.servermanager != null) this.servermanager.stop(); , -  public regionserverstartupresponse regionserverstartup( , +    if (this.filesystemmanager != null) this.filesystemmanager.stop();
1079 ," -      rpccontroller controller', 'regionserverstartuprequest request) throws serviceexception { ", +    if (this.assignmentmanager != null) this.assignmentmanager.stop(); ," -      rpccontroller controller', 'regionserverstartuprequest request) throws serviceexception { "," +    if (this.mpmhost != null) this.mpmhost.stop(""server shutting down."");"
1080 , -    // register with server manager , +    if (this.filesystemmanager != null) this.filesystemmanager.stop(); , -    // register with server manager , }
1081 , -    try { ," +    if (this.mpmhost != null) this.mpmhost.stop(""server shutting down.""); ", -    try { , 
1082 ," -      inetaddress ia = getremoteinetaddress(request.getport()', 'request.getserverstartcode()); ", } ," -      inetaddress ia = getremoteinetaddress(request.getport()', 'request.getserverstartcode()); ", private void stopchores() {
1083 ," -      servername rs = this.servermanager.regionserverstartup(ia', 'request.getport() ",  ," -      servername rs = this.servermanager.regionserverstartup(ia', 'request.getport() "," @@ -1288', '131 +811', '25 @@ masterservices', 'server {"
1084 ," -        request.getserverstartcode()', 'request.getservercurrenttime()); ", private void stopchores() { ," -        request.getserverstartcode()', 'request.getservercurrenttime()); ", }
1085 , - ," @@ -1288', '131 +811', '25 @@ masterservices', 'server { ", - , }
1086 , -      // send back some config info , } , -      // send back some config info , 
1087 , -      regionserverstartupresponse.builder resp = createconfigurationsubset(); , } , -      regionserverstartupresponse.builder resp = createconfigurationsubset(); , -  @override
1088 , -      namestringpair.builder entry = namestringpair.newbuilder() ,  , -      namestringpair.builder entry = namestringpair.newbuilder() , -  public regionserverstartupresponse regionserverstartup(
1089 , -        .setname(hconstants.key_for_hostname_seen_by_master) , -  @override , -        .setname(hconstants.key_for_hostname_seen_by_master) ," -      rpccontroller controller', 'regionserverstartuprequest request) throws serviceexception {"
1090 , -        .setvalue(rs.gethostname()); , -  public regionserverstartupresponse regionserverstartup( , -        .setvalue(rs.gethostname()); , -    // register with server manager
1091 , -      resp.addmapentries(entry.build()); ," -      rpccontroller controller', 'regionserverstartuprequest request) throws serviceexception { ", -      resp.addmapentries(entry.build()); , -    try {
1092 , - , -    // register with server manager , - ," -      inetaddress ia = getremoteinetaddress(request.getport()', 'request.getserverstartcode());"
1093 , -      return resp.build(); , -    try { , -      return resp.build(); ," -      servername rs = this.servermanager.regionserverstartup(ia', 'request.getport()"
1094 , -    } catch (ioexception ioe) { ," -      inetaddress ia = getremoteinetaddress(request.getport()', 'request.getserverstartcode()); ", -    } catch (ioexception ioe) { ," -        request.getserverstartcode()', 'request.getservercurrenttime());"
1095 , -      throw new serviceexception(ioe); ," -      servername rs = this.servermanager.regionserverstartup(ia', 'request.getport() ", -      throw new serviceexception(ioe); , -
1096 , -    } ," -        request.getserverstartcode()', 'request.getservercurrenttime()); ", -    } , -      // send back some config info
1097 , -  } , - , -  } , -      regionserverstartupresponse.builder resp = createconfigurationsubset();
1098 , - , -      // send back some config info , - , -      namestringpair.builder entry = namestringpair.newbuilder()
1099 , /** , -      regionserverstartupresponse.builder resp = createconfigurationsubset(); , /** , -        .setname(hconstants.key_for_hostname_seen_by_master)
1100 ," [""* @return get remote side's inetaddress""] ", -      namestringpair.builder entry = namestringpair.newbuilder() ," [""* @return get remote side's inetaddress""] ", -        .setvalue(rs.gethostname());
1101 , * @throws unknownhostexception , -        .setname(hconstants.key_for_hostname_seen_by_master) , * @throws unknownhostexception , -      resp.addmapentries(entry.build());
1102 , */ , -        .setvalue(rs.gethostname()); , */ , -
1103 ," -  inetaddress getremoteinetaddress(final int port', 'final long serverstartcode) ", -      resp.addmapentries(entry.build()); ," -  inetaddress getremoteinetaddress(final int port', 'final long serverstartcode) ", -      return resp.build();
1104 , -  throws unknownhostexception { , - , -  throws unknownhostexception { , -    } catch (ioexception ioe) {
1105 , +  inetaddress getremoteinetaddress(final int port , -      return resp.build(); , +  inetaddress getremoteinetaddress(final int port , -      throw new serviceexception(ioe);
1106 , +      final long serverstartcode) throws unknownhostexception { , -    } catch (ioexception ioe) { , +      final long serverstartcode) throws unknownhostexception { , -    }
1107 , // do it out here in its own little method so can fake an address when , -      throw new serviceexception(ioe); , // do it out here in its own little method so can fake an address when , -  }
1108 , // mocking up in tests. , -    } , // mocking up in tests. , -
1109 , -    return rpcserver.getremoteip(); , -  } , -    return rpcserver.getremoteip(); , /**
1110 , -  } , - , -  } ," [""* @return get remote side's inetaddress""]"
1111 , - , /** , - , * @throws unknownhostexception
1112 , -  /** ," [""* @return get remote side's inetaddress""] ", -  /** , */
1113 , -   * @return subset of configuration to pass initializing regionservers: e.g. , * @throws unknownhostexception , -   * @return subset of configuration to pass initializing regionservers: e.g. ," -  inetaddress getremoteinetaddress(final int port', 'final long serverstartcode)"
1114 , -   * the filesystem to use and root directory to use. , */ , -   * the filesystem to use and root directory to use. , -  throws unknownhostexception {
1115 , -   */ ," -  inetaddress getremoteinetaddress(final int port', 'final long serverstartcode) ", -   */ , +  inetaddress getremoteinetaddress(final int port
1116 , -  protected regionserverstartupresponse.builder createconfigurationsubset() { , -  throws unknownhostexception { , -  protected regionserverstartupresponse.builder createconfigurationsubset() { , +      final long serverstartcode) throws unknownhostexception {
1117 , -    regionserverstartupresponse.builder resp = addconfig( , +  inetaddress getremoteinetaddress(final int port , -    regionserverstartupresponse.builder resp = addconfig( , // do it out here in its own little method so can fake an address when
1118 ," -      regionserverstartupresponse.newbuilder()', 'hconstants.hbase_dir); ", +      final long serverstartcode) throws unknownhostexception { ," -      regionserverstartupresponse.newbuilder()', 'hconstants.hbase_dir); ", // mocking up in tests.
1119 ," -    return addconfig(resp', '""fs.default.name""); ", // do it out here in its own little method so can fake an address when ," -    return addconfig(resp', '""fs.default.name""); ", -    return rpcserver.getremoteip();
1120 , -  } , // mocking up in tests. , -  } , -  }
1121 , - , -    return rpcserver.getremoteip(); , - , -
1122 , -  private regionserverstartupresponse.builder addconfig( , -  } , -  private regionserverstartupresponse.builder addconfig( , -  /**
1123 ," -      final regionserverstartupresponse.builder resp', 'final string key) { ", +    inetaddress ia = rpcserver.getremoteip(); ," -      final regionserverstartupresponse.builder resp', 'final string key) { ", -   * @return subset of configuration to pass initializing regionservers: e.g.
1124 , -    namestringpair.builder entry = namestringpair.newbuilder() ,  , -    namestringpair.builder entry = namestringpair.newbuilder() , -   * the filesystem to use and root directory to use.
1125 , -      .setname(key) , -  /** , -      .setname(key) , -   */
1126 , -      .setvalue(this.conf.get(key)); , -   * @return subset of configuration to pass initializing regionservers: e.g. , -      .setvalue(this.conf.get(key)); , -  protected regionserverstartupresponse.builder createconfigurationsubset() {
1127 , -    resp.addmapentries(entry.build()); , -   * the filesystem to use and root directory to use. , -    resp.addmapentries(entry.build()); , -    regionserverstartupresponse.builder resp = addconfig(
1128 , -    return resp; , -   */ , -    return resp; ," -      regionserverstartupresponse.newbuilder()', 'hconstants.hbase_dir);"
1129 , -  } , -  protected regionserverstartupresponse.builder createconfigurationsubset() { , -  } ," -    return addconfig(resp', '""fs.default.name"");"
1130 , - , -    regionserverstartupresponse.builder resp = addconfig( , - , -  }
1131 , -  @override ," -      regionserverstartupresponse.newbuilder()', 'hconstants.hbase_dir); ", -  @override , -
1132 , -  public getlastflushedsequenceidresponse getlastflushedsequenceid(rpccontroller controller ," -    return addconfig(resp', '""fs.default.name""); ", -  public getlastflushedsequenceidresponse getlastflushedsequenceid(rpccontroller controller , -  private regionserverstartupresponse.builder addconfig(
1133 , -      getlastflushedsequenceidrequest request) throws serviceexception { , -  } , -      getlastflushedsequenceidrequest request) throws serviceexception { ," -      final regionserverstartupresponse.builder resp', 'final string key) {"
1134 , -    byte[] regionname = request.getregionname().tobytearray(); , - , -    byte[] regionname = request.getregionname().tobytearray(); , -    namestringpair.builder entry = namestringpair.newbuilder()
1135 , -    long seqid = servermanager.getlastflushedsequenceid(regionname); , -  private regionserverstartupresponse.builder addconfig( , -    long seqid = servermanager.getlastflushedsequenceid(regionname); , -      .setname(key)
1136 , -    return responseconverter.buildgetlastflushedsequenceidresponse(seqid); ," -      final regionserverstartupresponse.builder resp', 'final string key) { ", -    return responseconverter.buildgetlastflushedsequenceidresponse(seqid); , -      .setvalue(this.conf.get(key));
1137 , -  } , -    namestringpair.builder entry = namestringpair.newbuilder() , -  } , -    resp.addmapentries(entry.build());
1138 , - , -      .setname(key) , +    inetaddress ia = rpcserver.getremoteip(); , -    return resp;
1139 , -  @override , -      .setvalue(this.conf.get(key)); ,  , -  }
1140 , -  public regionserverreportresponse regionserverreport( , -    resp.addmapentries(entry.build()); , -  @override , -
1141 ," -      rpccontroller controller', 'regionserverreportrequest request) throws serviceexception { ", -    return resp; , -  public regionserverreportresponse regionserverreport( , -  @override
1142 , -    try { , -  } ," -      rpccontroller controller', 'regionserverreportrequest request) throws serviceexception { ", -  public getlastflushedsequenceidresponse getlastflushedsequenceid(rpccontroller controller
1143 , -      clusterstatusprotos.serverload sl = request.getload(); , - , -    try { , -      getlastflushedsequenceidrequest request) throws serviceexception {
1144 , -      servername servername = protobufutil.toservername(request.getserver()); , -  @override , -      clusterstatusprotos.serverload sl = request.getload(); , -    byte[] regionname = request.getregionname().tobytearray();
1145 , -      serverload oldload = servermanager.getload(servername); , -  public getlastflushedsequenceidresponse getlastflushedsequenceid(rpccontroller controller , -      servername servername = protobufutil.toservername(request.getserver()); , -    long seqid = servermanager.getlastflushedsequenceid(regionname);
1146 ," -      this.servermanager.regionserverreport(servername', 'new serverload(sl)); ", -      getlastflushedsequenceidrequest request) throws serviceexception { , -      serverload oldload = servermanager.getload(servername); , -    return responseconverter.buildgetlastflushedsequenceidresponse(seqid);
1147 , -      if (sl != null && this.metricsmaster != null) { , -    byte[] regionname = request.getregionname().tobytearray(); ," -      this.servermanager.regionserverreport(servername', 'new serverload(sl)); ", -  }
1148 , -        // up our metrics. , -    long seqid = servermanager.getlastflushedsequenceid(regionname); , -      if (sl != null && this.metricsmaster != null) { , -
1149 , -        this.metricsmaster.incrementrequests(sl.gettotalnumberofrequests() , -    return responseconverter.buildgetlastflushedsequenceidresponse(seqid); , -        // up our metrics. , -  @override
1150 , -          - (oldload != null ? oldload.gettotalnumberofrequests() : 0)); , -  } , -        this.metricsmaster.incrementrequests(sl.gettotalnumberofrequests() , -  public regionserverreportresponse regionserverreport(
1151 , -      } , - , -          - (oldload != null ? oldload.gettotalnumberofrequests() : 0)); ," -      rpccontroller controller', 'regionserverreportrequest request) throws serviceexception {"
1152 , -    } catch (ioexception ioe) { , -  @override , -      } , -    try {
1153 , -      throw new serviceexception(ioe); , -  public regionserverreportresponse regionserverreport( , -    } catch (ioexception ioe) { , -      clusterstatusprotos.serverload sl = request.getload();
1154 , -    } ," -      rpccontroller controller', 'regionserverreportrequest request) throws serviceexception { ", -      throw new serviceexception(ioe); , -      servername servername = protobufutil.toservername(request.getserver());
1155 , - , -    try { , -    } , -      serverload oldload = servermanager.getload(servername);
1156 , -    return regionserverreportresponse.newbuilder().build(); , -      clusterstatusprotos.serverload sl = request.getload(); , - ," -      this.servermanager.regionserverreport(servername', 'new serverload(sl));"
1157 , -  } , -      servername servername = protobufutil.toservername(request.getserver()); , -    return regionserverreportresponse.newbuilder().build(); , -      if (sl != null && this.metricsmaster != null) {
1158 , - , -      serverload oldload = servermanager.getload(servername); , -  } , -        // up our metrics.
1159 , -  @override ," -      this.servermanager.regionserverreport(servername', 'new serverload(sl)); ", - , -        this.metricsmaster.incrementrequests(sl.gettotalnumberofrequests()
1160 , -  public reportrsfatalerrorresponse reportrsfatalerror( , -      if (sl != null && this.metricsmaster != null) { , -  @override , -          - (oldload != null ? oldload.gettotalnumberofrequests() : 0));
1161 ," -      rpccontroller controller', 'reportrsfatalerrorrequest request) throws serviceexception { ", -        // up our metrics. , -  public reportrsfatalerrorresponse reportrsfatalerror( , -      }
1162 , -    string errortext = request.geterrormessage(); , -        this.metricsmaster.incrementrequests(sl.gettotalnumberofrequests() ," -      rpccontroller controller', 'reportrsfatalerrorrequest request) throws serviceexception { ", -    } catch (ioexception ioe) {
1163 , -    servername sn = protobufutil.toservername(request.getserver()); , -          - (oldload != null ? oldload.gettotalnumberofrequests() : 0)); , -    string errortext = request.geterrormessage(); , -      throw new serviceexception(ioe);
1164 ," -    string msg = ""region server "" + sn + ", -      } , -    servername sn = protobufutil.toservername(request.getserver()); , -    }
1165 ," -      "" reported a fatal error:\\n"" + errortext; ", -    } catch (ioexception ioe) { ," -    string msg = ""region server "" + sn + ", -
1166 , -    log.error(msg); , -      throw new serviceexception(ioe); ," -      "" reported a fatal error:\\n"" + errortext; ", -    return regionserverreportresponse.newbuilder().build();
1167 , -    rsfatals.add(msg); , -    } , -    log.error(msg); , -  }
1168 , - , - , -    rsfatals.add(msg); , -
1169 , -    return reportrsfatalerrorresponse.newbuilder().build(); , -    return regionserverreportresponse.newbuilder().build(); , - , -  @override
1170 , -  } , -  } , -    return reportrsfatalerrorresponse.newbuilder().build(); , -  public reportrsfatalerrorresponse reportrsfatalerror(
1171 , +    inetaddress ia = rpcserver.getremoteip(); , - , -  } ," -      rpccontroller controller', 'reportrsfatalerrorrequest request) throws serviceexception {"
1172 ,  , -  @override , - , -    string errortext = request.geterrormessage();
1173 , -  public boolean ismasterrunning() { , -  public reportrsfatalerrorresponse reportrsfatalerror( , -  public boolean ismasterrunning() { , -    servername sn = protobufutil.toservername(request.getserver());
1174 , -    return !isstopped(); ," -      rpccontroller controller', 'reportrsfatalerrorrequest request) throws serviceexception { ", -    return !isstopped(); ," -    string msg = ""region server "" + sn +"
1175 , -  } , -    string errortext = request.geterrormessage(); , -  } ," -      "" reported a fatal error:\\n"" + errortext;"
1176 , - , -    servername sn = protobufutil.toservername(request.getserver()); , - , -    log.error(msg);
1177 , -  @override ," -    string msg = ""region server "" + sn + ", -  @override , -    rsfatals.add(msg);
1178 ," -  public ismasterrunningresponse ismasterrunning(rpccontroller c', 'ismasterrunningrequest req) "," -      "" reported a fatal error:\\n"" + errortext; "," -  public ismasterrunningresponse ismasterrunning(rpccontroller c', 'ismasterrunningrequest req) ", -
1179 , -  throws serviceexception { , -    log.error(msg); , -  throws serviceexception { , -    return reportrsfatalerrorresponse.newbuilder().build();
1180 , -    return ismasterrunningresponse.newbuilder().setismasterrunning(ismasterrunning()).build(); , -    rsfatals.add(msg); , -    return ismasterrunningresponse.newbuilder().setismasterrunning(ismasterrunning()).build(); , -  }
1181 , -  } , - , -  } , +    inetaddress ia = rpcserver.getremoteip();
1182 , - , -    return reportrsfatalerrorresponse.newbuilder().build(); , - , 
1183 , -  @override , -  } , -  @override , -  public boolean ismasterrunning() {
1184 , -  public runcatalogscanresponse runcatalogscan(rpccontroller c , - , -  public runcatalogscanresponse runcatalogscan(rpccontroller c , -    return !isstopped();
1185 , -      runcatalogscanrequest req) throws serviceexception { , -  public boolean ismasterrunning() { , -      runcatalogscanrequest req) throws serviceexception { , +    // the call could be from the local regionserver
1186 , -    try { , -    return !isstopped(); , -    try { ," +    // in which case', 'there is no remote address."
1187 , -      return responseconverter.buildruncatalogscanresponse(catalogjanitorchore.scan()); , -  } , -      return responseconverter.buildruncatalogscanresponse(catalogjanitorchore.scan()); , +    if (ia == null && serverstartcode == startcode) {
1188 , -    } catch (ioexception ioe) { , - , -    } catch (ioexception ioe) { , +      inetsocketaddress isa = rpcservices.getsocketaddress();
1189 , -      throw new serviceexception(ioe); , -  @override , -      throw new serviceexception(ioe); , +      if (isa != null && isa.getport() == port) {
1190 , +    // the call could be from the local regionserver ," -  public ismasterrunningresponse ismasterrunning(rpccontroller c', 'ismasterrunningrequest req) ", -    } , +        ia = isa.getaddress();
1191 ," +    // in which case', 'there is no remote address. ", -  throws serviceexception { , +    // the call could be from the local regionserver , }
1192 , +    if (ia == null && serverstartcode == startcode) { , -    return ismasterrunningresponse.newbuilder().setismasterrunning(ismasterrunning()).build(); ," +    // in which case', 'there is no remote address. ", -
1193 , +      inetsocketaddress isa = rpcservices.getsocketaddress(); , -  } , +    if (ia == null && serverstartcode == startcode) { , -  @override
1194 , +      if (isa != null && isa.getport() == port) { , - , +      inetsocketaddress isa = rpcservices.getsocketaddress(); ," -  public ismasterrunningresponse ismasterrunning(rpccontroller c', 'ismasterrunningrequest req)"
1195 , +        ia = isa.getaddress(); , -  @override , +      if (isa != null && isa.getport() == port) { , -  throws serviceexception {
1196 , } , -  public runcatalogscanresponse runcatalogscan(rpccontroller c , +        ia = isa.getaddress(); , -    return ismasterrunningresponse.newbuilder().setismasterrunning(ismasterrunning()).build();
1197 , } , -      runcatalogscanrequest req) throws serviceexception { , } , }
1198 , - , -    try { , - , -
1199 , -  @override , -      return responseconverter.buildruncatalogscanresponse(catalogjanitorchore.scan()); , -  @override , -  @override
1200 , -  public enablecatalogjanitorresponse enablecatalogjanitor(rpccontroller c , -    } catch (ioexception ioe) { , -  public enablecatalogjanitorresponse enablecatalogjanitor(rpccontroller c , -  public runcatalogscanresponse runcatalogscan(rpccontroller c
1201 , -      enablecatalogjanitorrequest req) throws serviceexception { , -      throw new serviceexception(ioe); , -      enablecatalogjanitorrequest req) throws serviceexception { , -      runcatalogscanrequest req) throws serviceexception {
1202 , -    return enablecatalogjanitorresponse.newbuilder(). , +    // the call could be from the local regionserver , -    return enablecatalogjanitorresponse.newbuilder(). , -    try {
1203 , -        setprevvalue(catalogjanitorchore.setenabled(req.getenable())).build(); ," +    // in which case', 'there is no remote address. ", -        setprevvalue(catalogjanitorchore.setenabled(req.getenable())).build(); , -      return responseconverter.buildruncatalogscanresponse(catalogjanitorchore.scan());
1204 , -  } , +    if (ia == null && serverstartcode == startcode) { , } , -    } catch (ioexception ioe) {
1205 , - , +      inetsocketaddress isa = rpcservices.getsocketaddress(); , - , -      throw new serviceexception(ioe);
1206 , -  @override , +      if (isa != null && isa.getport() == port) { , -  @override , -    }
1207 , -  public iscatalogjanitorenabledresponse iscatalogjanitorenabled(rpccontroller c , +        ia = isa.getaddress(); , -  public iscatalogjanitorenabledresponse iscatalogjanitorenabled(rpccontroller c , -  }
1208 , -      iscatalogjanitorenabledrequest req) throws serviceexception { , } , -      iscatalogjanitorenabledrequest req) throws serviceexception { , -
1209 , -    boolean isenabled = catalogjanitorchore != null ? catalogjanitorchore.getenabled() : false; , } , -    boolean isenabled = catalogjanitorchore != null ? catalogjanitorchore.getenabled() : false; , -  @override
1210 , -    return iscatalogjanitorenabledresponse.newbuilder().setvalue(isenabled).build(); , - , -    return iscatalogjanitorenabledresponse.newbuilder().setvalue(isenabled).build(); , -  public enablecatalogjanitorresponse enablecatalogjanitor(rpccontroller c
1211 , +    return ia; , -  @override , +    return ia; , -      enablecatalogjanitorrequest req) throws serviceexception {
1212 , } , -  public enablecatalogjanitorresponse enablecatalogjanitor(rpccontroller c , } , -    return enablecatalogjanitorresponse.newbuilder().
1213 ,  , -      enablecatalogjanitorrequest req) throws serviceexception { ,  , -        setprevvalue(catalogjanitorchore.setenabled(req.getenable())).build();
1214 , /** , -    return enablecatalogjanitorresponse.newbuilder(). , /** , -  }
1215 ," @@ -1515', '54 +932', '6 @@ masterservices', 'server { ", -        setprevvalue(catalogjanitorchore.setenabled(req.getenable())).build(); ," @@ -1515', '54 +932', '6 @@ masterservices', 'server { ", -
1216 , return balancerran; , -  } , return balancerran; , -  @override
1217 , } , - , } , -  public iscatalogjanitorenabledresponse iscatalogjanitorenabled(rpccontroller c
1218 ,  , -  @override ,  , -      iscatalogjanitorenabledrequest req) throws serviceexception {
1219 , -  @override , -  public iscatalogjanitorenabledresponse iscatalogjanitorenabled(rpccontroller c , -  @override , -    boolean isenabled = catalogjanitorchore != null ? catalogjanitorchore.getenabled() : false;
1220 ," -  public balanceresponse balance(rpccontroller c', 'balancerequest request) throws serviceexception { ", -      iscatalogjanitorenabledrequest req) throws serviceexception { ," -  public balanceresponse balance(rpccontroller c', 'balancerequest request) throws serviceexception { ", -    return iscatalogjanitorenabledresponse.newbuilder().setvalue(isenabled).build();
1221 , -    try { , -    boolean isenabled = catalogjanitorchore != null ? catalogjanitorchore.getenabled() : false; , -    try { , +    return ia;
1222 , -      return balanceresponse.newbuilder().setbalancerran(balance()).build(); , -    return iscatalogjanitorenabledresponse.newbuilder().setvalue(isenabled).build(); , -      return balanceresponse.newbuilder().setbalancerran(balance()).build(); , }
1223 , -    } catch (ioexception ex) { , +    return ia; , -    } catch (ioexception ex) { , 
1224 , -      throw new serviceexception(ex); , } , -      throw new serviceexception(ex); , /**
1225 , -    } ,  , -    } ," @@ -1515', '54 +932', '6 @@ masterservices', 'server {"
1226 , -  } , /** , -  } , return balancerran;
1227 , - ," @@ -1515', '54 +932', '6 @@ masterservices', 'server { ", - , }
1228 , -  enum balanceswitchmode { , return balancerran; , -  enum balanceswitchmode { , 
1229 , -    sync , } , -    sync , -  @override
1230 , -    async ,  , -    async ," -  public balanceresponse balance(rpccontroller c', 'balancerequest request) throws serviceexception {"
1231 , -  } , -  @override , -  } , -    try {
1232 , - ," -  public balanceresponse balance(rpccontroller c', 'balancerequest request) throws serviceexception { ", - , -      return balanceresponse.newbuilder().setbalancerran(balance()).build();
1233 , -  /** , -    try { , -  /** , -    } catch (ioexception ex) {
1234 , -   * assigns balancer switch according to balanceswitchmode , -      return balanceresponse.newbuilder().setbalancerran(balance()).build(); , -   * assigns balancer switch according to balanceswitchmode , -      throw new serviceexception(ex);
1235 , -   * @param b new balancer switch , -    } catch (ioexception ex) { , -   * @param b new balancer switch , -    }
1236 , -   * @param mode balanceswitchmode , -      throw new serviceexception(ex); , -   * @param mode balanceswitchmode , -  }
1237 , -   * @return old balancer switch , -    } , -   * @return old balancer switch , -
1238 , -   */ , -  } , -   */ , -  enum balanceswitchmode {
1239 ," -  public boolean switchbalancer(final boolean b', 'balanceswitchmode mode) throws ioexception { ", - ," -  public boolean switchbalancer(final boolean b', 'balanceswitchmode mode) throws ioexception { ", -    sync
1240 , -    boolean oldvalue = this.loadbalancertracker.isbalanceron(); , -  enum balanceswitchmode { , -    boolean oldvalue = this.loadbalancertracker.isbalanceron(); , -    async
1241 , -    boolean newvalue = b; , -    sync , -    boolean newvalue = b; , -  }
1242 , -    try { , -    async , -    try { , -
1243 , -      if (this.cphost != null) { , -  } , -      if (this.cphost != null) { , -  /**
1244 , -        newvalue = this.cphost.prebalanceswitch(newvalue); , - , -        newvalue = this.cphost.prebalanceswitch(newvalue); , -   * assigns balancer switch according to balanceswitchmode
1245 , -      } , -  /** , -      } , -   * @param b new balancer switch
1246 , -      try { , -   * assigns balancer switch according to balanceswitchmode , -      try { , -   * @param mode balanceswitchmode
1247 , -        if (mode == balanceswitchmode.sync) { , -   * @param b new balancer switch , -        if (mode == balanceswitchmode.sync) { , -   * @return old balancer switch
1248 , -          synchronized (this.balancer) { , -   * @param mode balanceswitchmode , -          synchronized (this.balancer) { , -   */
1249 , -            this.loadbalancertracker.setbalanceron(newvalue); , -   * @return old balancer switch , -            this.loadbalancertracker.setbalanceron(newvalue); ," -  public boolean switchbalancer(final boolean b', 'balanceswitchmode mode) throws ioexception {"
1250 , -          } , -   */ , -          } , -    boolean oldvalue = this.loadbalancertracker.isbalanceron();
1251 , -        } else { ," -  public boolean switchbalancer(final boolean b', 'balanceswitchmode mode) throws ioexception { ", -        } else { , -    boolean newvalue = b;
1252 , -          this.loadbalancertracker.setbalanceron(newvalue); , -    boolean oldvalue = this.loadbalancertracker.isbalanceron(); , -          this.loadbalancertracker.setbalanceron(newvalue); , -    try {
1253 , -        } , -    boolean newvalue = b; , -        } , -      if (this.cphost != null) {
1254 , -      } catch (keeperexception ke) { , -    try { , -      } catch (keeperexception ke) { , -        newvalue = this.cphost.prebalanceswitch(newvalue);
1255 , -        throw new ioexception(ke); , -      if (this.cphost != null) { , -        throw new ioexception(ke); , -      }
1256 , -      } , -        newvalue = this.cphost.prebalanceswitch(newvalue); , -      } , -      try {
1257 ," -      log.info(getclientidauditprefix() + "" set balanceswitch="" + newvalue); ", -      } ," -      log.info(getclientidauditprefix() + "" set balanceswitch="" + newvalue); ", -        if (mode == balanceswitchmode.sync) {
1258 , -      if (this.cphost != null) { , -      try { , -      if (this.cphost != null) { , -          synchronized (this.balancer) {
1259 ," -        this.cphost.postbalanceswitch(oldvalue', 'newvalue); ", -        if (mode == balanceswitchmode.sync) { ," -        this.cphost.postbalanceswitch(oldvalue', 'newvalue); ", -            this.loadbalancertracker.setbalanceron(newvalue);
1260 , -      } , -          synchronized (this.balancer) { , -      } , -          }
1261 , -    } catch (ioexception ioe) { , -            this.loadbalancertracker.setbalanceron(newvalue); , -    } catch (ioexception ioe) { , -        } else {
1262 ," -      log.warn(""error flipping balance switch""', 'ioe); ", -          } ," -      log.warn(""error flipping balance switch""', 'ioe); ", -          this.loadbalancertracker.setbalanceron(newvalue);
1263 , -    } , -        } else { , -    } , -        }
1264 , -    return oldvalue; , -          this.loadbalancertracker.setbalanceron(newvalue); , -    return oldvalue; , -      } catch (keeperexception ke) {
1265 , -  } , -        } , -  } , -        throw new ioexception(ke);
1266 , - , -      } catch (keeperexception ke) { , - , -      }
1267 , /** , -        throw new ioexception(ke); , /** ," -      log.info(getclientidauditprefix() + "" set balanceswitch="" + newvalue);"
1268 , * @return client info for use as prefix on an audit log string; who did an action , -      } , * @return client info for use as prefix on an audit log string; who did an action , -      if (this.cphost != null) {
1269 , */ ," -      log.info(getclientidauditprefix() + "" set balanceswitch="" + newvalue); ", */ ," -        this.cphost.postbalanceswitch(oldvalue', 'newvalue);"
1270 ," @@ -1571', '26 +940', '6 @@ masterservices', 'server { ", -      if (this.cphost != null) { ," @@ -1571', '26 +940', '6 @@ masterservices', 'server { ", -      }
1271 , requestcontext.get().getremoteaddress(); ," -        this.cphost.postbalanceswitch(oldvalue', 'newvalue); ", requestcontext.get().getremoteaddress(); , -    } catch (ioexception ioe) {
1272 , } , -      } , } ," -      log.warn(""error flipping balance switch""', 'ioe);"
1273 ,  , -    } catch (ioexception ioe) { ,  , -    }
1274 , -  public boolean synchronousbalanceswitch(final boolean b) throws ioexception { ," -      log.warn(""error flipping balance switch""', 'ioe); ", -  public boolean synchronousbalanceswitch(final boolean b) throws ioexception { , -    return oldvalue;
1275 ," -    return switchbalancer(b', 'balanceswitchmode.sync); ", -    } ," -    return switchbalancer(b', 'balanceswitchmode.sync); ", -  }
1276 , -  } , -    return oldvalue; , -  } , -
1277 , - , -  } , - , /**
1278 , -  public boolean balanceswitch(final boolean b) throws ioexception { , - , -  public boolean balanceswitch(final boolean b) throws ioexception { , * @return client info for use as prefix on an audit log string; who did an action
1279 ," -    return switchbalancer(b', 'balanceswitchmode.async); ", /** ," -    return switchbalancer(b', 'balanceswitchmode.async); ", */
1280 , -  } , * @return client info for use as prefix on an audit log string; who did an action , -  } ," @@ -1571', '26 +940', '6 @@ masterservices', 'server {"
1281 , - , */ , - , requestcontext.get().getremoteaddress();
1282 , -  @override ," @@ -1571', '26 +940', '6 @@ masterservices', 'server { ", -  @override , }
1283 , -  public setbalancerrunningresponse setbalancerrunning( , requestcontext.get().getremoteaddress(); , -  public setbalancerrunningresponse setbalancerrunning( , 
1284 ," -      rpccontroller controller', 'setbalancerrunningrequest req) throws serviceexception { ", } ," -      rpccontroller controller', 'setbalancerrunningrequest req) throws serviceexception { ", -  public boolean synchronousbalanceswitch(final boolean b) throws ioexception {
1285 , -    try { ,  , -    try { ," -    return switchbalancer(b', 'balanceswitchmode.sync);"
1286 , -      boolean prevvalue = (req.getsynchronous())? , -  public boolean synchronousbalanceswitch(final boolean b) throws ioexception { , -      boolean prevvalue = (req.getsynchronous())? , -  }
1287 , -        synchronousbalanceswitch(req.geton()):balanceswitch(req.geton()); ," -    return switchbalancer(b', 'balanceswitchmode.sync); ", -        synchronousbalanceswitch(req.geton()):balanceswitch(req.geton()); , -
1288 , -      return setbalancerrunningresponse.newbuilder().setprevbalancevalue(prevvalue).build(); , -  } , -      return setbalancerrunningresponse.newbuilder().setprevbalancevalue(prevvalue).build(); , -  public boolean balanceswitch(final boolean b) throws ioexception {
1289 , -    } catch (ioexception ioe) { , - , -    } catch (ioexception ioe) { ," -    return switchbalancer(b', 'balanceswitchmode.async);"
1290 , -      throw new serviceexception(ioe); , -  public boolean balanceswitch(final boolean b) throws ioexception { , -      throw new serviceexception(ioe); , -  }
1291 , -    } ," -    return switchbalancer(b', 'balanceswitchmode.async); ", -    } , -
1292 , -  } , -  } , -  } , -  @override
1293 , - , - , - , -  public setbalancerrunningresponse setbalancerrunning(
1294 , /** , -  @override , /** ," -      rpccontroller controller', 'setbalancerrunningrequest req) throws serviceexception {"
1295 , * switch for the background catalogjanitor thread. , -  public setbalancerrunningresponse setbalancerrunning( , * switch for the background catalogjanitor thread. , -    try {
1296 , * used for testing.  the thread will continue to run.  it will just be a noop ," -      rpccontroller controller', 'setbalancerrunningrequest req) throws serviceexception { ", * used for testing.  the thread will continue to run.  it will just be a noop , -      boolean prevvalue = (req.getsynchronous())?
1297 ," @@ -1602', '88 +951', '11 @@ masterservices', 'server { ", -    try { ," @@ -1601', '91 +950', '14 @@ masterservices', 'server { ", -        synchronousbalanceswitch(req.geton()):balanceswitch(req.geton());
1298 , } , -      boolean prevvalue = (req.getsynchronous())? , this.catalogjanitorchore.setenabled(b); , -      return setbalancerrunningresponse.newbuilder().setprevbalancevalue(prevvalue).build();
1299 ,  , -        synchronousbalanceswitch(req.geton()):balanceswitch(req.geton()); , } , -    } catch (ioexception ioe) {
1300 , @override , -      return setbalancerrunningresponse.newbuilder().setprevbalancevalue(prevvalue).build(); ,  , -      throw new serviceexception(ioe);
1301 , -  public dispatchmergingregionsresponse dispatchmergingregions( , -    } catch (ioexception ioe) { , -  @override , -    }
1302 ," -      rpccontroller controller', 'dispatchmergingregionsrequest request) ", -      throw new serviceexception(ioe); , -  public dispatchmergingregionsresponse dispatchmergingregions( , -  }
1303 , -      throws serviceexception { , -    } ," -      rpccontroller controller', 'dispatchmergingregionsrequest request) ", -
1304 , -    final byte[] encodednameofregiona = request.getregiona().getvalue() , -  } , -      throws serviceexception { , /**
1305 , -        .tobytearray(); , - , -    final byte[] encodednameofregiona = request.getregiona().getvalue() , * switch for the background catalogjanitor thread.
1306 , -    final byte[] encodednameofregionb = request.getregionb().getvalue() , /** , -        .tobytearray(); , * used for testing.  the thread will continue to run.  it will just be a noop
1307 , -        .tobytearray(); , * switch for the background catalogjanitor thread. , -    final byte[] encodednameofregionb = request.getregionb().getvalue() ," @@ -1601', '91 +950', '14 @@ masterservices', 'server {"
1308 , -    final boolean forcible = request.getforcible(); , * used for testing.  the thread will continue to run.  it will just be a noop , -        .tobytearray(); , this.catalogjanitorchore.setenabled(b);
1309 , -    if (request.getregiona().gettype() != regionspecifiertype.encoded_region_name ," @@ -1601', '91 +950', '14 @@ masterservices', 'server { ", -    final boolean forcible = request.getforcible(); , }
1310 , -        || request.getregionb().gettype() != regionspecifiertype.encoded_region_name) { , this.catalogjanitorchore.setenabled(b); , -    if (request.getregiona().gettype() != regionspecifiertype.encoded_region_name , 
1311 ," -      log.warn(""mergeregions specifier type: expected: "" ", } , -        || request.getregionb().gettype() != regionspecifiertype.encoded_region_name) { , -  @override
1312 ," -          + regionspecifiertype.encoded_region_name + "" actual: region_a="" ",  ," -      log.warn(""mergeregions specifier type: expected: "" ", -  public dispatchmergingregionsresponse dispatchmergingregions(
1313 ," -          + request.getregiona().gettype() + ""', 'region_b="" ", -  @override ," -          + regionspecifiertype.encoded_region_name + "" actual: region_a="" "," -      rpccontroller controller', 'dispatchmergingregionsrequest request)"
1314 , -          + request.getregionb().gettype()); , -  public dispatchmergingregionsresponse dispatchmergingregions( ," -          + request.getregiona().gettype() + ""', 'region_b="" ", -      throws serviceexception {
1315 , -    } ," -      rpccontroller controller', 'dispatchmergingregionsrequest request) ", -          + request.getregionb().gettype()); , -    final byte[] encodednameofregiona = request.getregiona().getvalue()
1316 , -    regionstate regionstatea = assignmentmanager.getregionstates() , -      throws serviceexception { , -    } , -        .tobytearray();
1317 , -        .getregionstate(bytes.tostring(encodednameofregiona)); , -    final byte[] encodednameofregiona = request.getregiona().getvalue() , -    regionstate regionstatea = assignmentmanager.getregionstates() , -    final byte[] encodednameofregionb = request.getregionb().getvalue()
1318 , -    regionstate regionstateb = assignmentmanager.getregionstates() , -        .tobytearray(); , -        .getregionstate(bytes.tostring(encodednameofregiona)); , -        .tobytearray();
1319 , -        .getregionstate(bytes.tostring(encodednameofregionb)); , -    final byte[] encodednameofregionb = request.getregionb().getvalue() , -    regionstate regionstateb = assignmentmanager.getregionstates() , -    final boolean forcible = request.getforcible();
1320 , -    if (regionstatea == null || regionstateb == null) { , -        .tobytearray(); , -        .getregionstate(bytes.tostring(encodednameofregionb)); , -    if (request.getregiona().gettype() != regionspecifiertype.encoded_region_name
1321 , -      throw new serviceexception(new unknownregionexception( , -    final boolean forcible = request.getforcible(); , -    if (regionstatea == null || regionstateb == null) { , -        || request.getregionb().gettype() != regionspecifiertype.encoded_region_name) {
1322 , -          bytes.tostringbinary(regionstatea == null ? encodednameofregiona , -    if (request.getregiona().gettype() != regionspecifiertype.encoded_region_name , -      throw new serviceexception(new unknownregionexception( ," -      log.warn(""mergeregions specifier type: expected: """
1323 , -              : encodednameofregionb))); , -        || request.getregionb().gettype() != regionspecifiertype.encoded_region_name) { , -          bytes.tostringbinary(regionstatea == null ? encodednameofregiona ," -          + regionspecifiertype.encoded_region_name + "" actual: region_a="""
1324 , -    } ," -      log.warn(""mergeregions specifier type: expected: "" ", -              : encodednameofregionb))); ," -          + request.getregiona().gettype() + ""', 'region_b="""
1325 , - ," -          + regionspecifiertype.encoded_region_name + "" actual: region_a="" ", -    } , -          + request.getregionb().gettype());
1326 , -    if (!regionstatea.isopened() || !regionstateb.isopened()) { ," -          + request.getregiona().gettype() + ""', 'region_b="" ", - , -    }
1327 , -      throw new serviceexception(new mergeregionexception( , -          + request.getregionb().gettype()); , -    if (!regionstatea.isopened() || !regionstateb.isopened()) { , -    regionstate regionstatea = assignmentmanager.getregionstates()
1328 ," -        ""unable to merge regions not online "" + regionstatea + ""', '"" + regionstateb)); ", -    } , -      throw new serviceexception(new mergeregionexception( , -        .getregionstate(bytes.tostring(encodednameofregiona));
1329 , -    } , -    regionstate regionstatea = assignmentmanager.getregionstates() ," -        ""unable to merge regions not online "" + regionstatea + ""', '"" + regionstateb)); ", -    regionstate regionstateb = assignmentmanager.getregionstates()
1330 , - , -        .getregionstate(bytes.tostring(encodednameofregiona)); , -    } , -        .getregionstate(bytes.tostring(encodednameofregionb));
1331 , -    hregioninfo regioninfoa = regionstatea.getregion(); , -    regionstate regionstateb = assignmentmanager.getregionstates() , - , -    if (regionstatea == null || regionstateb == null) {
1332 , -    hregioninfo regioninfob = regionstateb.getregion(); , -        .getregionstate(bytes.tostring(encodednameofregionb)); , -    hregioninfo regioninfoa = regionstatea.getregion(); , -      throw new serviceexception(new unknownregionexception(
1333 , -    if (regioninfoa.compareto(regioninfob) == 0) { , -    if (regionstatea == null || regionstateb == null) { , -    hregioninfo regioninfob = regionstateb.getregion(); , -          bytes.tostringbinary(regionstatea == null ? encodednameofregiona
1334 , -      throw new serviceexception(new mergeregionexception( , -      throw new serviceexception(new unknownregionexception( , -    if (regioninfoa.compareto(regioninfob) == 0) { , -              : encodednameofregionb)));
1335 ," -        ""unable to merge a region to itself "" + regioninfoa + ""', '"" + regioninfob)); ", -          bytes.tostringbinary(regionstatea == null ? encodednameofregiona , -      throw new serviceexception(new mergeregionexception( , -    }
1336 , -    } , -              : encodednameofregionb))); ," -        ""unable to merge a region to itself "" + regioninfoa + ""', '"" + regioninfob)); ", -
1337 , - , -    } , -    } , -    if (!regionstatea.isopened() || !regionstateb.isopened()) {
1338 ," -    if (!forcible && !hregioninfo.areadjacent(regioninfoa', 'regioninfob)) { ", - , - , -      throw new serviceexception(new mergeregionexception(
1339 , -      throw new serviceexception(new mergeregionexception( , -    if (!regionstatea.isopened() || !regionstateb.isopened()) { ," -    if (!forcible && !hregioninfo.areadjacent(regioninfoa', 'regioninfob)) { "," -        ""unable to merge regions not online "" + regionstatea + ""', '"" + regionstateb));"
1340 ," -        ""unable to merge not adjacent regions "" ", -      throw new serviceexception(new mergeregionexception( , -      throw new serviceexception(new mergeregionexception( , -    }
1341 ," -          + regioninfoa.getregionnameasstring() + ""', '"" "," -        ""unable to merge regions not online "" + regionstatea + ""', '"" + regionstateb)); "," -        ""unable to merge not adjacent regions "" ", -
1342 , -          + regioninfob.getregionnameasstring() , -    } ," -          + regioninfoa.getregionnameasstring() + ""', '"" ", -    hregioninfo regioninfoa = regionstatea.getregion();
1343 ," -          + "" where forcible = "" + forcible)); ", - , -          + regioninfob.getregionnameasstring() , -    hregioninfo regioninfob = regionstateb.getregion();
1344 , -    } , -    hregioninfo regioninfoa = regionstatea.getregion(); ," -          + "" where forcible = "" + forcible)); ", -    if (regioninfoa.compareto(regioninfob) == 0) {
1345 , - , -    hregioninfo regioninfob = regionstateb.getregion(); , -    } , -      throw new serviceexception(new mergeregionexception(
1346 , -    try { , -    if (regioninfoa.compareto(regioninfob) == 0) { , - ," -        ""unable to merge a region to itself "" + regioninfoa + ""', '"" + regioninfob));"
1347 ," -      dispatchmergingregions(regioninfoa', 'regioninfob', 'forcible); ", -      throw new serviceexception(new mergeregionexception( , -    try { , -    }
1348 , -    } catch (ioexception ioe) { ," -        ""unable to merge a region to itself "" + regioninfoa + ""', '"" + regioninfob)); "," -      dispatchmergingregions(regioninfoa', 'regioninfob', 'forcible); ", -
1349 , -      throw new serviceexception(ioe); , -    } , -    } catch (ioexception ioe) { ," -    if (!forcible && !hregioninfo.areadjacent(regioninfoa', 'regioninfob)) {"
1350 , -    } , - , -      throw new serviceexception(ioe); , -      throw new serviceexception(new mergeregionexception(
1351 , - ," -    if (!forcible && !hregioninfo.areadjacent(regioninfoa', 'regioninfob)) { ", -    } ," -        ""unable to merge not adjacent regions """
1352 , -    return dispatchmergingregionsresponse.newbuilder().build(); , -      throw new serviceexception(new mergeregionexception( , - ," -          + regioninfoa.getregionnameasstring() + ""', '"""
1353 , -  } ," -        ""unable to merge not adjacent regions "" ", -    return dispatchmergingregionsresponse.newbuilder().build(); , -          + regioninfob.getregionnameasstring()
1354 , - ," -          + regioninfoa.getregionnameasstring() + ""', '"" ", -  } ," -          + "" where forcible = "" + forcible));"
1355 , -  @override , -          + regioninfob.getregionnameasstring() , - , -    }
1356 , -  public void dispatchmergingregions(final hregioninfo region_a ," -          + "" where forcible = "" + forcible)); ", @override , -
1357 ," -      final hregioninfo region_b', 'final boolean forcible) throws ioexception { ", -    } , public void dispatchmergingregions(final hregioninfo region_a , -    try {
1358 , -    checkinitialized(); , - ," final hregioninfo region_b', 'final boolean forcible) throws ioexception { "," -      dispatchmergingregions(regioninfoa', 'regioninfob', 'forcible);"
1359 , -    this.executorservice.submit(new dispatchmergingregionhandler(this , -    try { , checkinitialized(); , -    } catch (ioexception ioe) {
1360 ," -        this.catalogjanitorchore', 'region_a', 'region_b', 'forcible)); "," -      dispatchmergingregions(regioninfoa', 'regioninfob', 'forcible); ", -    this.executorservice.submit(new dispatchmergingregionhandler(this , -      throw new serviceexception(ioe);
1361 , -  } , -    } catch (ioexception ioe) { , +    this.service.submit(new dispatchmergingregionhandler(this , -    }
1362 , - , -      throw new serviceexception(ioe); ," this.catalogjanitorchore', 'region_a', 'region_b', 'forcible)); ", -
1363 , -  @override , -    } , } , -    return dispatchmergingregionsresponse.newbuilder().build();
1364 ," -  public moveregionresponse moveregion(rpccontroller controller', 'moveregionrequest req) ", - ,  , -  }
1365 , -  throws serviceexception { , -    return dispatchmergingregionsresponse.newbuilder().build(); , -  @override , -
1366 , -    final byte [] encodedregionname = req.getregion().getvalue().tobytearray(); , -  } ," -  public moveregionresponse moveregion(rpccontroller controller', 'moveregionrequest req) ", @override
1367 , -    regionspecifiertype type = req.getregion().gettype(); , - , -  throws serviceexception { , public void dispatchmergingregions(final hregioninfo region_a
1368 , -    final byte [] destservername = (req.hasdestservername())? , @override , -    final byte [] encodedregionname = req.getregion().getvalue().tobytearray(); ," final hregioninfo region_b', 'final boolean forcible) throws ioexception {"
1369 , -      bytes.tobytes(protobufutil.toservername(req.getdestservername()).getservername()):null; , public void dispatchmergingregions(final hregioninfo region_a , -    regionspecifiertype type = req.getregion().gettype(); , checkinitialized();
1370 , -    moveregionresponse mrr = moveregionresponse.newbuilder().build(); ," final hregioninfo region_b', 'final boolean forcible) throws ioexception { ", -    final byte [] destservername = (req.hasdestservername())? , -    this.executorservice.submit(new dispatchmergingregionhandler(this
1371 , - , checkinitialized(); , -      bytes.tobytes(protobufutil.toservername(req.getdestservername()).getservername()):null; , +    this.service.submit(new dispatchmergingregionhandler(this
1372 , -    if (type != regionspecifiertype.encoded_region_name) { , -    this.executorservice.submit(new dispatchmergingregionhandler(this , -    moveregionresponse mrr = moveregionresponse.newbuilder().build(); ," this.catalogjanitorchore', 'region_a', 'region_b', 'forcible));"
1373 ," -      log.warn(""moveregion specifier type: expected: "" + regionspecifiertype.encoded_region_name ", +    this.service.submit(new dispatchmergingregionhandler(this , - , }
1374 ," -        + "" actual: "" + type); "," this.catalogjanitorchore', 'region_a', 'region_b', 'forcible)); ", -    if (type != regionspecifiertype.encoded_region_name) { , 
1375 , -    } , } ," -      log.warn(""moveregion specifier type: expected: "" + regionspecifiertype.encoded_region_name ", -  @override
1376 , - ,  ," -        + "" actual: "" + type); "," -  public moveregionresponse moveregion(rpccontroller controller', 'moveregionrequest req)"
1377 , -    try { , -  @override , -    } , -  throws serviceexception {
1378 ," -      move(encodedregionname', 'destservername); "," -  public moveregionresponse moveregion(rpccontroller controller', 'moveregionrequest req) ", - , -    final byte [] encodedregionname = req.getregion().getvalue().tobytearray();
1379 , -    } catch (hbaseioexception ioe) { , -  throws serviceexception { , -    try { , -    regionspecifiertype type = req.getregion().gettype();
1380 , -      throw new serviceexception(ioe); , -    final byte [] encodedregionname = req.getregion().getvalue().tobytearray(); ," -      move(encodedregionname', 'destservername); ", -    final byte [] destservername = (req.hasdestservername())?
1381 , -    } , -    regionspecifiertype type = req.getregion().gettype(); , -    } catch (hbaseioexception ioe) { , -      bytes.tobytes(protobufutil.toservername(req.getdestservername()).getservername()):null;
1382 , -    return mrr; , -    final byte [] destservername = (req.hasdestservername())? , -      throw new serviceexception(ioe); , -    moveregionresponse mrr = moveregionresponse.newbuilder().build();
1383 , +  public void dispatchmergingregions(final hregioninfo region_a , -      bytes.tobytes(protobufutil.toservername(req.getdestservername()).getservername()):null; , -    } , -
1384 ," +      final hregioninfo region_b', 'final boolean forcible) throws ioexception { ", -    moveregionresponse mrr = moveregionresponse.newbuilder().build(); , -    return mrr; , -    if (type != regionspecifiertype.encoded_region_name) {
1385 , +    checkinitialized(); , - , -  } ," -      log.warn(""moveregion specifier type: expected: "" + regionspecifiertype.encoded_region_name"
1386 , +    this.service.submit(new dispatchmergingregionhandler(this , -    if (type != regionspecifiertype.encoded_region_name) { , - ," -        + "" actual: "" + type);"
1387 ," +        this.catalogjanitorchore', 'region_a', 'region_b', 'forcible)); "," -      log.warn(""moveregion specifier type: expected: "" + regionspecifiertype.encoded_region_name ", void move(final byte[] encodedregionname , -    }
1388 , } ," -        + "" actual: "" + type); ", final byte[] destservername) throws hbaseioexception { , -
1389 ,  , -    } , regionstate regionstate = assignmentmanager.getregionstates(). , -    try {
1390 , void move(final byte[] encodedregionname , - ," @@ -1736', '9 +1008', '8 @@ masterservices', 'server { "," -      move(encodedregionname', 'destservername);"
1391 ," @@ -1736', '9 +1008', '8 @@ masterservices', 'server { ", -    try { ,  , -    } catch (hbaseioexception ioe) {
1392 ,  ," -      move(encodedregionname', 'destservername); ", @override , -      throw new serviceexception(ioe);
1393 , @override , -    } catch (hbaseioexception ioe) { , public void createtable(htabledescriptor htabledescriptor , -    }
1394 , public void createtable(htabledescriptor htabledescriptor , -      throw new serviceexception(ioe); , -    byte [][] splitkeys) , -    return mrr;
1395 , -    byte [][] splitkeys) , -    } , -  throws ioexception { , -  }
1396 , -  throws ioexception { , -    return mrr; , -    if (!ismasterrunning()) { , -
1397 , -    if (!ismasterrunning()) { , -  } , +      byte [][] splitkeys) throws ioexception { , void move(final byte[] encodedregionname
1398 , +      byte [][] splitkeys) throws ioexception { , - , +    if (isstopped()) { , final byte[] destservername) throws hbaseioexception {
1399 , +    if (isstopped()) { , void move(final byte[] encodedregionname , throw new masternotrunningexception(); , regionstate regionstate = assignmentmanager.getregionstates().
1400 , throw new masternotrunningexception(); , final byte[] destservername) throws hbaseioexception { , } ," @@ -1736', '9 +1008', '8 @@ masterservices', 'server {"
1401 , } , regionstate regionstate = assignmentmanager.getregionstates(). ,  , 
1402 ,  ," @@ -1736', '9 +1008', '8 @@ masterservices', 'server { "," @@ -1752', '7 +1023', '7 @@ masterservices', 'server { ", @override
1403 ," @@ -1752', '7 +1023', '7 @@ masterservices', 'server { ",  ," cphost.precreatetable(htabledescriptor', 'newregions); ", public void createtable(htabledescriptor htabledescriptor
1404 ," cphost.precreatetable(htabledescriptor', 'newregions); ", @override , } , -    byte [][] splitkeys)
1405 , } , public void createtable(htabledescriptor htabledescriptor ," log.info(getclientidauditprefix() + "" create "" + htabledescriptor); ", -  throws ioexception {
1406 ," log.info(getclientidauditprefix() + "" create "" + htabledescriptor); ", -    byte [][] splitkeys) , -    this.executorservice.submit(new createtablehandler(this , -    if (!ismasterrunning()) {
1407 , -    this.executorservice.submit(new createtablehandler(this , -  throws ioexception { , +    this.service.submit(new createtablehandler(this , +      byte [][] splitkeys) throws ioexception {
1408 , +    this.service.submit(new createtablehandler(this , -    if (!ismasterrunning()) { ," this.filesystemmanager', 'htabledescriptor', 'conf ", +    if (isstopped()) {
1409 ," this.filesystemmanager', 'htabledescriptor', 'conf ", +      byte [][] splitkeys) throws ioexception { ," newregions', 'this).prepare()); ", throw new masternotrunningexception();
1410 ," newregions', 'this).prepare()); ", +    if (isstopped()) { , if (cphost != null) { , }
1411 , if (cphost != null) { , throw new masternotrunningexception(); ," @@ -1852', '6 +1123', '53 @@ masterservices', 'server { ", 
1412 ," @@ -1852', '6 +1123', '53 @@ masterservices', 'server { ", } , } ," @@ -1752', '7 +1023', '7 @@ masterservices', 'server {"
1413 , } ,  , } ," cphost.precreatetable(htabledescriptor', 'newregions);"
1414 , } ," @@ -1752', '7 +1023', '7 @@ masterservices', 'server { ",  , }
1415 ,  ," cphost.precreatetable(htabledescriptor', 'newregions); ", +  private void startactivemastermanager() { ," log.info(getclientidauditprefix() + "" create "" + htabledescriptor);"
1416 , +  private void startactivemastermanager() { , } ," +    activemastermanager = new activemastermanager(zookeeper', 'servername', 'this); ", -    this.executorservice.submit(new createtablehandler(this
1417 ," +    activemastermanager = new activemastermanager(zookeeper', 'servername', 'this); "," log.info(getclientidauditprefix() + "" create "" + htabledescriptor); "," +    // start a thread to try to become the active master', ""so we won't block here""] ", +    this.service.submit(new createtablehandler(this
1418 ," +    // start a thread to try to become the active master', ""so we won't block here""] ", -    this.executorservice.submit(new createtablehandler(this , +    threads.setdaemonthreadrunning(new thread(new runnable() { ," this.filesystemmanager', 'htabledescriptor', 'conf"
1419 , +    threads.setdaemonthreadrunning(new thread(new runnable() { , +    this.service.submit(new createtablehandler(this , +      public void run() { ," newregions', 'this).prepare());"
1420 , +      public void run() { ," this.filesystemmanager', 'htabledescriptor', 'conf ", +        int timeout = conf.getint(hconstants.zk_session_timeout , if (cphost != null) {
1421 , +        int timeout = conf.getint(hconstants.zk_session_timeout ," newregions', 'this).prepare()); ", +          hconstants.default_zk_session_timeout); ," @@ -1852', '6 +1123', '53 @@ masterservices', 'server {"
1422 , +          hconstants.default_zk_session_timeout); , if (cphost != null) { ," [""+        // if we're a backup master"", 'stall until a primary to writes his address ", }
1423 ," [""+        // if we're a backup master"", 'stall until a primary to writes his address "," @@ -1852', '6 +1123', '53 @@ masterservices', 'server { ", +        if (conf.getboolean(hconstants.master_type_backup , }
1424 , +        if (conf.getboolean(hconstants.master_type_backup , } , +            hconstants.default_master_type_backup)) { , 
1425 , +            hconstants.default_master_type_backup)) { , } ," +          log.debug(""hmaster started in backup mode. "" ", +  private void startactivemastermanager() {
1426 ," +          log.debug(""hmaster started in backup mode. "" ",  ," +            + ""stalling until master znode is written.""); "," +    activemastermanager = new activemastermanager(zookeeper', 'servername', 'this);"
1427 ," +            + ""stalling until master znode is written.""); ", +  private void startactivemastermanager() { , +          // this will only be a minute or so while the cluster starts up ," +    // start a thread to try to become the active master', ""so we won't block here""]"
1428 , +          // this will only be a minute or so while the cluster starts up ," +    activemastermanager = new activemastermanager(zookeeper', 'servername', 'this); "," [""+          // so don't worry about setting watches on the parent znode""] ", +    threads.setdaemonthreadrunning(new thread(new runnable() {
1429 ," [""+          // so don't worry about setting watches on the parent znode""] "," +    // start a thread to try to become the active master', ""so we won't block here""] ", +          while (!activemastermanager.hasactivemaster()) { , +      public void run() {
1430 , +          while (!activemastermanager.hasactivemaster()) { , +    threads.setdaemonthreadrunning(new thread(new runnable() { ," +            log.debug(""waiting for master address znode to be written "" ", +        int timeout = conf.getint(hconstants.zk_session_timeout
1431 ," +            log.debug(""waiting for master address znode to be written "" ", +      public void run() { ," +              + ""(also watching cluster state node)""); ", +          hconstants.default_zk_session_timeout);
1432 ," +              + ""(also watching cluster state node)""); ", +        int timeout = conf.getint(hconstants.zk_session_timeout , +            threads.sleep(timeout); ," [""+        // if we're a backup master"", 'stall until a primary to writes his address"
1433 , +            threads.sleep(timeout); , +          hconstants.default_zk_session_timeout); , +          } , +        if (conf.getboolean(hconstants.master_type_backup
1434 , +          } ," [""+        // if we're a backup master"", 'stall until a primary to writes his address ", +        } , +            hconstants.default_master_type_backup)) {
1435 , +        } , +        if (conf.getboolean(hconstants.master_type_backup ," +        monitoredtask status = taskmonitor.get().createstatus(""master startup""); "," +          log.debug(""hmaster started in backup mode. """
1436 ," +        monitoredtask status = taskmonitor.get().createstatus(""master startup""); ", +            hconstants.default_master_type_backup)) { ," +        status.setdescription(""master startup""); "," +            + ""stalling until master znode is written."");"
1437 ," +        status.setdescription(""master startup""); "," +          log.debug(""hmaster started in backup mode. "" ", +        try { , +          // this will only be a minute or so while the cluster starts up
1438 , +        try { ," +            + ""stalling until master znode is written.""); "," +          if (activemastermanager.blockuntilbecomingactivemaster(timeout', 'status)) { "," [""+          // so don't worry about setting watches on the parent znode""]"
1439 ," +          if (activemastermanager.blockuntilbecomingactivemaster(timeout', 'status)) { ", +          // this will only be a minute or so while the cluster starts up , +            finishactivemasterinitialization(status); , +          while (!activemastermanager.hasactivemaster()) {
1440 , +            finishactivemasterinitialization(status); ," [""+          // so don't worry about setting watches on the parent znode""] ", +          } ," +            log.debug(""waiting for master address znode to be written """
1441 , +          } , +          while (!activemastermanager.hasactivemaster()) { , +        } catch (throwable t) { ," +              + ""(also watching cluster state node)"");"
1442 , +        } catch (throwable t) { ," +            log.debug(""waiting for master address znode to be written "" "," +          status.setstatus(""failed to become active: "" + t.getmessage()); ", +            threads.sleep(timeout);
1443 ," +          status.setstatus(""failed to become active: "" + t.getmessage()); "," +              + ""(also watching cluster state node)""); "," +          log.fatal(""failed to become active master""', 't); ", +          }
1444 ," +          log.fatal(""failed to become active master""', 't); ", +            threads.sleep(timeout); , +          // hbase-5680: likely hadoop23 vs hadoop 20.x/1.x incompatibility , +        }
1445 , +          // hbase-5680: likely hadoop23 vs hadoop 20.x/1.x incompatibility , +          } , +          if (t instanceof noclassdeffounderror && ," +        monitoredtask status = taskmonitor.get().createstatus(""master startup"");"
1446 , +          if (t instanceof noclassdeffounderror && , +        } ," +              t.getmessage().contains(""org/apache/hadoop/hdfs/protocol/fsconstants$safemodeaction"")) { "," +        status.setdescription(""master startup"");"
1447 ," +              t.getmessage().contains(""org/apache/hadoop/hdfs/protocol/fsconstants$safemodeaction"")) { "," +        monitoredtask status = taskmonitor.get().createstatus(""master startup""); ", +            // improved error message for this special case , +        try {
1448 , +            // improved error message for this special case ," +        status.setdescription(""master startup""); "," +            abort(""hbase is having a problem with its hadoop jars.  you may need to "" "," +          if (activemastermanager.blockuntilbecomingactivemaster(timeout', 'status)) {"
1449 ," +            abort(""hbase is having a problem with its hadoop jars.  you may need to "" ", +        try { ," +              + ""recompile hbase against hadoop version "" ", +            finishactivemasterinitialization(status);
1450 ," +              + ""recompile hbase against hadoop version "" "," +          if (activemastermanager.blockuntilbecomingactivemaster(timeout', 'status)) { ", +              +  org.apache.hadoop.util.versioninfo.getversion() , +          }
1451 , +              +  org.apache.hadoop.util.versioninfo.getversion() , +            finishactivemasterinitialization(status); ," +              + "" or change your hadoop jars to start properly""', 't); ", +        } catch (throwable t) {
1452 ," +              + "" or change your hadoop jars to start properly""', 't); ", +          } , +          } else { ," +          status.setstatus(""failed to become active: "" + t.getmessage());"
1453 , +          } else { , +        } catch (throwable t) { ," +            abort(""unhandled exception. starting shutdown.""', 't); "," +          log.fatal(""failed to become active master""', 't);"
1454 ," +            abort(""unhandled exception. starting shutdown.""', 't); "," +          status.setstatus(""failed to become active: "" + t.getmessage()); ", +          } , +          // hbase-5680: likely hadoop23 vs hadoop 20.x/1.x incompatibility
1455 , +          } ," +          log.fatal(""failed to become active master""', 't); ", +        } finally { , +          if (t instanceof noclassdeffounderror &&
1456 , +        } finally { , +          // hbase-5680: likely hadoop23 vs hadoop 20.x/1.x incompatibility , +          status.cleanup(); ," +              t.getmessage().contains(""org/apache/hadoop/hdfs/protocol/fsconstants$safemodeaction"")) {"
1457 , +          status.cleanup(); , +          if (t instanceof noclassdeffounderror && , +        } , +            // improved error message for this special case
1458 , +        } ," +              t.getmessage().contains(""org/apache/hadoop/hdfs/protocol/fsconstants$safemodeaction"")) { ", +      } ," +            abort(""hbase is having a problem with its hadoop jars.  you may need to """
1459 , +      } , +            // improved error message for this special case ," +    }', '""activemastermanager"")); "," +              + ""recompile hbase against hadoop version """
1460 ," +    }', '""activemastermanager"")); "," +            abort(""hbase is having a problem with its hadoop jars.  you may need to "" ", +  } , +              +  org.apache.hadoop.util.versioninfo.getversion()
1461 , +  } ," +              + ""recompile hbase against hadoop version "" ", + ," +              + "" or change your hadoop jars to start properly""', 't);"
1462 , + , +              +  org.apache.hadoop.util.versioninfo.getversion() , private void checkcompression(final htabledescriptor htd) , +          } else {
1463 , private void checkcompression(final htabledescriptor htd) ," +              + "" or change your hadoop jars to start properly""', 't); ", throws ioexception { ," +            abort(""unhandled exception. starting shutdown.""', 't);"
1464 , throws ioexception { , +          } else { , if (!this.mastercheckcompression) return; , +          }
1465 , if (!this.mastercheckcompression) return; ," +            abort(""unhandled exception. starting shutdown.""', 't); "," @@ -1867', '19 +1185', '6 @@ masterservices', 'server { ", +        } finally {
1466 ," @@ -1867', '19 +1185', '6 @@ masterservices', 'server { ", +          } , compressiontest.testcompression(hcd.getcompactioncompression()); , +          status.cleanup();
1467 , compressiontest.testcompression(hcd.getcompactioncompression()); , +        } finally { , } , +        }
1468 , } , +          status.cleanup(); ,  , +      }
1469 ,  , +        } , -  @override ," +    }', '""activemastermanager""));"
1470 , -  @override , +      } ," -  public createtableresponse createtable(rpccontroller controller', 'createtablerequest req) ", +  }
1471 ," -  public createtableresponse createtable(rpccontroller controller', 'createtablerequest req) "," +    }', '""activemastermanager"")); ", -  throws serviceexception { , +
1472 , -  throws serviceexception { , +  } , -    htabledescriptor htabledescriptor = htabledescriptor.convert(req.gettableschema()); , private void checkcompression(final htabledescriptor htd)
1473 , -    htabledescriptor htabledescriptor = htabledescriptor.convert(req.gettableschema()); , + , -    byte [][] splitkeys = protobufutil.getsplitkeysarray(req); , throws ioexception {
1474 , -    byte [][] splitkeys = protobufutil.getsplitkeysarray(req); , private void checkcompression(final htabledescriptor htd) , -    try { , if (!this.mastercheckcompression) return;
1475 , -    try { , throws ioexception { ," -      createtable(htabledescriptor', 'splitkeys); "," @@ -1867', '19 +1185', '6 @@ masterservices', 'server {"
1476 ," -      createtable(htabledescriptor', 'splitkeys); ", if (!this.mastercheckcompression) return; , -    } catch (ioexception ioe) { , compressiontest.testcompression(hcd.getcompactioncompression());
1477 , -    } catch (ioexception ioe) { ," @@ -1867', '19 +1185', '6 @@ masterservices', 'server { ", -      throw new serviceexception(ioe); , }
1478 , -      throw new serviceexception(ioe); , compressiontest.testcompression(hcd.getcompactioncompression()); , -    } , 
1479 , -    } , } , -    return createtableresponse.newbuilder().build(); , -  @override
1480 , -    return createtableresponse.newbuilder().build(); ,  , -  } ," -  public createtableresponse createtable(rpccontroller controller', 'createtablerequest req)"
1481 , -  } , -  @override , - , -  throws serviceexception {
1482 , - ," -  public createtableresponse createtable(rpccontroller controller', 'createtablerequest req) ", private hregioninfo[] gethregioninfos(htabledescriptor htabledescriptor , -    htabledescriptor htabledescriptor = htabledescriptor.convert(req.gettableschema());
1483 , private hregioninfo[] gethregioninfos(htabledescriptor htabledescriptor , -  throws serviceexception { , byte[][] splitkeys) { , -    byte [][] splitkeys = protobufutil.getsplitkeysarray(req);
1484 , byte[][] splitkeys) { , -    htabledescriptor htabledescriptor = htabledescriptor.convert(req.gettableschema()); , hregioninfo[] hregioninfos = null; , -    try {
1485 , hregioninfo[] hregioninfos = null; , -    byte [][] splitkeys = protobufutil.getsplitkeysarray(req); ," @@ -1912', '51 +1217', '12 @@ masterservices', 'server { "," -      createtable(htabledescriptor', 'splitkeys);"
1486 ," @@ -1912', '51 +1217', '12 @@ masterservices', 'server { ", -    try { , cphost.predeletetable(tablename); , -    } catch (ioexception ioe) {
1487 , cphost.predeletetable(tablename); ," -      createtable(htabledescriptor', 'splitkeys); ", } , -      throw new serviceexception(ioe);
1488 , } , -    } catch (ioexception ioe) { ," log.info(getclientidauditprefix() + "" delete "" + tablename); ", -    }
1489 ," log.info(getclientidauditprefix() + "" delete "" + tablename); ", -      throw new serviceexception(ioe); ," -    this.executorservice.submit(new deletetablehandler(tablename', 'this', 'this).prepare()); ", -    return createtableresponse.newbuilder().build();
1490 ," -    this.executorservice.submit(new deletetablehandler(tablename', 'this', 'this).prepare()); ", -    } ," +    this.service.submit(new deletetablehandler(tablename', 'this', 'this).prepare()); ", -  }
1491 ," +    this.service.submit(new deletetablehandler(tablename', 'this', 'this).prepare()); ", -    return createtableresponse.newbuilder().build(); , if (cphost != null) { , -
1492 , if (cphost != null) { , -  } , cphost.postdeletetable(tablename); , private hregioninfo[] gethregioninfos(htabledescriptor htabledescriptor
1493 , cphost.postdeletetable(tablename); , - , } , byte[][] splitkeys) {
1494 , } , private hregioninfo[] gethregioninfos(htabledescriptor htabledescriptor , } , hregioninfo[] hregioninfos = null;
1495 , } , byte[][] splitkeys) { ,  ," @@ -1912', '51 +1217', '12 @@ masterservices', 'server {"
1496 ,  , hregioninfo[] hregioninfos = null; , -  @override , cphost.predeletetable(tablename);
1497 , -  @override ," @@ -1912', '51 +1217', '12 @@ masterservices', 'server { "," -  public deletetableresponse deletetable(rpccontroller controller', 'deletetablerequest request) ", }
1498 ," -  public deletetableresponse deletetable(rpccontroller controller', 'deletetablerequest request) ", cphost.predeletetable(tablename); , -  throws serviceexception { ," log.info(getclientidauditprefix() + "" delete "" + tablename);"
1499 , -  throws serviceexception { , } , -    try { ," -    this.executorservice.submit(new deletetablehandler(tablename', 'this', 'this).prepare());"
1500 , -    try { ," log.info(getclientidauditprefix() + "" delete "" + tablename); ", -      deletetable(protobufutil.totablename(request.gettablename())); ," +    this.service.submit(new deletetablehandler(tablename', 'this', 'this).prepare());"
1501 , -      deletetable(protobufutil.totablename(request.gettablename())); ," -    this.executorservice.submit(new deletetablehandler(tablename', 'this', 'this).prepare()); ", -    } catch (ioexception ioe) { , if (cphost != null) {
1502 , -    } catch (ioexception ioe) { ," +    this.service.submit(new deletetablehandler(tablename', 'this', 'this).prepare()); ", -      throw new serviceexception(ioe); , cphost.postdeletetable(tablename);
1503 , -      throw new serviceexception(ioe); , if (cphost != null) { , -    } , }
1504 , -    } , cphost.postdeletetable(tablename); , -    return deletetableresponse.newbuilder().build(); , }
1505 , -    return deletetableresponse.newbuilder().build(); , } , -  } , 
1506 , -  } , } , - , -  @override
1507 , - ,  , -  /** ," -  public deletetableresponse deletetable(rpccontroller controller', 'deletetablerequest request)"
1508 , -  /** , -  @override , -   * get the number of regions of the table that have been updated by the alter. , -  throws serviceexception {
1509 , -   * get the number of regions of the table that have been updated by the alter. ," -  public deletetableresponse deletetable(rpccontroller controller', 'deletetablerequest request) ", -   * , -    try {
1510 , -   * , -  throws serviceexception { , -   * @return pair indicating the number of regions updated pair.getfirst is the , -      deletetable(protobufutil.totablename(request.gettablename()));
1511 , -   * @return pair indicating the number of regions updated pair.getfirst is the , -    try { , -   *         regions that are yet to be updated pair.getsecond is the total number , -    } catch (ioexception ioe) {
1512 , -   *         regions that are yet to be updated pair.getsecond is the total number , -      deletetable(protobufutil.totablename(request.gettablename())); , -   *         of regions of the table , -      throw new serviceexception(ioe);
1513 , -   *         of regions of the table , -    } catch (ioexception ioe) { , -   * @throws ioexception , -    }
1514 , -   * @throws ioexception , -      throw new serviceexception(ioe); , -   */ , -    return deletetableresponse.newbuilder().build();
1515 , -   */ , -    } , -  @override , -  }
1516 , -  @override , -    return deletetableresponse.newbuilder().build(); , -  public getschemaalterstatusresponse getschemaalterstatus( , -
1517 , -  public getschemaalterstatusresponse getschemaalterstatus( , -  } ," -      rpccontroller controller', 'getschemaalterstatusrequest req) throws serviceexception { ", -  /**
1518 ," -      rpccontroller controller', 'getschemaalterstatusrequest req) throws serviceexception { ", - ," -    // todo: currently', 'we query using the table name on the client side. this ", -   * get the number of regions of the table that have been updated by the alter.
1519 ," -    // todo: currently', 'we query using the table name on the client side. this ", -  /** , -    // may overlap with other table operations or the table operation may , -   *
1520 , -    // may overlap with other table operations or the table operation may , -   * get the number of regions of the table that have been updated by the alter. , -    // have completed before querying this api. we need to refactor to a , -   * @return pair indicating the number of regions updated pair.getfirst is the
1521 , -    // have completed before querying this api. we need to refactor to a , -   * , -    // transaction system in the future to avoid these ambiguities. , -   *         regions that are yet to be updated pair.getsecond is the total number
1522 , -    // transaction system in the future to avoid these ambiguities. , -   * @return pair indicating the number of regions updated pair.getfirst is the , -    tablename tablename = protobufutil.totablename(req.gettablename()); , -   *         of regions of the table
1523 , -    tablename tablename = protobufutil.totablename(req.gettablename()); , -   *         regions that are yet to be updated pair.getsecond is the total number , - , -   * @throws ioexception
1524 , - , -   *         of regions of the table , -    try { , -   */
1525 , -    try { , -   * @throws ioexception ," -      pair<integer', 'integer> pair = this.assignmentmanager.getreopenstatus(tablename); ", -  @override
1526 ," -      pair<integer', 'integer> pair = this.assignmentmanager.getreopenstatus(tablename); ", -   */ , -      getschemaalterstatusresponse.builder ret = getschemaalterstatusresponse.newbuilder(); , -  public getschemaalterstatusresponse getschemaalterstatus(
1527 , -      getschemaalterstatusresponse.builder ret = getschemaalterstatusresponse.newbuilder(); , -  @override , -      ret.setyettoupdateregions(pair.getfirst()); ," -      rpccontroller controller', 'getschemaalterstatusrequest req) throws serviceexception {"
1528 , -      ret.setyettoupdateregions(pair.getfirst()); , -  public getschemaalterstatusresponse getschemaalterstatus( , -      ret.settotalregions(pair.getsecond()); ," -    // todo: currently', 'we query using the table name on the client side. this"
1529 , -      ret.settotalregions(pair.getsecond()); ," -      rpccontroller controller', 'getschemaalterstatusrequest req) throws serviceexception { ", -      return ret.build(); , -    // may overlap with other table operations or the table operation may
1530 , -      return ret.build(); ," -    // todo: currently', 'we query using the table name on the client side. this ", -    } catch (ioexception ioe) { , -    // have completed before querying this api. we need to refactor to a
1531 , -    } catch (ioexception ioe) { , -    // may overlap with other table operations or the table operation may , -      throw new serviceexception(ioe); , -    // transaction system in the future to avoid these ambiguities.
1532 , -      throw new serviceexception(ioe); , -    // have completed before querying this api. we need to refactor to a , -    } , -    tablename tablename = protobufutil.totablename(req.gettablename());
1533 , -    } , -    // transaction system in the future to avoid these ambiguities. , -  } , -
1534 , -  } , -    tablename tablename = protobufutil.totablename(req.gettablename()); , - , -    try {
1535 , - , - , @override ," -      pair<integer', 'integer> pair = this.assignmentmanager.getreopenstatus(tablename);"
1536 , @override , -    try { ," public void addcolumn(final tablename tablename', 'final hcolumndescriptor column) ", -      getschemaalterstatusresponse.builder ret = getschemaalterstatusresponse.newbuilder();
1537 ," public void addcolumn(final tablename tablename', 'final hcolumndescriptor column) "," -      pair<integer', 'integer> pair = this.assignmentmanager.getreopenstatus(tablename); ", throws ioexception { , -      ret.setyettoupdateregions(pair.getfirst());
1538 , throws ioexception { , -      getschemaalterstatusresponse.builder ret = getschemaalterstatusresponse.newbuilder(); ," @@ -1973', '18 +1239', '6 @@ masterservices', 'server { ", -      ret.settotalregions(pair.getsecond());
1539 ," @@ -1973', '18 +1239', '6 @@ masterservices', 'server { ", -      ret.setyettoupdateregions(pair.getfirst()); , } , -      return ret.build();
1540 , } , -      ret.settotalregions(pair.getsecond()); , } , -    } catch (ioexception ioe) {
1541 , } , -      return ret.build(); ,  , -      throw new serviceexception(ioe);
1542 ,  , -    } catch (ioexception ioe) { , -  @override , -    }
1543 , -  @override , -      throw new serviceexception(ioe); ," -  public addcolumnresponse addcolumn(rpccontroller controller', 'addcolumnrequest req) ", -  }
1544 ," -  public addcolumnresponse addcolumn(rpccontroller controller', 'addcolumnrequest req) ", -    } , -  throws serviceexception { , -
1545 , -  throws serviceexception { , -  } , -    try { , @override
1546 , -    try { , - , -      addcolumn(protobufutil.totablename(req.gettablename()) ," public void addcolumn(final tablename tablename', 'final hcolumndescriptor column)"
1547 , -      addcolumn(protobufutil.totablename(req.gettablename()) , @override , -        hcolumndescriptor.convert(req.getcolumnfamilies())); , throws ioexception {
1548 , -        hcolumndescriptor.convert(req.getcolumnfamilies())); ," public void addcolumn(final tablename tablename', 'final hcolumndescriptor column) ", -    } catch (ioexception ioe) { ," @@ -1973', '18 +1239', '6 @@ masterservices', 'server {"
1549 , -    } catch (ioexception ioe) { , throws ioexception { , -      throw new serviceexception(ioe); , }
1550 , -      throw new serviceexception(ioe); ," @@ -1973', '18 +1239', '6 @@ masterservices', 'server { ", -    } , }
1551 , -    } , } , -    return addcolumnresponse.newbuilder().build(); , 
1552 , -    return addcolumnresponse.newbuilder().build(); , } , -  } , -  @override
1553 , -  } ,  , - ," -  public addcolumnresponse addcolumn(rpccontroller controller', 'addcolumnrequest req)"
1554 , - , -  @override , @override , -  throws serviceexception {
1555 , @override ," -  public addcolumnresponse addcolumn(rpccontroller controller', 'addcolumnrequest req) "," public void modifycolumn(tablename tablename', 'hcolumndescriptor descriptor) ", -    try {
1556 ," public void modifycolumn(tablename tablename', 'hcolumndescriptor descriptor) ", -  throws serviceexception { , throws ioexception { , -      addcolumn(protobufutil.totablename(req.gettablename())
1557 , throws ioexception { , -    try { ," @@ -2003', '18 +1257', '6 @@ masterservices', 'server { ", -        hcolumndescriptor.convert(req.getcolumnfamilies()));
1558 ," @@ -2003', '18 +1257', '6 @@ masterservices', 'server { ", -      addcolumn(protobufutil.totablename(req.gettablename()) , } , -    } catch (ioexception ioe) {
1559 , } , -        hcolumndescriptor.convert(req.getcolumnfamilies())); , } , -      throw new serviceexception(ioe);
1560 , } , -    } catch (ioexception ioe) { ,  , -    }
1561 ,  , -      throw new serviceexception(ioe); , -  @override , -    return addcolumnresponse.newbuilder().build();
1562 , -  @override , -    } ," -  public modifycolumnresponse modifycolumn(rpccontroller controller', 'modifycolumnrequest req) ", -  }
1563 ," -  public modifycolumnresponse modifycolumn(rpccontroller controller', 'modifycolumnrequest req) ", -    return addcolumnresponse.newbuilder().build(); , -  throws serviceexception { , -
1564 , -  throws serviceexception { , -  } , -    try { , @override
1565 , -    try { , - , -      modifycolumn(protobufutil.totablename(req.gettablename()) ," public void modifycolumn(tablename tablename', 'hcolumndescriptor descriptor)"
1566 , -      modifycolumn(protobufutil.totablename(req.gettablename()) , @override , -        hcolumndescriptor.convert(req.getcolumnfamilies())); , throws ioexception {
1567 , -        hcolumndescriptor.convert(req.getcolumnfamilies())); ," public void modifycolumn(tablename tablename', 'hcolumndescriptor descriptor) ", -    } catch (ioexception ioe) { ," @@ -2003', '18 +1257', '6 @@ masterservices', 'server {"
1568 , -    } catch (ioexception ioe) { , throws ioexception { , -      throw new serviceexception(ioe); , }
1569 , -      throw new serviceexception(ioe); ," @@ -2003', '18 +1257', '6 @@ masterservices', 'server { ", -    } , }
1570 , -    } , } , -    return modifycolumnresponse.newbuilder().build(); , 
1571 , -    return modifycolumnresponse.newbuilder().build(); , } , -  } , -  @override
1572 , -  } ,  , - ," -  public modifycolumnresponse modifycolumn(rpccontroller controller', 'modifycolumnrequest req)"
1573 , - , -  @override , @override , -  throws serviceexception {
1574 , @override ," -  public modifycolumnresponse modifycolumn(rpccontroller controller', 'modifycolumnrequest req) "," public void deletecolumn(final tablename tablename', 'final byte[] columnname) ", -    try {
1575 ," public void deletecolumn(final tablename tablename', 'final byte[] columnname) ", -  throws serviceexception { , throws ioexception { , -      modifycolumn(protobufutil.totablename(req.gettablename())
1576 , throws ioexception { , -    try { ," @@ -2031', '18 +1273', '6 @@ masterservices', 'server { ", -        hcolumndescriptor.convert(req.getcolumnfamilies()));
1577 ," @@ -2031', '18 +1273', '6 @@ masterservices', 'server { ", -      modifycolumn(protobufutil.totablename(req.gettablename()) , } , -    } catch (ioexception ioe) {
1578 , } , -        hcolumndescriptor.convert(req.getcolumnfamilies())); , } , -      throw new serviceexception(ioe);
1579 , } , -    } catch (ioexception ioe) { ,  , -    }
1580 ,  , -      throw new serviceexception(ioe); , -  @override , -    return modifycolumnresponse.newbuilder().build();
1581 , -  @override , -    } ," -  public deletecolumnresponse deletecolumn(rpccontroller controller', 'deletecolumnrequest req) ", -  }
1582 ," -  public deletecolumnresponse deletecolumn(rpccontroller controller', 'deletecolumnrequest req) ", -    return modifycolumnresponse.newbuilder().build(); , -  throws serviceexception { , -
1583 , -  throws serviceexception { , -  } , -    try { , @override
1584 , -    try { , - , -      deletecolumn(protobufutil.totablename(req.gettablename()) ," public void deletecolumn(final tablename tablename', 'final byte[] columnname)"
1585 , -      deletecolumn(protobufutil.totablename(req.gettablename()) , @override , -          req.getcolumnname().tobytearray()); , throws ioexception {
1586 , -          req.getcolumnname().tobytearray()); ," public void deletecolumn(final tablename tablename', 'final byte[] columnname) ", -    } catch (ioexception ioe) { ," @@ -2031', '18 +1273', '6 @@ masterservices', 'server {"
1587 , -    } catch (ioexception ioe) { , throws ioexception { , -      throw new serviceexception(ioe); , }
1588 , -      throw new serviceexception(ioe); ," @@ -2031', '18 +1273', '6 @@ masterservices', 'server { ", -    } , }
1589 , -    } , } , -    return deletecolumnresponse.newbuilder().build(); , 
1590 , -    return deletecolumnresponse.newbuilder().build(); , } , -  } , -  @override
1591 , -  } ,  , - ," -  public deletecolumnresponse deletecolumn(rpccontroller controller', 'deletecolumnrequest req)"
1592 , - , -  @override , @override , -  throws serviceexception {
1593 , @override ," -  public deletecolumnresponse deletecolumn(rpccontroller controller', 'deletecolumnrequest req) ", public void enabletable(final tablename tablename) throws ioexception { , -    try {
1594 , public void enabletable(final tablename tablename) throws ioexception { , -  throws serviceexception { , checkinitialized(); , -      deletecolumn(protobufutil.totablename(req.gettablename())
1595 , checkinitialized(); , -    try { ," @@ -2050', '24 +1280', '13 @@ masterservices', 'server { ", -          req.getcolumnname().tobytearray());
1596 ," @@ -2050', '24 +1280', '13 @@ masterservices', 'server { ", -      deletecolumn(protobufutil.totablename(req.gettablename()) , cphost.preenabletable(tablename); , -    } catch (ioexception ioe) {
1597 , cphost.preenabletable(tablename); , -          req.getcolumnname().tobytearray()); , } , -      throw new serviceexception(ioe);
1598 , } , -    } catch (ioexception ioe) { ," log.info(getclientidauditprefix() + "" enable "" + tablename); ", -    }
1599 ," log.info(getclientidauditprefix() + "" enable "" + tablename); ", -      throw new serviceexception(ioe); ," -    this.executorservice.submit(new enabletablehandler(this', 'tablename ", -    return deletecolumnresponse.newbuilder().build();
1600 ," -    this.executorservice.submit(new enabletablehandler(this', 'tablename ", -    } ," +    this.service.submit(new enabletablehandler(this', 'tablename ", -  }
1601 ," +    this.service.submit(new enabletablehandler(this', 'tablename ", -    return deletecolumnresponse.newbuilder().build(); ," catalogtracker', 'assignmentmanager', 'tablelockmanager', 'false).prepare()); ", -
1602 ," catalogtracker', 'assignmentmanager', 'tablelockmanager', 'false).prepare()); ", -  } , if (cphost != null) { , @override
1603 , if (cphost != null) { , - , cphost.postenabletable(tablename); , public void enabletable(final tablename tablename) throws ioexception {
1604 , cphost.postenabletable(tablename); , @override , } , checkinitialized();
1605 , } , public void enabletable(final tablename tablename) throws ioexception { , } ," @@ -2050', '24 +1280', '13 @@ masterservices', 'server {"
1606 , } , checkinitialized(); ,  , cphost.preenabletable(tablename);
1607 ,  ," @@ -2050', '24 +1280', '13 @@ masterservices', 'server { ", -  @override , }
1608 , -  @override , cphost.preenabletable(tablename); ," -  public enabletableresponse enabletable(rpccontroller controller', 'enabletablerequest request) "," log.info(getclientidauditprefix() + "" enable "" + tablename);"
1609 ," -  public enabletableresponse enabletable(rpccontroller controller', 'enabletablerequest request) ", } , -  throws serviceexception { ," -    this.executorservice.submit(new enabletablehandler(this', 'tablename"
1610 , -  throws serviceexception { ," log.info(getclientidauditprefix() + "" enable "" + tablename); ", -    try { ," +    this.service.submit(new enabletablehandler(this', 'tablename"
1611 , -    try { ," -    this.executorservice.submit(new enabletablehandler(this', 'tablename ", -      enabletable(protobufutil.totablename(request.gettablename())); ," catalogtracker', 'assignmentmanager', 'tablelockmanager', 'false).prepare());"
1612 , -      enabletable(protobufutil.totablename(request.gettablename())); ," +    this.service.submit(new enabletablehandler(this', 'tablename ", -    } catch (ioexception ioe) { , if (cphost != null) {
1613 , -    } catch (ioexception ioe) { ," catalogtracker', 'assignmentmanager', 'tablelockmanager', 'false).prepare()); ", -      throw new serviceexception(ioe); , cphost.postenabletable(tablename);
1614 , -      throw new serviceexception(ioe); , if (cphost != null) { , -    } , }
1615 , -    } , cphost.postenabletable(tablename); , -    return enabletableresponse.newbuilder().build(); , }
1616 , -    return enabletableresponse.newbuilder().build(); , } , -  } , 
1617 , -  } , } , - , -  @override
1618 , - ,  , @override ," -  public enabletableresponse enabletable(rpccontroller controller', 'enabletablerequest request)"
1619 , @override , -  @override , public void disabletable(final tablename tablename) throws ioexception { , -  throws serviceexception {
1620 , public void disabletable(final tablename tablename) throws ioexception { ," -  public enabletableresponse enabletable(rpccontroller controller', 'enabletablerequest request) ", checkinitialized(); , -    try {
1621 , checkinitialized(); , -  throws serviceexception { ," @@ -2075', '24 +1294', '13 @@ masterservices', 'server { ", -      enabletable(protobufutil.totablename(request.gettablename()));
1622 ," @@ -2075', '24 +1294', '13 @@ masterservices', 'server { ", -    try { , cphost.predisabletable(tablename); , -    } catch (ioexception ioe) {
1623 , cphost.predisabletable(tablename); , -      enabletable(protobufutil.totablename(request.gettablename())); , } , -      throw new serviceexception(ioe);
1624 , } , -    } catch (ioexception ioe) { ," log.info(getclientidauditprefix() + "" disable "" + tablename); ", -    }
1625 ," log.info(getclientidauditprefix() + "" disable "" + tablename); ", -      throw new serviceexception(ioe); ," -    this.executorservice.submit(new disabletablehandler(this', 'tablename ", -    return enabletableresponse.newbuilder().build();
1626 ," -    this.executorservice.submit(new disabletablehandler(this', 'tablename ", -    } ," +    this.service.submit(new disabletablehandler(this', 'tablename ", -  }
1627 ," +    this.service.submit(new disabletablehandler(this', 'tablename ", -    return enabletableresponse.newbuilder().build(); ," catalogtracker', 'assignmentmanager', 'tablelockmanager', 'false).prepare()); ", -
1628 ," catalogtracker', 'assignmentmanager', 'tablelockmanager', 'false).prepare()); ", -  } , if (cphost != null) { , @override
1629 , if (cphost != null) { , - , cphost.postdisabletable(tablename); , public void disabletable(final tablename tablename) throws ioexception {
1630 , cphost.postdisabletable(tablename); , @override , } , checkinitialized();
1631 , } , public void disabletable(final tablename tablename) throws ioexception { , } ," @@ -2075', '24 +1294', '13 @@ masterservices', 'server {"
1632 , } , checkinitialized(); ,  , cphost.predisabletable(tablename);
1633 ,  ," @@ -2075', '24 +1294', '13 @@ masterservices', 'server { ", -  @override , }
1634 , -  @override , cphost.predisabletable(tablename); ," -  public disabletableresponse disabletable(rpccontroller controller', 'disabletablerequest request) "," log.info(getclientidauditprefix() + "" disable "" + tablename);"
1635 ," -  public disabletableresponse disabletable(rpccontroller controller', 'disabletablerequest request) ", } , -  throws serviceexception { ," -    this.executorservice.submit(new disabletablehandler(this', 'tablename"
1636 , -  throws serviceexception { ," log.info(getclientidauditprefix() + "" disable "" + tablename); ", -    try { ," +    this.service.submit(new disabletablehandler(this', 'tablename"
1637 , -    try { ," -    this.executorservice.submit(new disabletablehandler(this', 'tablename ", -      disabletable(protobufutil.totablename(request.gettablename())); ," catalogtracker', 'assignmentmanager', 'tablelockmanager', 'false).prepare());"
1638 , -      disabletable(protobufutil.totablename(request.gettablename())); ," +    this.service.submit(new disabletablehandler(this', 'tablename ", -    } catch (ioexception ioe) { , if (cphost != null) {
1639 , -    } catch (ioexception ioe) { ," catalogtracker', 'assignmentmanager', 'tablelockmanager', 'false).prepare()); ", -      throw new serviceexception(ioe); , cphost.postdisabletable(tablename);
1640 , -      throw new serviceexception(ioe); , if (cphost != null) { , -    } , }
1641 , -    } , cphost.postdisabletable(tablename); , -    return disabletableresponse.newbuilder().build(); , }
1642 , -    return disabletableresponse.newbuilder().build(); , } , -  } , 
1643 , -  } , } , - , -  @override
1644 , - ,  , /** ," -  public disabletableresponse disabletable(rpccontroller controller', 'disabletablerequest request)"
1645 , /** , -  @override , * return the region and current deployment for the region containing , -  throws serviceexception {
1646 , * return the region and current deployment for the region containing ," -  public disabletableresponse disabletable(rpccontroller controller', 'disabletablerequest request) "," * the given row. if the region cannot be found', 'returns null. if it ", -    try {
1647 ," * the given row. if the region cannot be found', 'returns null. if it ", -  throws serviceexception { ," @@ -2143', '18 +1351', '6 @@ masterservices', 'server { ", -      disabletable(protobufutil.totablename(request.gettablename()));
1648 ," @@ -2143', '18 +1351', '6 @@ masterservices', 'server { ", -    try { , } , -    } catch (ioexception ioe) {
1649 , } , -      disabletable(protobufutil.totablename(request.gettablename())); , } , -      throw new serviceexception(ioe);
1650 , } , -    } catch (ioexception ioe) { ,  , -    }
1651 ,  , -      throw new serviceexception(ioe); , -  @override , -    return disabletableresponse.newbuilder().build();
1652 , -  @override , -    } ," -  public modifytableresponse modifytable(rpccontroller controller', 'modifytablerequest req) ", -  }
1653 ," -  public modifytableresponse modifytable(rpccontroller controller', 'modifytablerequest req) ", -    return disabletableresponse.newbuilder().build(); , -  throws serviceexception { , -
1654 , -  throws serviceexception { , -  } , -    try { , /**
1655 , -    try { , - , -      modifytable(protobufutil.totablename(req.gettablename()) , * return the region and current deployment for the region containing
1656 , -      modifytable(protobufutil.totablename(req.gettablename()) , /** , -        htabledescriptor.convert(req.gettableschema())); ," * the given row. if the region cannot be found', 'returns null. if it"
1657 , -        htabledescriptor.convert(req.gettableschema())); , * return the region and current deployment for the region containing , -    } catch (ioexception ioe) { ," @@ -2143', '18 +1351', '6 @@ masterservices', 'server {"
1658 , -    } catch (ioexception ioe) { ," * the given row. if the region cannot be found', 'returns null. if it ", -      throw new serviceexception(ioe); , }
1659 , -      throw new serviceexception(ioe); ," @@ -2143', '18 +1351', '6 @@ masterservices', 'server { ", -    } , }
1660 , -    } , } , -    return modifytableresponse.newbuilder().build(); , 
1661 , -    return modifytableresponse.newbuilder().build(); , } , -  } , -  @override
1662 , -  } ,  , - ," -  public modifytableresponse modifytable(rpccontroller controller', 'modifytablerequest req)"
1663 , - , -  @override , @override , -  throws serviceexception {
1664 , @override ," -  public modifytableresponse modifytable(rpccontroller controller', 'modifytablerequest req) ", public void checktablemodifiable(final tablename tablename) , -    try {
1665 , public void checktablemodifiable(final tablename tablename) , -  throws serviceexception { ," throws ioexception', 'tablenotfoundexception', 'tablenotdisabledexception { ", -      modifytable(protobufutil.totablename(req.gettablename())
1666 ," throws ioexception', 'tablenotfoundexception', 'tablenotdisabledexception { ", -    try { ," @@ -2170', '19 +1366', '6 @@ masterservices', 'server { ", -        htabledescriptor.convert(req.gettableschema()));
1667 ," @@ -2170', '19 +1366', '6 @@ masterservices', 'server { ", -      modifytable(protobufutil.totablename(req.gettablename()) , } , -    } catch (ioexception ioe) {
1668 , } , -        htabledescriptor.convert(req.gettableschema())); , } , -      throw new serviceexception(ioe);
1669 , } , -    } catch (ioexception ioe) { ,  , -    }
1670 ,  , -      throw new serviceexception(ioe); , -  @override , -    return modifytableresponse.newbuilder().build();
1671 , -  @override , -    } , -  public getclusterstatusresponse getclusterstatus(rpccontroller controller , -  }
1672 , -  public getclusterstatusresponse getclusterstatus(rpccontroller controller , -    return modifytableresponse.newbuilder().build(); , -      getclusterstatusrequest req) , -
1673 , -      getclusterstatusrequest req) , -  } , -  throws serviceexception { , @override
1674 , -  throws serviceexception { , - , -    getclusterstatusresponse.builder response = getclusterstatusresponse.newbuilder(); , public void checktablemodifiable(final tablename tablename)
1675 , -    getclusterstatusresponse.builder response = getclusterstatusresponse.newbuilder(); , @override , -    try { ," throws ioexception', 'tablenotfoundexception', 'tablenotdisabledexception {"
1676 , -    try { , public void checktablemodifiable(final tablename tablename) , -      response.setclusterstatus(getclusterstatus().convert()); ," @@ -2170', '19 +1366', '6 @@ masterservices', 'server {"
1677 , -      response.setclusterstatus(getclusterstatus().convert()); ," throws ioexception', 'tablenotfoundexception', 'tablenotdisabledexception { ", -    } catch (interruptedioexception e) { , }
1678 , -    } catch (interruptedioexception e) { ," @@ -2170', '19 +1366', '6 @@ masterservices', 'server { ", -      throw new serviceexception(e); , }
1679 , -      throw new serviceexception(e); , } , -    } , 
1680 , -    } , } , -    return response.build(); , -  @override
1681 , -    return response.build(); ,  , -  } , -  public getclusterstatusresponse getclusterstatus(rpccontroller controller
1682 , -  } , -  @override , - , -      getclusterstatusrequest req)
1683 , - , -  public getclusterstatusresponse getclusterstatus(rpccontroller controller , /** , -  throws serviceexception {
1684 , /** , -      getclusterstatusrequest req) , * @return cluster status , -    getclusterstatusresponse.builder response = getclusterstatusresponse.newbuilder();
1685 , * @return cluster status , -  throws serviceexception { , */ , -    try {
1686 , */ , -    getclusterstatusresponse.builder response = getclusterstatusresponse.newbuilder(); ," @@ -2235', '18 +1418', '7 @@ masterservices', 'server { ", -      response.setclusterstatus(getclusterstatus().convert());
1687 ," @@ -2235', '18 +1418', '7 @@ masterservices', 'server { ", -    try { , this.servername , -    } catch (interruptedioexception e) {
1688 , this.servername , -      response.setclusterstatus(getclusterstatus().convert()); , backupmasters , -      throw new serviceexception(e);
1689 , backupmasters , -    } catch (interruptedioexception e) { , this.assignmentmanager.getregionstates().getregionsintransition() , -    }
1690 , this.assignmentmanager.getregionstates().getregionsintransition() , -      throw new serviceexception(e); ," -      this.getcoprocessors()', 'this.loadbalancertracker.isbalanceron()); ", -    return response.build();
1691 ," -      this.getcoprocessors()', 'this.loadbalancertracker.isbalanceron()); ", -    } , -  } , -  }
1692 , -  } , -    return response.build(); , - , -
1693 , - , -  } , -  public string getclusterid() { , /**
1694 , -  public string getclusterid() { , - , -    if (filesystemmanager == null) { , * @return cluster status
1695 , -    if (filesystemmanager == null) { , /** ," -      return """"; ", */
1696 ," -      return """"; ", * @return cluster status , -    } ," @@ -2235', '18 +1418', '7 @@ masterservices', 'server {"
1697 , -    } , */ , -    clusterid id = filesystemmanager.getclusterid(); , this.servername
1698 , -    clusterid id = filesystemmanager.getclusterid(); ," @@ -2235', '18 +1418', '7 @@ masterservices', 'server { ", -    if (id == null) { , backupmasters
1699 , -    if (id == null) { , this.servername ," -      return """"; ", this.assignmentmanager.getregionstates().getregionsintransition()
1700 ," -      return """"; ", backupmasters , -    } ," -      this.getcoprocessors()', 'this.loadbalancertracker.isbalanceron());"
1701 , -    } , this.assignmentmanager.getregionstates().getregionsintransition() , -    return id.tostring(); , -  }
1702 , -    return id.tostring(); ," -      this.getcoprocessors()', 'this.loadbalancertracker.isbalanceron()); "," +      this.getmastercoprocessors()', 'this.loadbalancertracker.isbalanceron()); ", -
1703 ," +      this.getmastercoprocessors()', 'this.loadbalancertracker.isbalanceron()); ", -  } , } , -  public string getclusterid() {
1704 , } , - ,  , -    if (filesystemmanager == null) {
1705 ,  , -  public string getclusterid() { , /** ," -      return """";"
1706 , /** , -    if (filesystemmanager == null) { ," @@ -2264', '7 +1436', '7 @@ masterservices', 'server { ", -    }
1707 ," @@ -2264', '7 +1436', '7 @@ masterservices', 'server { "," -      return """"; ", * @return timestamp in millis when hmaster was started. , -    clusterid id = filesystemmanager.getclusterid();
1708 , * @return timestamp in millis when hmaster was started. , -    } , */ , -    if (id == null) {
1709 , */ , -    clusterid id = filesystemmanager.getclusterid(); , public long getmasterstarttime() { ," -      return """";"
1710 , public long getmasterstarttime() { , -    if (id == null) { , -    return masterstarttime; , -    }
1711 , -    return masterstarttime; ," -      return """"; ", +    return startcode; , -    return id.tostring();
1712 , +    return startcode; , -    } , } ," +      this.getmastercoprocessors()', 'this.loadbalancertracker.isbalanceron());"
1713 , } , -    return id.tostring(); ,  , }
1714 ,  ," +      this.getmastercoprocessors()', 'this.loadbalancertracker.isbalanceron()); ", /** , 
1715 , /** , } ," @@ -2286', '9 +1458', '8 @@ masterservices', 'server { ", /**
1716 ," @@ -2286', '9 +1458', '8 @@ masterservices', 'server { ",  , /** ," @@ -2264', '7 +1436', '7 @@ masterservices', 'server {"
1717 , /** , /** , * @return array of coprocessor simplenames. , * @return timestamp in millis when hmaster was started.
1718 , * @return array of coprocessor simplenames. ," @@ -2264', '7 +1436', '7 @@ masterservices', 'server { ", */ , */
1719 , */ , * @return timestamp in millis when hmaster was started. , -  public string[] getcoprocessors() { , public long getmasterstarttime() {
1720 , -  public string[] getcoprocessors() { , */ , -    set<string> mastercoprocessors = , -    return masterstarttime;
1721 , -    set<string> mastercoprocessors = , public long getmasterstarttime() { , -        getcoprocessorhost().getcoprocessors(); , +    return startcode;
1722 , -        getcoprocessorhost().getcoprocessors(); , -    return masterstarttime; , +  public string[] getmastercoprocessors() { , }
1723 , +  public string[] getmastercoprocessors() { , +    return startcode; , +    set<string> mastercoprocessors = getmastercoprocessorhost().getcoprocessors(); , 
1724 , +    set<string> mastercoprocessors = getmastercoprocessorhost().getcoprocessors(); , } , return mastercoprocessors.toarray(new string[mastercoprocessors.size()]); , /**
1725 , return mastercoprocessors.toarray(new string[mastercoprocessors.size()]); ,  , } ," @@ -2286', '9 +1458', '8 @@ masterservices', 'server {"
1726 , } , /** ,  , /**
1727 ,  ," @@ -2286', '9 +1458', '8 @@ masterservices', 'server { "," @@ -2299', '110 +1470', '8 @@ masterservices', 'server { ", * @return array of coprocessor simplenames.
1728 ," @@ -2299', '110 +1470', '8 @@ masterservices', 'server { ", /** ," log.fatal(""master server abort: loaded coprocessors are: "" + ", */
1729 ," log.fatal(""master server abort: loaded coprocessors are: "" + ", * @return array of coprocessor simplenames. , getloadedcoprocessors()); , -  public string[] getcoprocessors() {
1730 , getloadedcoprocessors()); , */ , } , -    set<string> mastercoprocessors =
1731 , } , -  public string[] getcoprocessors() { , - , -        getcoprocessorhost().getcoprocessors();
1732 , - , -    set<string> mastercoprocessors = ," -    if (abortnow(msg', 't)) { ", +  public string[] getmastercoprocessors() {
1733 ," -    if (abortnow(msg', 't)) { ", -        getcoprocessorhost().getcoprocessors(); ," if (t != null) log.fatal(msg', 't); ", +    set<string> mastercoprocessors = getmastercoprocessorhost().getcoprocessors();
1734 ," if (t != null) log.fatal(msg', 't); ", +  public string[] getmastercoprocessors() { , -      else log.fatal(msg); , return mastercoprocessors.toarray(new string[mastercoprocessors.size()]);
1735 , -      else log.fatal(msg); , +    set<string> mastercoprocessors = getmastercoprocessorhost().getcoprocessors(); , -      this.abort = true; , }
1736 , -      this.abort = true; , return mastercoprocessors.toarray(new string[mastercoprocessors.size()]); ," -      stop(""aborting""); ", 
1737 ," -      stop(""aborting""); ", } , -    } ," @@ -2299', '110 +1470', '8 @@ masterservices', 'server {"
1738 , -    } ,  , -  } ," log.fatal(""master server abort: loaded coprocessors are: "" +"
1739 , -  } ," @@ -2299', '110 +1470', '8 @@ masterservices', 'server { ", - , getloadedcoprocessors());
1740 , - ," log.fatal(""master server abort: loaded coprocessors are: "" + ", -  /** , }
1741 , -  /** , getloadedcoprocessors()); , -   * we do the following in a different thread.  if it is not completed , -
1742 , -   * we do the following in a different thread.  if it is not completed , } ," -   * in time', 'we will time it out and assume it is not easy to recover. "," -    if (abortnow(msg', 't)) {"
1743 ," -   * in time', 'we will time it out and assume it is not easy to recover. ", - , -   * ," if (t != null) log.fatal(msg', 't);"
1744 , -   * ," -    if (abortnow(msg', 't)) { ", -   * 1. create a new zk session. (since our current one is expired) , -      else log.fatal(msg);
1745 , -   * 1. create a new zk session. (since our current one is expired) ," if (t != null) log.fatal(msg', 't); ", -   * 2. try to become a primary master again , -      this.abort = true;
1746 , -   * 2. try to become a primary master again , -      else log.fatal(msg); , -   * 3. initialize all zk based system trackers. ," -      stop(""aborting"");"
1747 , -   * 3. initialize all zk based system trackers. , -      this.abort = true; ," -   * 4. assign meta. (they are already assigned', 'but we need to update our ", -    }
1748 ," -   * 4. assign meta. (they are already assigned', 'but we need to update our "," -      stop(""aborting""); ", -   * internal memory state to reflect it) , -  }
1749 , -   * internal memory state to reflect it) , -    } , -   * 5. process any rit if any during the process of our recovery. , -
1750 , -   * 5. process any rit if any during the process of our recovery. , -  } , -   * , -  /**
1751 , -   * , - , -   * @return true if we could successfully recover from zk session expiry. , -   * we do the following in a different thread.  if it is not completed
1752 , -   * @return true if we could successfully recover from zk session expiry. , -  /** , -   * @throws interruptedexception ," -   * in time', 'we will time it out and assume it is not easy to recover."
1753 , -   * @throws interruptedexception , -   * we do the following in a different thread.  if it is not completed , -   * @throws ioexception , -   *
1754 , -   * @throws ioexception ," -   * in time', 'we will time it out and assume it is not easy to recover. ", -   * @throws keeperexception , -   * 1. create a new zk session. (since our current one is expired)
1755 , -   * @throws keeperexception , -   * , -   * @throws executionexception , -   * 2. try to become a primary master again
1756 , -   * @throws executionexception , -   * 1. create a new zk session. (since our current one is expired) , -   */ , -   * 3. initialize all zk based system trackers.
1757 , -   */ , -   * 2. try to become a primary master again , -  private boolean tryrecoveringexpiredzksession() throws interruptedexception ," -   * 4. assign meta. (they are already assigned', 'but we need to update our"
1758 , -  private boolean tryrecoveringexpiredzksession() throws interruptedexception , -   * 3. initialize all zk based system trackers. ," -      ioexception', 'keeperexception', 'executionexception { ", -   * internal memory state to reflect it)
1759 ," -      ioexception', 'keeperexception', 'executionexception { "," -   * 4. assign meta. (they are already assigned', 'but we need to update our ", - , -   * 5. process any rit if any during the process of our recovery.
1760 , - , -   * internal memory state to reflect it) , -    this.zookeeper.unregisteralllisteners(); , -   *
1761 , -    this.zookeeper.unregisteralllisteners(); , -   * 5. process any rit if any during the process of our recovery. , -    // add back listeners which were registered before master initialization , -   * @return true if we could successfully recover from zk session expiry.
1762 , -    // add back listeners which were registered before master initialization , -   * ," [""-    // because they won't be added back in below master re-initialization code""] ", -   * @throws interruptedexception
1763 ," [""-    // because they won't be added back in below master re-initialization code""] ", -   * @return true if we could successfully recover from zk session expiry. , -    if (this.registeredzklistenersbeforerecovery != null) { , -   * @throws ioexception
1764 , -    if (this.registeredzklistenersbeforerecovery != null) { , -   * @throws interruptedexception , -      for (zookeeperlistener curlistener : this.registeredzklistenersbeforerecovery) { , -   * @throws keeperexception
1765 , -      for (zookeeperlistener curlistener : this.registeredzklistenersbeforerecovery) { , -   * @throws ioexception , -        this.zookeeper.registerlistener(curlistener); , -   * @throws executionexception
1766 , -        this.zookeeper.registerlistener(curlistener); , -   * @throws keeperexception , -      } , -   */
1767 , -      } , -   * @throws executionexception , -    } , -  private boolean tryrecoveringexpiredzksession() throws interruptedexception
1768 , -    } , -   */ , - ," -      ioexception', 'keeperexception', 'executionexception {"
1769 , - , -  private boolean tryrecoveringexpiredzksession() throws interruptedexception , -    this.zookeeper.reconnectafterexpiration(); , -
1770 , -    this.zookeeper.reconnectafterexpiration(); ," -      ioexception', 'keeperexception', 'executionexception { ", - , -    this.zookeeper.unregisteralllisteners();
1771 , - , - , -    callable<boolean> callable = new callable<boolean> () { , -    // add back listeners which were registered before master initialization
1772 , -    callable<boolean> callable = new callable<boolean> () { , -    this.zookeeper.unregisteralllisteners(); , -      @override ," [""-    // because they won't be added back in below master re-initialization code""]"
1773 , -      @override , -    // add back listeners which were registered before master initialization , -      public boolean call() throws interruptedexception , -    if (this.registeredzklistenersbeforerecovery != null) {
1774 , -      public boolean call() throws interruptedexception ," [""-    // because they won't be added back in below master re-initialization code""] "," -          ioexception', 'keeperexception { ", -      for (zookeeperlistener curlistener : this.registeredzklistenersbeforerecovery) {
1775 ," -          ioexception', 'keeperexception { ", -    if (this.registeredzklistenersbeforerecovery != null) { , -        monitoredtask status = , -        this.zookeeper.registerlistener(curlistener);
1776 , -        monitoredtask status = , -      for (zookeeperlistener curlistener : this.registeredzklistenersbeforerecovery) { ," -          taskmonitor.get().createstatus(""recovering expired zk session""); ", -      }
1777 ," -          taskmonitor.get().createstatus(""recovering expired zk session""); ", -        this.zookeeper.registerlistener(curlistener); , -        try { , -    }
1778 , -        try { , -      } , -          if (!becomeactivemaster(status)) { , -
1779 , -          if (!becomeactivemaster(status)) { , -    } , -            return boolean.false; , -    this.zookeeper.reconnectafterexpiration();
1780 , -            return boolean.false; , - , -          } , -
1781 , -          } , -    this.zookeeper.reconnectafterexpiration(); , -          servershutdownhandlerenabled = false; , -    callable<boolean> callable = new callable<boolean> () {
1782 , -          servershutdownhandlerenabled = false; , - , -          initialized = false; , -      @override
1783 , -          initialized = false; , -    callable<boolean> callable = new callable<boolean> () { ," -          finishinitialization(status', 'true); ", -      public boolean call() throws interruptedexception
1784 ," -          finishinitialization(status', 'true); ", -      @override , -          return !stopped; ," -          ioexception', 'keeperexception {"
1785 , -          return !stopped; , -      public boolean call() throws interruptedexception , -        } finally { , -        monitoredtask status =
1786 , -        } finally { ," -          ioexception', 'keeperexception { ", -          status.cleanup(); ," -          taskmonitor.get().createstatus(""recovering expired zk session"");"
1787 , -          status.cleanup(); , -        monitoredtask status = , -        } , -        try {
1788 , -        } ," -          taskmonitor.get().createstatus(""recovering expired zk session""); ", -      } , -          if (!becomeactivemaster(status)) {
1789 , -      } , -        try { , -    }; , -            return boolean.false;
1790 , -    }; , -          if (!becomeactivemaster(status)) { , - , -          }
1791 , - , -            return boolean.false; , -    long timeout = , -          servershutdownhandlerenabled = false;
1792 , -    long timeout = , -          } ," -      conf.getlong(""hbase.master.zksession.recover.timeout""', '300000); ", -          initialized = false;
1793 ," -      conf.getlong(""hbase.master.zksession.recover.timeout""', '300000); ", -          servershutdownhandlerenabled = false; , -    java.util.concurrent.executorservice executor = ," -          finishinitialization(status', 'true);"
1794 , -    java.util.concurrent.executorservice executor = , -          initialized = false; , -      executors.newsinglethreadexecutor(); , -          return !stopped;
1795 , -      executors.newsinglethreadexecutor(); ," -          finishinitialization(status', 'true); ", -    future<boolean> result = executor.submit(callable); , -        } finally {
1796 , -    future<boolean> result = executor.submit(callable); , -          return !stopped; , -    executor.shutdown(); , -          status.cleanup();
1797 , -    executor.shutdown(); , -        } finally { ," -    if (executor.awaittermination(timeout', 'timeunit.milliseconds) ", -        }
1798 ," -    if (executor.awaittermination(timeout', 'timeunit.milliseconds) ", -          status.cleanup(); , -        && result.isdone()) { , -      }
1799 , -        && result.isdone()) { , -        } , -      boolean recovered = result.get(); , -    };
1800 , -      boolean recovered = result.get(); , -      } , -      if (recovered != null) { , -
1801 , -      if (recovered != null) { , -    }; , -        return recovered.booleanvalue(); , -    long timeout =
1802 , -        return recovered.booleanvalue(); , - , -      } ," -      conf.getlong(""hbase.master.zksession.recover.timeout""', '300000);"
1803 , -      } , -    long timeout = , -    } , -    java.util.concurrent.executorservice executor =
1804 , -    } ," -      conf.getlong(""hbase.master.zksession.recover.timeout""', '300000); ", -    executor.shutdownnow(); , -      executors.newsinglethreadexecutor();
1805 , -    executor.shutdownnow(); , -    java.util.concurrent.executorservice executor = , -    return false; , -    future<boolean> result = executor.submit(callable);
1806 , -    return false; , -      executors.newsinglethreadexecutor(); , -  } , -    executor.shutdown();
1807 , -  } , -    future<boolean> result = executor.submit(callable); , - ," -    if (executor.awaittermination(timeout', 'timeunit.milliseconds)"
1808 , - , -    executor.shutdown(); , -  /** , -        && result.isdone()) {
1809 , -  /** ," -    if (executor.awaittermination(timeout', 'timeunit.milliseconds) ", -   * check to see if the current trigger for abort is due to zookeeper session , -      boolean recovered = result.get();
1810 , -   * check to see if the current trigger for abort is due to zookeeper session , -        && result.isdone()) { ," -   * expiry', 'and if yes', 'whether we can recover from zk session expiry. ", -      if (recovered != null) {
1811 ," -   * expiry', 'and if yes', 'whether we can recover from zk session expiry. ", -      boolean recovered = result.get(); , -   * , -        return recovered.booleanvalue();
1812 , -   * , -      if (recovered != null) { , -   * @param msg original abort message , -      }
1813 , -   * @param msg original abort message , -        return recovered.booleanvalue(); , -   * @param t   the cause for current abort request , -    }
1814 , -   * @param t   the cause for current abort request , -      } ," -   * @return true if we should proceed with abort operation', 'false other wise. ", -    executor.shutdownnow();
1815 ," -   * @return true if we should proceed with abort operation', 'false other wise. ", -    } , -   */ , -    return false;
1816 , -   */ , -    executor.shutdownnow(); ," -  private boolean abortnow(final string msg', 'final throwable t) { ", -  }
1817 ," -  private boolean abortnow(final string msg', 'final throwable t) { ", -    return false; , -    if (!this.isactivemaster || this.stopped) { , -
1818 , -    if (!this.isactivemaster || this.stopped) { , -  } , -      return true; , -  /**
1819 , -      return true; , - , -    } , -   * check to see if the current trigger for abort is due to zookeeper session
1820 , -    } , -  /** , - ," -   * expiry', 'and if yes', 'whether we can recover from zk session expiry."
1821 , - , -   * check to see if the current trigger for abort is due to zookeeper session ," -    boolean failfast = conf.getboolean(""fail.fast.expired.active.master""', 'false); ", -   *
1822 ," -    boolean failfast = conf.getboolean(""fail.fast.expired.active.master""', 'false); "," -   * expiry', 'and if yes', 'whether we can recover from zk session expiry. ", -    if (t != null && t instanceof keeperexception.sessionexpiredexception , -   * @param msg original abort message
1823 , -    if (t != null && t instanceof keeperexception.sessionexpiredexception , -   * , -        && !failfast) { , -   * @param t   the cause for current abort request
1824 , -        && !failfast) { , -   * @param msg original abort message , -      try { ," -   * @return true if we should proceed with abort operation', 'false other wise."
1825 , -      try { , -   * @param t   the cause for current abort request ," -        log.info(""primary master trying to recover from zookeeper session "" + ", -   */
1826 ," -        log.info(""primary master trying to recover from zookeeper session "" + "," -   * @return true if we should proceed with abort operation', 'false other wise. "," -            ""expiry.""); "," -  private boolean abortnow(final string msg', 'final throwable t) {"
1827 ," -            ""expiry.""); ", -   */ , -        return !tryrecoveringexpiredzksession(); , -    if (!this.isactivemaster || this.stopped) {
1828 , -        return !tryrecoveringexpiredzksession(); ," -  private boolean abortnow(final string msg', 'final throwable t) { ", -      } catch (throwable newt) { , -      return true;
1829 , -      } catch (throwable newt) { , -    if (!this.isactivemaster || this.stopped) { ," -        log.error(""primary master encountered unexpected exception while "" + ", -    }
1830 ," -        log.error(""primary master encountered unexpected exception while "" + ", -      return true; ," -            ""trying to recover from zookeeper session"" + ", -
1831 ," -            ""trying to recover from zookeeper session"" + ", -    } ," -            "" expiry. proceeding with server abort.""', 'newt); "," -    boolean failfast = conf.getboolean(""fail.fast.expired.active.master""', 'false);"
1832 ," -            "" expiry. proceeding with server abort.""', 'newt); ", - , -      } , -    if (t != null && t instanceof keeperexception.sessionexpiredexception
1833 , -      } ," -    boolean failfast = conf.getboolean(""fail.fast.expired.active.master""', 'false); ", -    } , -        && !failfast) {
1834 , -    } , -    if (t != null && t instanceof keeperexception.sessionexpiredexception , -    return true; , -      try {
1835 , -    return true; , -        && !failfast) { , +    stop(msg); ," -        log.info(""primary master trying to recover from zookeeper session "" +"
1836 , +    stop(msg); , -      try { , } ," -            ""expiry."");"
1837 , } ," -        log.info(""primary master trying to recover from zookeeper session "" + ",  , -        return !tryrecoveringexpiredzksession();
1838 ,  ," -            ""expiry.""); ", @override , -      } catch (throwable newt) {
1839 , @override , -        return !tryrecoveringexpiredzksession(); ," @@ -2411', '7 +1480', '7 @@ masterservices', 'server { "," -        log.error(""primary master encountered unexpected exception while "" +"
1840 ," @@ -2411', '7 +1480', '7 @@ masterservices', 'server { ", -      } catch (throwable newt) { , } ," -            ""trying to recover from zookeeper session"" +"
1841 , } ," -        log.error(""primary master encountered unexpected exception while "" + ",  ," -            "" expiry. proceeding with server abort.""', 'newt);"
1842 ,  ," -            ""trying to recover from zookeeper session"" + ", @override , -      }
1843 , @override ," -            "" expiry. proceeding with server abort.""', 'newt); ", -  public mastercoprocessorhost getcoprocessorhost() { , -    }
1844 , -  public mastercoprocessorhost getcoprocessorhost() { , -      } , +  public mastercoprocessorhost getmastercoprocessorhost() { , -    return true;
1845 , +  public mastercoprocessorhost getmastercoprocessorhost() { , -    } , return cphost; , +    stop(msg);
1846 , return cphost; , -    return true; , } , }
1847 , } , +    stop(msg); ,  , 
1848 ,  , } ," @@ -2420', '29 +1489', '16 @@ masterservices', 'server { ", @override
1849 ," @@ -2420', '29 +1489', '16 @@ masterservices', 'server { ",  , return this.servername; ," @@ -2411', '7 +1480', '7 @@ masterservices', 'server {"
1850 , return this.servername; , @override , } , }
1851 , } ," @@ -2411', '7 +1480', '7 @@ masterservices', 'server { ",  , 
1852 ,  , } , -  @override , @override
1853 , -  @override ,  , -  public catalogtracker getcatalogtracker() { , -  public mastercoprocessorhost getcoprocessorhost() {
1854 , -  public catalogtracker getcatalogtracker() { , @override , -    return catalogtracker; , +  public mastercoprocessorhost getmastercoprocessorhost() {
1855 , -    return catalogtracker; , -  public mastercoprocessorhost getcoprocessorhost() { , -  } , return cphost;
1856 , -  } , +  public mastercoprocessorhost getmastercoprocessorhost() { , - , }
1857 , - , return cphost; , @override , 
1858 , @override , } , public assignmentmanager getassignmentmanager() { ," @@ -2420', '29 +1489', '16 @@ masterservices', 'server {"
1859 , public assignmentmanager getassignmentmanager() { ,  , return this.assignmentmanager; , return this.servername;
1860 , return this.assignmentmanager; ," @@ -2420', '29 +1489', '16 @@ masterservices', 'server { ", } , }
1861 , } , return this.servername; ,  , 
1862 ,  , } , -  @override , -  @override
1863 , -  @override ,  , -  public tablelockmanager gettablelockmanager() { , -  public catalogtracker getcatalogtracker() {
1864 , -  public tablelockmanager gettablelockmanager() { , -  @override , -    return this.tablelockmanager; , -    return catalogtracker;
1865 , -    return this.tablelockmanager; , -  public catalogtracker getcatalogtracker() { , -  } , -  }
1866 , -  } , -    return catalogtracker; , - , -
1867 , - , -  } , public memoryboundedlogmessagebuffer getregionserverfatallogbuffer() { , @override
1868 , public memoryboundedlogmessagebuffer getregionserverfatallogbuffer() { , - , return rsfatals; , public assignmentmanager getassignmentmanager() {
1869 , return rsfatals; , @override , } , return this.assignmentmanager;
1870 , } , public assignmentmanager getassignmentmanager() { ,  , }
1871 ,  , return this.assignmentmanager; , public void shutdown() { , 
1872 , public void shutdown() { , } , -    if (spanreceiverhost != null) { , -  @override
1873 , -    if (spanreceiverhost != null) { ,  , -      spanreceiverhost.closereceivers(); , -  public tablelockmanager gettablelockmanager() {
1874 , -      spanreceiverhost.closereceivers(); , -  @override , -    } , -    return this.tablelockmanager;
1875 , -    } , -  public tablelockmanager gettablelockmanager() { , if (cphost != null) { , -  }
1876 , if (cphost != null) { , -    return this.tablelockmanager; , try { , -
1877 , try { , -  } , cphost.preshutdown(); , public memoryboundedlogmessagebuffer getregionserverfatallogbuffer() {
1878 , cphost.preshutdown(); , - ," @@ -2450', '29 +1506', '21 @@ masterservices', 'server { ", return rsfatals;
1879 ," @@ -2450', '29 +1506', '21 @@ masterservices', 'server { ", public memoryboundedlogmessagebuffer getregionserverfatallogbuffer() { ," log.error(""error call master coprocessor preshutdown()""', 'ioe); ", }
1880 ," log.error(""error call master coprocessor preshutdown()""', 'ioe); ", return rsfatals; , } , 
1881 , } , } , } , public void shutdown() {
1882 , } ,  , -    if (mxbean != null) { , -    if (spanreceiverhost != null) {
1883 , -    if (mxbean != null) { , public void shutdown() { , -      mbeanutil.unregistermbean(mxbean); , -      spanreceiverhost.closereceivers();
1884 , -      mbeanutil.unregistermbean(mxbean); , -    if (spanreceiverhost != null) { , -      mxbean = null; , -    }
1885 , -      mxbean = null; , -      spanreceiverhost.closereceivers(); , +    if (this.assignmentmanager != null) { , if (cphost != null) {
1886 , +    if (this.assignmentmanager != null) { , -    } , +      this.assignmentmanager.shutdown(); , try {
1887 , +      this.assignmentmanager.shutdown(); , if (cphost != null) { , } , cphost.preshutdown();
1888 , } , try { , -    if (this.assignmentmanager != null) this.assignmentmanager.shutdown(); ," @@ -2450', '29 +1506', '21 @@ masterservices', 'server {"
1889 , -    if (this.assignmentmanager != null) this.assignmentmanager.shutdown(); , cphost.preshutdown(); , -    if (this.servermanager != null) this.servermanager.shutdowncluster(); ," log.error(""error call master coprocessor preshutdown()""', 'ioe);"
1890 , -    if (this.servermanager != null) this.servermanager.shutdowncluster(); ," @@ -2450', '29 +1506', '21 @@ masterservices', 'server { ", try { , }
1891 , try { ," log.error(""error call master coprocessor preshutdown()""', 'ioe); ", if (this.clusterstatustracker != null){ , }
1892 , if (this.clusterstatustracker != null){ , } , this.clusterstatustracker.setclusterdown(); , -    if (mxbean != null) {
1893 , this.clusterstatustracker.setclusterdown(); , } , +        if (this.servermanager != null) { , -      mbeanutil.unregistermbean(mxbean);
1894 , +        if (this.servermanager != null) { , -    if (mxbean != null) { , +          this.servermanager.shutdowncluster(); , -      mxbean = null;
1895 , +          this.servermanager.shutdowncluster(); , -      mbeanutil.unregistermbean(mxbean); , +        } , +    if (this.assignmentmanager != null) {
1896 , +        } , -      mxbean = null; , } , +      this.assignmentmanager.shutdown();
1897 , } , +    if (this.assignmentmanager != null) { , } catch (keeperexception e) { , }
1898 , } catch (keeperexception e) { , +      this.assignmentmanager.shutdown(); ," log.error(""zookeeper exception trying to set cluster as down in zk""', 'e); ", -    if (this.assignmentmanager != null) this.assignmentmanager.shutdown();
1899 ," log.error(""zookeeper exception trying to set cluster as down in zk""', 'e); ", } , } , -    if (this.servermanager != null) this.servermanager.shutdowncluster();
1900 , } , -    if (this.assignmentmanager != null) this.assignmentmanager.shutdown(); , } , try {
1901 , } , -    if (this.servermanager != null) this.servermanager.shutdowncluster(); ,  , if (this.clusterstatustracker != null){
1902 ,  , try { , -  @override , this.clusterstatustracker.setclusterdown();
1903 , -  @override , if (this.clusterstatustracker != null){ ," -  public shutdownresponse shutdown(rpccontroller controller', 'shutdownrequest request) ", +        if (this.servermanager != null) {
1904 ," -  public shutdownresponse shutdown(rpccontroller controller', 'shutdownrequest request) ", this.clusterstatustracker.setclusterdown(); , -  throws serviceexception { , +          this.servermanager.shutdowncluster();
1905 , -  throws serviceexception { , +        if (this.servermanager != null) { ," -    log.info(getclientidauditprefix() + "" shutdown""); ", +        }
1906 ," -    log.info(getclientidauditprefix() + "" shutdown""); ", +          this.servermanager.shutdowncluster(); , -    shutdown(); , }
1907 , -    shutdown(); , +        } , -    return shutdownresponse.newbuilder().build(); , } catch (keeperexception e) {
1908 , -    return shutdownresponse.newbuilder().build(); , } , -  } ," log.error(""zookeeper exception trying to set cluster as down in zk""', 'e);"
1909 , -  } , } catch (keeperexception e) { , - , }
1910 , - ," log.error(""zookeeper exception trying to set cluster as down in zk""', 'e); ", public void stopmaster() { , }
1911 , public void stopmaster() { , } , if (cphost != null) { , 
1912 , if (cphost != null) { , } , try { , -  @override
1913 , try { ,  ," @@ -2484', '49 +1532', '26 @@ masterservices', 'server { "," -  public shutdownresponse shutdown(rpccontroller controller', 'shutdownrequest request)"
1914 ," @@ -2484', '49 +1532', '26 @@ masterservices', 'server { ", -  @override ," stop(""stopped by "" + thread.currentthread().getname()); ", -  throws serviceexception {
1915 ," stop(""stopped by "" + thread.currentthread().getname()); "," -  public shutdownresponse shutdown(rpccontroller controller', 'shutdownrequest request) ", } ," -    log.info(getclientidauditprefix() + "" shutdown"");"
1916 , } , -  throws serviceexception { ,  , -    shutdown();
1917 ,  ," -    log.info(getclientidauditprefix() + "" shutdown""); ", -  @override , -    return shutdownresponse.newbuilder().build();
1918 , -  @override , -    shutdown(); ," -  public stopmasterresponse stopmaster(rpccontroller controller', 'stopmasterrequest request) ", -  }
1919 ," -  public stopmasterresponse stopmaster(rpccontroller controller', 'stopmasterrequest request) ", -    return shutdownresponse.newbuilder().build(); , -  throws serviceexception { , -
1920 , -  throws serviceexception { , -  } ," -    log.info(getclientidauditprefix() + "" stop""); ", public void stopmaster() {
1921 ," -    log.info(getclientidauditprefix() + "" stop""); ", - , -    stopmaster(); , if (cphost != null) {
1922 , -    stopmaster(); , public void stopmaster() { , -    return stopmasterresponse.newbuilder().build(); , try {
1923 , -    return stopmasterresponse.newbuilder().build(); , if (cphost != null) { , -  } ," @@ -2484', '49 +1532', '26 @@ masterservices', 'server {"
1924 , -  } , try { , - ," stop(""stopped by "" + thread.currentthread().getname());"
1925 , - ," @@ -2484', '49 +1532', '26 @@ masterservices', 'server { ", -  @override , }
1926 , -  @override ," stop(""stopped by "" + thread.currentthread().getname()); ", -  public void stop(final string why) { , 
1927 , -  public void stop(final string why) { , } , -    log.info(why); , -  @override
1928 , -    log.info(why); ,  , -    this.stopped = true; ," -  public stopmasterresponse stopmaster(rpccontroller controller', 'stopmasterrequest request)"
1929 , -    this.stopped = true; , -  @override , -    // we wake up the stopsleeper to stop immediately , -  throws serviceexception {
1930 , -    // we wake up the stopsleeper to stop immediately ," -  public stopmasterresponse stopmaster(rpccontroller controller', 'stopmasterrequest request) ", -    stopsleeper.skipsleepcycle(); ," -    log.info(getclientidauditprefix() + "" stop"");"
1931 , -    stopsleeper.skipsleepcycle(); , -  throws serviceexception { ," -    // if we are a backup master', 'we need to interrupt wait ", -    stopmaster();
1932 ," -    // if we are a backup master', 'we need to interrupt wait "," -    log.info(getclientidauditprefix() + "" stop""); ", -    if (this.activemastermanager != null) { , -    return stopmasterresponse.newbuilder().build();
1933 , -    if (this.activemastermanager != null) { , -    stopmaster(); , -      synchronized (this.activemastermanager.clusterhasactivemaster) { , +  void checkservicestarted() throws servernotrunningyetexception {
1934 , -      synchronized (this.activemastermanager.clusterhasactivemaster) { , -    return stopmasterresponse.newbuilder().build(); , -        this.activemastermanager.clusterhasactivemaster.notifyall(); , +    if (!servicestarted) {
1935 , -        this.activemastermanager.clusterhasactivemaster.notifyall(); , -  } , -      } ," +      throw new servernotrunningyetexception(""server is not running yet"");"
1936 , -      } , - , -    } , }
1937 , -    } , -  @override , -    // if no region server is online then master may stuck waiting on hbase:meta to come on line. , -
1938 , -    // if no region server is online then master may stuck waiting on hbase:meta to come on line. , -  public void stop(final string why) { , -    // see hbase-8422. , -  @override
1939 , -    // see hbase-8422. , -    log.info(why); , -    if (this.catalogtracker != null && this.servermanager.getonlineservers().isempty()) { , -  public void stop(final string why) {
1940 , -    if (this.catalogtracker != null && this.servermanager.getonlineservers().isempty()) { , -    this.stopped = true; , -      this.catalogtracker.stop(); , -    log.info(why);
1941 , -      this.catalogtracker.stop(); , -    // we wake up the stopsleeper to stop immediately , +  void checkservicestarted() throws servernotrunningyetexception { , -    this.stopped = true;
1942 , -    } , -    stopsleeper.skipsleepcycle(); , +    if (!servicestarted) { , -    // we wake up the stopsleeper to stop immediately
1943 , -  } ," -    // if we are a backup master', 'we need to interrupt wait "," +      throw new servernotrunningyetexception(""server is not running yet""); ", -    stopsleeper.skipsleepcycle();
1944 , - , -    if (this.activemastermanager != null) { , } ," -    // if we are a backup master', 'we need to interrupt wait"
1945 , -  @override , -      synchronized (this.activemastermanager.clusterhasactivemaster) { , } , -    if (this.activemastermanager != null) {
1946 , -  public boolean isstopped() { , -        this.activemastermanager.clusterhasactivemaster.notifyall(); ,  , -      synchronized (this.activemastermanager.clusterhasactivemaster) {
1947 , -    return this.stopped; , -      } , -  @override , -        this.activemastermanager.clusterhasactivemaster.notifyall();
1948 , +  void checkservicestarted() throws servernotrunningyetexception { , -    } , -  public boolean isstopped() { , -      }
1949 , +    if (!servicestarted) { , -    // if no region server is online then master may stuck waiting on hbase:meta to come on line. , -    return this.stopped; , -    }
1950 ," +      throw new servernotrunningyetexception(""server is not running yet""); ", -    // see hbase-8422. , -  } , -    // if no region server is online then master may stuck waiting on hbase:meta to come on line.
1951 , } , -    if (this.catalogtracker != null && this.servermanager.getonlineservers().isempty()) { , - , -    // see hbase-8422.
1952 , - , -      this.catalogtracker.stop(); , -  @override , -    if (this.catalogtracker != null && this.servermanager.getonlineservers().isempty()) {
1953 , -  @override , +  void checkservicestarted() throws servernotrunningyetexception { , -  public boolean isaborted() { , -      this.catalogtracker.stop();
1954 , -  public boolean isaborted() { , +    if (!servicestarted) { , -    return this.abort; , -    }
1955 , -    return this.abort; ," +      throw new servernotrunningyetexception(""server is not running yet""); ", -  } , -  }
1956 , } , } , - , -
1957 ,  , } , -  void checkinitialized() throws pleaseholdexception { , -  @override
1958 , -  void checkinitialized() throws pleaseholdexception { ,  ," +  void checkinitialized() throws pleaseholdexception', 'servernotrunningyetexception { ", -  public boolean isstopped() {
1959 ," +  void checkinitialized() throws pleaseholdexception', 'servernotrunningyetexception { ", -  @override , +    checkservicestarted(); , -    return this.stopped;
1960 , +    checkservicestarted(); , -  public boolean isstopped() { , if (!this.initialized) { , -  }
1961 , if (!this.initialized) { , -    return this.stopped; ," throw new pleaseholdexception(""master is initializing""); ", -
1962 ," throw new pleaseholdexception(""master is initializing""); ", -  } , } , -  @override
1963 , } , - , } , -  public boolean isaborted() {
1964 , } , -  @override ,  , -    return this.abort;
1965 ,  , -  public boolean isaborted() { , +  void checknamespacemanagerready() throws ioexception { , }
1966 , +  void checknamespacemanagerready() throws ioexception { , -    return this.abort; , +    checkinitialized(); , 
1967 , +    checkinitialized(); , -  } , +    if (tablenamespacemanager == null || , -  void checkinitialized() throws pleaseholdexception {
1968 , +    if (tablenamespacemanager == null || , - , +        !tablenamespacemanager.istableavailableandinitialized()) { ," +  void checkinitialized() throws pleaseholdexception', 'servernotrunningyetexception {"
1969 , +        !tablenamespacemanager.istableavailableandinitialized()) { , -  void checkinitialized() throws pleaseholdexception { ," +      throw new ioexception(""table namespace manager not ready yet', 'try again later""); ", +    checkservicestarted();
1970 ," +      throw new ioexception(""table namespace manager not ready yet', 'try again later""); "," +  void checkinitialized() throws pleaseholdexception', 'servernotrunningyetexception { ", +    } , if (!this.initialized) {
1971 , +    } , +    checkservicestarted(); , +  } ," throw new pleaseholdexception(""master is initializing"");"
1972 , +  } , if (!this.initialized) { , /** , }
1973 , /** ," throw new pleaseholdexception(""master is initializing""); ", * report whether this master is currently the active master or not. , }
1974 , * report whether this master is currently the active master or not. , } ," * if not active master', 'we are parked on zk waiting to become active. ", 
1975 ," * if not active master', 'we are parked on zk waiting to become active. ", } ," @@ -2571', '178 +1596', '10 @@ masterservices', 'server { ", +  void checknamespacemanagerready() throws ioexception {
1976 ," @@ -2571', '178 +1596', '10 @@ masterservices', 'server { ",  , return this.initializationbeforemetaassignment; , +    checkinitialized();
1977 , return this.initializationbeforemetaassignment; , +  void checknamespacemanagerready() throws ioexception { , } , +    if (tablenamespacemanager == null ||
1978 , } , +    checkinitialized(); ,  , +        !tablenamespacemanager.istableavailableandinitialized()) {
1979 ,  , +    if (tablenamespacemanager == null || , -  @override ," +      throw new ioexception(""table namespace manager not ready yet', 'try again later"");"
1980 , -  @override , +        !tablenamespacemanager.istableavailableandinitialized()) { ," -  public assignregionresponse assignregion(rpccontroller controller', 'assignregionrequest req) ", +    }
1981 ," -  public assignregionresponse assignregion(rpccontroller controller', 'assignregionrequest req) "," +      throw new ioexception(""table namespace manager not ready yet', 'try again later""); ", -  throws serviceexception { , +  }
1982 , -  throws serviceexception { , +    } , -    try { , /**
1983 , -    try { , +  } , -      final byte [] regionname = req.getregion().getvalue().tobytearray(); , * report whether this master is currently the active master or not.
1984 , -      final byte [] regionname = req.getregion().getvalue().tobytearray(); , /** , -      regionspecifiertype type = req.getregion().gettype(); ," * if not active master', 'we are parked on zk waiting to become active."
1985 , -      regionspecifiertype type = req.getregion().gettype(); , * report whether this master is currently the active master or not. , -      assignregionresponse arr = assignregionresponse.newbuilder().build(); ," @@ -2571', '178 +1596', '10 @@ masterservices', 'server {"
1986 , -      assignregionresponse arr = assignregionresponse.newbuilder().build(); ," * if not active master', 'we are parked on zk waiting to become active. ", - , return this.initializationbeforemetaassignment;
1987 , - ," @@ -2571', '178 +1596', '10 @@ masterservices', 'server { ", -      checkinitialized(); , }
1988 , -      checkinitialized(); , return this.initializationbeforemetaassignment; , -      if (type != regionspecifiertype.region_name) { , 
1989 , -      if (type != regionspecifiertype.region_name) { , } ," -        log.warn(""assignregion specifier type: expected: "" + regionspecifiertype.region_name ", -  @override
1990 ," -        log.warn(""assignregion specifier type: expected: "" + regionspecifiertype.region_name ",  ," -          + "" actual: "" + type); "," -  public assignregionresponse assignregion(rpccontroller controller', 'assignregionrequest req)"
1991 ," -          + "" actual: "" + type); ", -  @override , -      } , -  throws serviceexception {
1992 , -      } ," -  public assignregionresponse assignregion(rpccontroller controller', 'assignregionrequest req) ", -      hregioninfo regioninfo = assignmentmanager.getregionstates().getregioninfo(regionname); , -    try {
1993 , -      hregioninfo regioninfo = assignmentmanager.getregionstates().getregioninfo(regionname); , -  throws serviceexception { , -      if (regioninfo == null) throw new unknownregionexception(bytes.tostring(regionname)); , -      final byte [] regionname = req.getregion().getvalue().tobytearray();
1994 , -      if (regioninfo == null) throw new unknownregionexception(bytes.tostring(regionname)); , -    try { , -      if (cphost != null) { , -      regionspecifiertype type = req.getregion().gettype();
1995 , -      if (cphost != null) { , -      final byte [] regionname = req.getregion().getvalue().tobytearray(); , -        if (cphost.preassign(regioninfo)) { , -      assignregionresponse arr = assignregionresponse.newbuilder().build();
1996 , -        if (cphost.preassign(regioninfo)) { , -      regionspecifiertype type = req.getregion().gettype(); , -          return arr; , -
1997 , -          return arr; , -      assignregionresponse arr = assignregionresponse.newbuilder().build(); , -        } , -      checkinitialized();
1998 , -        } , - , -      } , -      if (type != regionspecifiertype.region_name) {
1999 , -      } , -      checkinitialized(); ," -      log.info(getclientidauditprefix() + "" assign "" + regioninfo.getregionnameasstring()); "," -        log.warn(""assignregion specifier type: expected: "" + regionspecifiertype.region_name"
2000 ," -      log.info(getclientidauditprefix() + "" assign "" + regioninfo.getregionnameasstring()); ", -      if (type != regionspecifiertype.region_name) { ," -      assignmentmanager.assign(regioninfo', 'true', 'true); "," -          + "" actual: "" + type);"
2001 ," -      assignmentmanager.assign(regioninfo', 'true', 'true); "," -        log.warn(""assignregion specifier type: expected: "" + regionspecifiertype.region_name ", -      if (cphost != null) { , -      }
2002 , -      if (cphost != null) { ," -          + "" actual: "" + type); ", -        cphost.postassign(regioninfo); , -      hregioninfo regioninfo = assignmentmanager.getregionstates().getregioninfo(regionname);
2003 , -        cphost.postassign(regioninfo); , -      } , -      } , -      if (regioninfo == null) throw new unknownregionexception(bytes.tostring(regionname));
2004 , -      } , -      hregioninfo regioninfo = assignmentmanager.getregionstates().getregioninfo(regionname); , - , -      if (cphost != null) {
2005 , - , -      if (regioninfo == null) throw new unknownregionexception(bytes.tostring(regionname)); , -      return arr; , -        if (cphost.preassign(regioninfo)) {
2006 , -      return arr; , -      if (cphost != null) { , -    } catch (ioexception ioe) { , -          return arr;
2007 , -    } catch (ioexception ioe) { , -        if (cphost.preassign(regioninfo)) { , -      throw new serviceexception(ioe); , -        }
2008 , -      throw new serviceexception(ioe); , -          return arr; , -    } , -      }
2009 , -    } , -        } , -  } ," -      log.info(getclientidauditprefix() + "" assign "" + regioninfo.getregionnameasstring());"
2010 , -  } , -      } , - ," -      assignmentmanager.assign(regioninfo', 'true', 'true);"
2011 , - ," -      log.info(getclientidauditprefix() + "" assign "" + regioninfo.getregionnameasstring()); ", public void assignregion(hregioninfo hri) { , -      if (cphost != null) {
2012 , public void assignregion(hregioninfo hri) { ," -      assignmentmanager.assign(regioninfo', 'true', 'true); "," assignmentmanager.assign(hri', 'true); ", -        cphost.postassign(regioninfo);
2013 ," assignmentmanager.assign(hri', 'true); ", -      if (cphost != null) { , } , -      }
2014 , } , -        cphost.postassign(regioninfo); ,  , -
2015 ,  , -      } , -  @override , -      return arr;
2016 , -  @override , - ," -  public unassignregionresponse unassignregion(rpccontroller controller', 'unassignregionrequest req) ", -    } catch (ioexception ioe) {
2017 ," -  public unassignregionresponse unassignregion(rpccontroller controller', 'unassignregionrequest req) ", -      return arr; , -  throws serviceexception { , -      throw new serviceexception(ioe);
2018 , -  throws serviceexception { , -    } catch (ioexception ioe) { , -    try { , -    }
2019 , -    try { , -      throw new serviceexception(ioe); , -      final byte [] regionname = req.getregion().getvalue().tobytearray(); , -  }
2020 , -      final byte [] regionname = req.getregion().getvalue().tobytearray(); , -    } , -      regionspecifiertype type = req.getregion().gettype(); , -
2021 , -      regionspecifiertype type = req.getregion().gettype(); , -  } , -      final boolean force = req.getforce(); , public void assignregion(hregioninfo hri) {
2022 , -      final boolean force = req.getforce(); , - , -      unassignregionresponse urr = unassignregionresponse.newbuilder().build(); ," assignmentmanager.assign(hri', 'true);"
2023 , -      unassignregionresponse urr = unassignregionresponse.newbuilder().build(); , public void assignregion(hregioninfo hri) { , - , }
2024 , - ," assignmentmanager.assign(hri', 'true); ", -      checkinitialized(); , 
2025 , -      checkinitialized(); , } , -      if (type != regionspecifiertype.region_name) { , -  @override
2026 , -      if (type != regionspecifiertype.region_name) { ,  ," -        log.warn(""unassignregion specifier type: expected: "" + regionspecifiertype.region_name "," -  public unassignregionresponse unassignregion(rpccontroller controller', 'unassignregionrequest req)"
2027 ," -        log.warn(""unassignregion specifier type: expected: "" + regionspecifiertype.region_name ", -  @override ," -          + "" actual: "" + type); ", -  throws serviceexception {
2028 ," -          + "" actual: "" + type); "," -  public unassignregionresponse unassignregion(rpccontroller controller', 'unassignregionrequest req) ", -      } , -    try {
2029 , -      } , -  throws serviceexception { ," -      pair<hregioninfo', 'servername> pair = ", -      final byte [] regionname = req.getregion().getvalue().tobytearray();
2030 ," -      pair<hregioninfo', 'servername> pair = ", -    try { ," -        metareader.getregion(this.catalogtracker', 'regionname); ", -      regionspecifiertype type = req.getregion().gettype();
2031 ," -        metareader.getregion(this.catalogtracker', 'regionname); ", -      final byte [] regionname = req.getregion().getvalue().tobytearray(); , -      if (pair == null) throw new unknownregionexception(bytes.tostring(regionname)); , -      final boolean force = req.getforce();
2032 , -      if (pair == null) throw new unknownregionexception(bytes.tostring(regionname)); , -      regionspecifiertype type = req.getregion().gettype(); , -      hregioninfo hri = pair.getfirst(); , -      unassignregionresponse urr = unassignregionresponse.newbuilder().build();
2033 , -      hregioninfo hri = pair.getfirst(); , -      final boolean force = req.getforce(); , -      if (cphost != null) { , -
2034 , -      if (cphost != null) { , -      unassignregionresponse urr = unassignregionresponse.newbuilder().build(); ," -        if (cphost.preunassign(hri', 'force)) { ", -      checkinitialized();
2035 ," -        if (cphost.preunassign(hri', 'force)) { ", - , -          return urr; , -      if (type != regionspecifiertype.region_name) {
2036 , -          return urr; , -      checkinitialized(); , -        } ," -        log.warn(""unassignregion specifier type: expected: "" + regionspecifiertype.region_name"
2037 , -        } , -      if (type != regionspecifiertype.region_name) { , -      } ," -          + "" actual: "" + type);"
2038 , -      } ," -        log.warn(""unassignregion specifier type: expected: "" + regionspecifiertype.region_name "," -      log.debug(getclientidauditprefix() + "" unassign "" + hri.getregionnameasstring() ", -      }
2039 ," -      log.debug(getclientidauditprefix() + "" unassign "" + hri.getregionnameasstring() "," -          + "" actual: "" + type); "," -          + "" in current location if it is online and reassign.force="" + force); "," -      pair<hregioninfo', 'servername> pair ="
2040 ," -          + "" in current location if it is online and reassign.force="" + force); ", -      } ," -      this.assignmentmanager.unassign(hri', 'force); "," -        metareader.getregion(this.catalogtracker', 'regionname);"
2041 ," -      this.assignmentmanager.unassign(hri', 'force); "," -      pair<hregioninfo', 'servername> pair = ", -      if (this.assignmentmanager.getregionstates().isregionoffline(hri)) { , -      if (pair == null) throw new unknownregionexception(bytes.tostring(regionname));
2042 , -      if (this.assignmentmanager.getregionstates().isregionoffline(hri)) { ," -        metareader.getregion(this.catalogtracker', 'regionname); "," -        log.debug(""region "" + hri.getregionnameasstring() ", -      hregioninfo hri = pair.getfirst();
2043 ," -        log.debug(""region "" + hri.getregionnameasstring() ", -      if (pair == null) throw new unknownregionexception(bytes.tostring(regionname)); ," -            + "" is not online on any region server', 'reassigning it.""); ", -      if (cphost != null) {
2044 ," -            + "" is not online on any region server', 'reassigning it.""); ", -      hregioninfo hri = pair.getfirst(); , -        assignregion(hri); ," -        if (cphost.preunassign(hri', 'force)) {"
2045 , -        assignregion(hri); , -      if (cphost != null) { , -      } , -          return urr;
2046 , -      } ," -        if (cphost.preunassign(hri', 'force)) { ", -      if (cphost != null) { , -        }
2047 , -      if (cphost != null) { , -          return urr; ," -        cphost.postunassign(hri', 'force); ", -      }
2048 ," -        cphost.postunassign(hri', 'force); ", -        } , -      } ," -      log.debug(getclientidauditprefix() + "" unassign "" + hri.getregionnameasstring()"
2049 , -      } , -      } , - ," -          + "" in current location if it is online and reassign.force="" + force);"
2050 , - ," -      log.debug(getclientidauditprefix() + "" unassign "" + hri.getregionnameasstring() ", -      return urr; ," -      this.assignmentmanager.unassign(hri', 'force);"
2051 , -      return urr; ," -          + "" in current location if it is online and reassign.force="" + force); ", -    } catch (ioexception ioe) { , -      if (this.assignmentmanager.getregionstates().isregionoffline(hri)) {
2052 , -    } catch (ioexception ioe) { ," -      this.assignmentmanager.unassign(hri', 'force); ", -      throw new serviceexception(ioe); ," -        log.debug(""region "" + hri.getregionnameasstring()"
2053 , -      throw new serviceexception(ioe); , -      if (this.assignmentmanager.getregionstates().isregionoffline(hri)) { , -    } ," -            + "" is not online on any region server', 'reassigning it."");"
2054 , -    } ," -        log.debug(""region "" + hri.getregionnameasstring() ", -  } , -        assignregion(hri);
2055 , -  } ," -            + "" is not online on any region server', 'reassigning it.""); ", - , -      }
2056 , - , -        assignregion(hri); , -  /** , -      if (cphost != null) {
2057 , -  /** , -      } , -   * get list of tabledescriptors for requested tables. ," -        cphost.postunassign(hri', 'force);"
2058 , -   * get list of tabledescriptors for requested tables. , -      if (cphost != null) { , -   * @param controller unused (set to null). , -      }
2059 , -   * @param controller unused (set to null). ," -        cphost.postunassign(hri', 'force); ", -   * @param req gettabledescriptorsrequest that contains: , -
2060 , -   * @param req gettabledescriptorsrequest that contains: , -      } ," -   * - tablenames: requested tables', 'or if empty', 'all are requested ", -      return urr;
2061 ," -   * - tablenames: requested tables', 'or if empty', 'all are requested ", - , -   * @return gettabledescriptorsresponse , -    } catch (ioexception ioe) {
2062 , -   * @return gettabledescriptorsresponse , -      return urr; , -   * @throws serviceexception , -      throw new serviceexception(ioe);
2063 , -   * @throws serviceexception , -    } catch (ioexception ioe) { , -   */ , -    }
2064 , -   */ , -      throw new serviceexception(ioe); , -  @override , -  }
2065 , -  @override , -    } , -  public gettabledescriptorsresponse gettabledescriptors( , -
2066 , -  public gettabledescriptorsresponse gettabledescriptors( , -  } ," -\t      rpccontroller controller', 'gettabledescriptorsrequest req) throws serviceexception { ", -  /**
2067 ," -\t      rpccontroller controller', 'gettabledescriptorsrequest req) throws serviceexception { ", - , -    list<htabledescriptor> descriptors = new arraylist<htabledescriptor>(); , -   * get list of tabledescriptors for requested tables.
2068 , -    list<htabledescriptor> descriptors = new arraylist<htabledescriptor>(); , -  /** , -    list<tablename> tablenamelist = new arraylist<tablename>(); , -   * @param controller unused (set to null).
2069 , -    list<tablename> tablenamelist = new arraylist<tablename>(); , -   * get list of tabledescriptors for requested tables. , -    for(hbaseprotos.tablename tablenamepb: req.gettablenameslist()) { , -   * @param req gettabledescriptorsrequest that contains:
2070 , -    for(hbaseprotos.tablename tablenamepb: req.gettablenameslist()) { , -   * @param controller unused (set to null). , -      tablenamelist.add(protobufutil.totablename(tablenamepb)); ," -   * - tablenames: requested tables', 'or if empty', 'all are requested"
2071 , -      tablenamelist.add(protobufutil.totablename(tablenamepb)); , -   * @param req gettabledescriptorsrequest that contains: , -    } , -   * @return gettabledescriptorsresponse
2072 , -    } ," -   * - tablenames: requested tables', 'or if empty', 'all are requested ", -    boolean bypass = false; , -   * @throws serviceexception
2073 , -    boolean bypass = false; , -   * @return gettabledescriptorsresponse , -    if (this.cphost != null) { , -   */
2074 , -    if (this.cphost != null) { , -   * @throws serviceexception , -      try { , -  @override
2075 , -      try { , -   */ ," -        bypass = this.cphost.pregettabledescriptors(tablenamelist', 'descriptors); ", -  public gettabledescriptorsresponse gettabledescriptors(
2076 ," -        bypass = this.cphost.pregettabledescriptors(tablenamelist', 'descriptors); ", -  @override , -      } catch (ioexception ioe) { ," -\t      rpccontroller controller', 'gettabledescriptorsrequest req) throws serviceexception {"
2077 , -      } catch (ioexception ioe) { , -  public gettabledescriptorsresponse gettabledescriptors( , -        throw new serviceexception(ioe); , -    list<htabledescriptor> descriptors = new arraylist<htabledescriptor>();
2078 , -        throw new serviceexception(ioe); ," -\t      rpccontroller controller', 'gettabledescriptorsrequest req) throws serviceexception { ", -      } , -    list<tablename> tablenamelist = new arraylist<tablename>();
2079 , -      } , -    list<htabledescriptor> descriptors = new arraylist<htabledescriptor>(); , -    } , -    for(hbaseprotos.tablename tablenamepb: req.gettablenameslist()) {
2080 , -    } , -    list<tablename> tablenamelist = new arraylist<tablename>(); , - , -      tablenamelist.add(protobufutil.totablename(tablenamepb));
2081 , - , -    for(hbaseprotos.tablename tablenamepb: req.gettablenameslist()) { , -    if (!bypass) { , -    }
2082 , -    if (!bypass) { , -      tablenamelist.add(protobufutil.totablename(tablenamepb)); , -      if (req.gettablenamescount() == 0) { , -    boolean bypass = false;
2083 , -      if (req.gettablenamescount() == 0) { , -    } , -        // request for all tabledescriptors , -    if (this.cphost != null) {
2084 , -        // request for all tabledescriptors , -    boolean bypass = false; ," -        map<string', 'htabledescriptor> descriptormap = null; ", -      try {
2085 ," -        map<string', 'htabledescriptor> descriptormap = null; ", -    if (this.cphost != null) { , -        try { ," -        bypass = this.cphost.pregettabledescriptors(tablenamelist', 'descriptors);"
2086 , -        try { , -      try { , -          descriptormap = this.tabledescriptors.getall(); , -      } catch (ioexception ioe) {
2087 , -          descriptormap = this.tabledescriptors.getall(); ," -        bypass = this.cphost.pregettabledescriptors(tablenamelist', 'descriptors); ", -        } catch (ioexception e) { , -        throw new serviceexception(ioe);
2088 , -        } catch (ioexception e) { , -      } catch (ioexception ioe) { ," -          log.warn(""failed getting all descriptors""', 'e); ", -      }
2089 ," -          log.warn(""failed getting all descriptors""', 'e); ", -        throw new serviceexception(ioe); , -        } , -    }
2090 , -        } , -      } , -        if (descriptormap != null) { , -
2091 , -        if (descriptormap != null) { , -    } , -          for(htabledescriptor desc: descriptormap.values()) { , -    if (!bypass) {
2092 , -          for(htabledescriptor desc: descriptormap.values()) { , - , -            if(!desc.gettablename().issystemtable()) { , -      if (req.gettablenamescount() == 0) {
2093 , -            if(!desc.gettablename().issystemtable()) { , -    if (!bypass) { , -              descriptors.add(desc); , -        // request for all tabledescriptors
2094 , -              descriptors.add(desc); , -      if (req.gettablenamescount() == 0) { , -            } ," -        map<string', 'htabledescriptor> descriptormap = null;"
2095 , -            } , -        // request for all tabledescriptors , -          } , -        try {
2096 , -          } ," -        map<string', 'htabledescriptor> descriptormap = null; ", -        } , -          descriptormap = this.tabledescriptors.getall();
2097 , -        } , -        try { , -      } else { , -        } catch (ioexception e) {
2098 , -      } else { , -          descriptormap = this.tabledescriptors.getall(); , -        for (tablename s: tablenamelist) { ," -          log.warn(""failed getting all descriptors""', 'e);"
2099 , -        for (tablename s: tablenamelist) { , -        } catch (ioexception e) { , -          try { , -        }
2100 , -          try { ," -          log.warn(""failed getting all descriptors""', 'e); ", -            htabledescriptor desc = this.tabledescriptors.get(s); , -        if (descriptormap != null) {
2101 , -            htabledescriptor desc = this.tabledescriptors.get(s); , -        } , -            if (desc != null) { , -          for(htabledescriptor desc: descriptormap.values()) {
2102 , -            if (desc != null) { , -        if (descriptormap != null) { , -              descriptors.add(desc); , -            if(!desc.gettablename().issystemtable()) {
2103 , -              descriptors.add(desc); , -          for(htabledescriptor desc: descriptormap.values()) { , -            } , -              descriptors.add(desc);
2104 , -            } , -            if(!desc.gettablename().issystemtable()) { , -          } catch (ioexception e) { , -            }
2105 , -          } catch (ioexception e) { , -              descriptors.add(desc); ," -            log.warn(""failed getting descriptor for "" + s', 'e); ", -          }
2106 ," -            log.warn(""failed getting descriptor for "" + s', 'e); ", -            } , -          } , -        }
2107 , -          } , -          } , -        } , -      } else {
2108 , -        } , -        } , -      } , -        for (tablename s: tablenamelist) {
2109 , -      } , -      } else { , - , -          try {
2110 , - , -        for (tablename s: tablenamelist) { , -      if (this.cphost != null) { , -            htabledescriptor desc = this.tabledescriptors.get(s);
2111 , -      if (this.cphost != null) { , -          try { , -        try { , -            if (desc != null) {
2112 , -        try { , -            htabledescriptor desc = this.tabledescriptors.get(s); , -          this.cphost.postgettabledescriptors(descriptors); , -              descriptors.add(desc);
2113 , -          this.cphost.postgettabledescriptors(descriptors); , -            if (desc != null) { , -        } catch (ioexception ioe) { , -            }
2114 , -        } catch (ioexception ioe) { , -              descriptors.add(desc); , -          throw new serviceexception(ioe); , -          } catch (ioexception e) {
2115 , -          throw new serviceexception(ioe); , -            } , -        } ," -            log.warn(""failed getting descriptor for "" + s', 'e);"
2116 , -        } , -          } catch (ioexception e) { , -      } , -          }
2117 , -      } ," -            log.warn(""failed getting descriptor for "" + s', 'e); ", -    } , -        }
2118 , -    } , -          } , - , -      }
2119 , - , -        } , -    gettabledescriptorsresponse.builder builder = gettabledescriptorsresponse.newbuilder(); , -
2120 , -    gettabledescriptorsresponse.builder builder = gettabledescriptorsresponse.newbuilder(); , -      } , -    for (htabledescriptor htd: descriptors) { , -      if (this.cphost != null) {
2121 , -    for (htabledescriptor htd: descriptors) { , - , -      builder.addtableschema(htd.convert()); , -        try {
2122 , -      builder.addtableschema(htd.convert()); , -      if (this.cphost != null) { , -    } , -          this.cphost.postgettabledescriptors(descriptors);
2123 , -    } , -        try { , -    return builder.build(); , -        } catch (ioexception ioe) {
2124 , -    return builder.build(); , -          this.cphost.postgettabledescriptors(descriptors); , -  } , -          throw new serviceexception(ioe);
2125 , -  } , -        } catch (ioexception ioe) { , - , -        }
2126 , - , -          throw new serviceexception(ioe); , -  /** , -      }
2127 , -  /** , -        } , -   * get list of userspace table names , -    }
2128 , -   * get list of userspace table names , -      } , -   * @param controller unused (set to null). , -
2129 , -   * @param controller unused (set to null). , -    } , -   * @param req gettablenamesrequest , -    gettabledescriptorsresponse.builder builder = gettabledescriptorsresponse.newbuilder();
2130 , -   * @param req gettablenamesrequest , - , -   * @return gettablenamesresponse , -    for (htabledescriptor htd: descriptors) {
2131 , -   * @return gettablenamesresponse , -    gettabledescriptorsresponse.builder builder = gettabledescriptorsresponse.newbuilder(); , -   * @throws serviceexception , -      builder.addtableschema(htd.convert());
2132 , -   * @throws serviceexception , -    for (htabledescriptor htd: descriptors) { , -   */ , -    }
2133 , -   */ , -      builder.addtableschema(htd.convert()); , -  @override , -    return builder.build();
2134 , -  @override , -    } , -  public gettablenamesresponse gettablenames( , -  }
2135 , -  public gettablenamesresponse gettablenames( , -    return builder.build(); ," -        rpccontroller controller', 'gettablenamesrequest req) throws serviceexception { ", -
2136 ," -        rpccontroller controller', 'gettablenamesrequest req) throws serviceexception { ", -  } , -    try { , -  /**
2137 , -    try { , - , -      collection<htabledescriptor> descriptors = this.tabledescriptors.getall().values(); , -   * get list of userspace table names
2138 , -      collection<htabledescriptor> descriptors = this.tabledescriptors.getall().values(); , -  /** , -      gettablenamesresponse.builder builder = gettablenamesresponse.newbuilder(); , -   * @param controller unused (set to null).
2139 , -      gettablenamesresponse.builder builder = gettablenamesresponse.newbuilder(); , -   * get list of userspace table names , -      for (htabledescriptor descriptor: descriptors) { , -   * @param req gettablenamesrequest
2140 , -      for (htabledescriptor descriptor: descriptors) { , -   * @param controller unused (set to null). , -        if (descriptor.gettablename().issystemtable()) { , -   * @return gettablenamesresponse
2141 , -        if (descriptor.gettablename().issystemtable()) { , -   * @param req gettablenamesrequest , -          continue; , -   * @throws serviceexception
2142 , -          continue; , -   * @return gettablenamesresponse , -        } , -   */
2143 , -        } , -   * @throws serviceexception , -        builder.addtablenames(protobufutil.toprototablename(descriptor.gettablename())); , -  @override
2144 , -        builder.addtablenames(protobufutil.toprototablename(descriptor.gettablename())); , -   */ , -      } , -  public gettablenamesresponse gettablenames(
2145 , -      } , -  @override , -      return builder.build(); ," -        rpccontroller controller', 'gettablenamesrequest req) throws serviceexception {"
2146 , -      return builder.build(); , -  public gettablenamesresponse gettablenames( , -    } catch (ioexception e) { , -    try {
2147 , -    } catch (ioexception e) { ," -        rpccontroller controller', 'gettablenamesrequest req) throws serviceexception { ", -      throw new serviceexception(e); , -      collection<htabledescriptor> descriptors = this.tabledescriptors.getall().values();
2148 , -      throw new serviceexception(e); , -    try { , -    } , -      gettablenamesresponse.builder builder = gettablenamesresponse.newbuilder();
2149 , -    } , -      collection<htabledescriptor> descriptors = this.tabledescriptors.getall().values(); , -  } , -      for (htabledescriptor descriptor: descriptors) {
2150 , -  } , -      gettablenamesresponse.builder builder = gettablenamesresponse.newbuilder(); , - , -        if (descriptor.gettablename().issystemtable()) {
2151 , - , -      for (htabledescriptor descriptor: descriptors) { , /** , -          continue;
2152 , /** , -        if (descriptor.gettablename().issystemtable()) { , * compute the average load across all region servers. , -        }
2153 , * compute the average load across all region servers. , -          continue; ," * currently', 'this uses a very naive computation - just uses the number of ", -        builder.addtablenames(protobufutil.toprototablename(descriptor.gettablename()));
2154 ," * currently', 'this uses a very naive computation - just uses the number of ", -        } ," @@ -2761', '42 +1618', '6 @@ masterservices', 'server { ", -      }
2155 ," @@ -2761', '42 +1618', '6 @@ masterservices', 'server { ", -        builder.addtablenames(protobufutil.toprototablename(descriptor.gettablename())); , return regionstates.getaverageload(); , -      return builder.build();
2156 , return regionstates.getaverageload(); , -      } , } , -    } catch (ioexception e) {
2157 , } , -      return builder.build(); ,  , -      throw new serviceexception(e);
2158 ,  , -    } catch (ioexception e) { , -  /** , -    }
2159 , -  /** , -      throw new serviceexception(e); ," [""-   * offline specified region from master's in-memory state. it will not attempt to""] ", -  }
2160 ," [""-   * offline specified region from master's in-memory state. it will not attempt to""] ", -    } , -   * reassign the region as in unassign. , -
2161 , -   * reassign the region as in unassign. , -  } , -   * , /**
2162 , -   * , - , -   * this is a special method that should be used by experts or hbck. , * compute the average load across all region servers.
2163 , -   * this is a special method that should be used by experts or hbck. , /** , -   * ," * currently', 'this uses a very naive computation - just uses the number of"
2164 , -   * , * compute the average load across all region servers. , -   */ ," @@ -2761', '42 +1618', '6 @@ masterservices', 'server {"
2165 , -   */ ," * currently', 'this uses a very naive computation - just uses the number of ", -  @override , return regionstates.getaverageload();
2166 , -  @override ," @@ -2761', '42 +1618', '6 @@ masterservices', 'server { "," -  public offlineregionresponse offlineregion(rpccontroller controller', 'offlineregionrequest request) ", }
2167 ," -  public offlineregionresponse offlineregion(rpccontroller controller', 'offlineregionrequest request) ", return regionstates.getaverageload(); , -  throws serviceexception { , 
2168 , -  throws serviceexception { , } , -    final byte [] regionname = request.getregion().getvalue().tobytearray(); , -  /**
2169 , -    final byte [] regionname = request.getregion().getvalue().tobytearray(); ,  , -    regionspecifiertype type = request.getregion().gettype(); ," [""-   * offline specified region from master's in-memory state. it will not attempt to""]"
2170 , -    regionspecifiertype type = request.getregion().gettype(); , -  /** , -    if (type != regionspecifiertype.region_name) { , -   * reassign the region as in unassign.
2171 , -    if (type != regionspecifiertype.region_name) { ," [""-   * offline specified region from master's in-memory state. it will not attempt to""] "," -      log.warn(""moveregion specifier type: expected: "" + regionspecifiertype.region_name ", -   *
2172 ," -      log.warn(""moveregion specifier type: expected: "" + regionspecifiertype.region_name ", -   * reassign the region as in unassign. ," -        + "" actual: "" + type); ", -   * this is a special method that should be used by experts or hbck.
2173 ," -        + "" actual: "" + type); ", -   * , -    } , -   *
2174 , -    } , -   * this is a special method that should be used by experts or hbck. , - , -   */
2175 , - , -   * , -    try { , -  @override
2176 , -    try { , -   */ ," -      pair<hregioninfo', 'servername> pair = "," -  public offlineregionresponse offlineregion(rpccontroller controller', 'offlineregionrequest request)"
2177 ," -      pair<hregioninfo', 'servername> pair = ", -  @override ," -        metareader.getregion(this.catalogtracker', 'regionname); ", -  throws serviceexception {
2178 ," -        metareader.getregion(this.catalogtracker', 'regionname); "," -  public offlineregionresponse offlineregion(rpccontroller controller', 'offlineregionrequest request) ", -      if (pair == null) throw new unknownregionexception(bytes.tostringbinary(regionname)); , -    final byte [] regionname = request.getregion().getvalue().tobytearray();
2179 , -      if (pair == null) throw new unknownregionexception(bytes.tostringbinary(regionname)); , -  throws serviceexception { , -      hregioninfo hri = pair.getfirst(); , -    regionspecifiertype type = request.getregion().gettype();
2180 , -      hregioninfo hri = pair.getfirst(); , -    final byte [] regionname = request.getregion().getvalue().tobytearray(); , -      if (cphost != null) { , -    if (type != regionspecifiertype.region_name) {
2181 , -      if (cphost != null) { , -    regionspecifiertype type = request.getregion().gettype(); , -        cphost.preregionoffline(hri); ," -      log.warn(""moveregion specifier type: expected: "" + regionspecifiertype.region_name"
2182 , -        cphost.preregionoffline(hri); , -    if (type != regionspecifiertype.region_name) { , -      } ," -        + "" actual: "" + type);"
2183 , -      } ," -      log.warn(""moveregion specifier type: expected: "" + regionspecifiertype.region_name "," -      log.info(getclientidauditprefix() + "" offline "" + hri.getregionnameasstring()); ", -    }
2184 ," -      log.info(getclientidauditprefix() + "" offline "" + hri.getregionnameasstring()); "," -        + "" actual: "" + type); ", -      this.assignmentmanager.regionoffline(hri); , -
2185 , -      this.assignmentmanager.regionoffline(hri); , -    } , -      if (cphost != null) { , -    try {
2186 , -      if (cphost != null) { , - , -        cphost.postregionoffline(hri); ," -      pair<hregioninfo', 'servername> pair ="
2187 , -        cphost.postregionoffline(hri); , -    try { , -      } ," -        metareader.getregion(this.catalogtracker', 'regionname);"
2188 , -      } ," -      pair<hregioninfo', 'servername> pair = ", -    } catch (ioexception ioe) { , -      if (pair == null) throw new unknownregionexception(bytes.tostringbinary(regionname));
2189 , -    } catch (ioexception ioe) { ," -        metareader.getregion(this.catalogtracker', 'regionname); ", -      throw new serviceexception(ioe); , -      hregioninfo hri = pair.getfirst();
2190 , -      throw new serviceexception(ioe); , -      if (pair == null) throw new unknownregionexception(bytes.tostringbinary(regionname)); , -    } , -      if (cphost != null) {
2191 , -    } , -      hregioninfo hri = pair.getfirst(); , -    return offlineregionresponse.newbuilder().build(); , -        cphost.preregionoffline(hri);
2192 , -    return offlineregionresponse.newbuilder().build(); , -      if (cphost != null) { , -  } , -      }
2193 , -  } , -        cphost.preregionoffline(hri); , - ," -      log.info(getclientidauditprefix() + "" offline "" + hri.getregionnameasstring());"
2194 , - , -      } , @override , -      this.assignmentmanager.regionoffline(hri);
2195 , @override ," -      log.info(getclientidauditprefix() + "" offline "" + hri.getregionnameasstring()); ", public boolean registerservice(service instance) { , -      if (cphost != null) {
2196 , public boolean registerservice(service instance) { , -      this.assignmentmanager.regionoffline(hri); , /* , -        cphost.postregionoffline(hri);
2197 , /* , -      if (cphost != null) { ," @@ -2817', '59 +1638', '6 @@ masterservices', 'server { ", -      }
2198 ," @@ -2817', '59 +1638', '6 @@ masterservices', 'server { ", -        cphost.postregionoffline(hri); , return true; , -    } catch (ioexception ioe) {
2199 , return true; , -      } , } , -      throw new serviceexception(ioe);
2200 , } , -    } catch (ioexception ioe) { ,  , -    }
2201 ,  , -      throw new serviceexception(ioe); , -  @override , -    return offlineregionresponse.newbuilder().build();
2202 , -  @override , -    } , -  public clientprotos.coprocessorserviceresponse execmasterservice(final rpccontroller controller , -  }
2203 , -  public clientprotos.coprocessorserviceresponse execmasterservice(final rpccontroller controller , -    return offlineregionresponse.newbuilder().build(); , -      final clientprotos.coprocessorservicerequest request) throws serviceexception { , -
2204 , -      final clientprotos.coprocessorservicerequest request) throws serviceexception { , -  } , -    try { , @override
2205 , -    try { , - , -      serverrpccontroller execcontroller = new serverrpccontroller(); , public boolean registerservice(service instance) {
2206 , -      serverrpccontroller execcontroller = new serverrpccontroller(); , @override , - , /*
2207 , - , public boolean registerservice(service instance) { , -      clientprotos.coprocessorservicecall call = request.getcall(); ," @@ -2817', '59 +1638', '6 @@ masterservices', 'server {"
2208 , -      clientprotos.coprocessorservicecall call = request.getcall(); , /* , -      string servicename = call.getservicename(); , return true;
2209 , -      string servicename = call.getservicename(); ," @@ -2817', '59 +1638', '6 @@ masterservices', 'server { ", -      string methodname = call.getmethodname(); , }
2210 , -      string methodname = call.getmethodname(); , return true; , -      if (!coprocessorservicehandlers.containskey(servicename)) { , 
2211 , -      if (!coprocessorservicehandlers.containskey(servicename)) { , } , -        throw new unknownprotocolexception(null , -  @override
2212 , -        throw new unknownprotocolexception(null ,  ," -            ""no registered master coprocessor service found for name ""+servicename); ", -  public clientprotos.coprocessorserviceresponse execmasterservice(final rpccontroller controller
2213 ," -            ""no registered master coprocessor service found for name ""+servicename); ", -  @override , -      } , -      final clientprotos.coprocessorservicerequest request) throws serviceexception {
2214 , -      } , -  public clientprotos.coprocessorserviceresponse execmasterservice(final rpccontroller controller , - , -    try {
2215 , - , -      final clientprotos.coprocessorservicerequest request) throws serviceexception { , -      service service = coprocessorservicehandlers.get(servicename); , -      serverrpccontroller execcontroller = new serverrpccontroller();
2216 , -      service service = coprocessorservicehandlers.get(servicename); , -    try { , -      descriptors.servicedescriptor servicedesc = service.getdescriptorfortype(); , -
2217 , -      descriptors.servicedescriptor servicedesc = service.getdescriptorfortype(); , -      serverrpccontroller execcontroller = new serverrpccontroller(); , -      descriptors.methoddescriptor methoddesc = servicedesc.findmethodbyname(methodname); , -      clientprotos.coprocessorservicecall call = request.getcall();
2218 , -      descriptors.methoddescriptor methoddesc = servicedesc.findmethodbyname(methodname); , - , -      if (methoddesc == null) { , -      string servicename = call.getservicename();
2219 , -      if (methoddesc == null) { , -      clientprotos.coprocessorservicecall call = request.getcall(); , -        throw new unknownprotocolexception(service.getclass() , -      string methodname = call.getmethodname();
2220 , -        throw new unknownprotocolexception(service.getclass() , -      string servicename = call.getservicename(); ," -            ""unknown method ""+methodname+"" called on master service ""+servicename); ", -      if (!coprocessorservicehandlers.containskey(servicename)) {
2221 ," -            ""unknown method ""+methodname+"" called on master service ""+servicename); ", -      string methodname = call.getmethodname(); , -      } , -        throw new unknownprotocolexception(null
2222 , -      } , -      if (!coprocessorservicehandlers.containskey(servicename)) { , - ," -            ""no registered master coprocessor service found for name ""+servicename);"
2223 , - , -        throw new unknownprotocolexception(null , -      //invoke the method , -      }
2224 , -      //invoke the method ," -            ""no registered master coprocessor service found for name ""+servicename); ", -      message execrequest = service.getrequestprototype(methoddesc).newbuilderfortype() , -
2225 , -      message execrequest = service.getrequestprototype(methoddesc).newbuilderfortype() , -      } , -          .mergefrom(call.getrequest()).build(); , -      service service = coprocessorservicehandlers.get(servicename);
2226 , -          .mergefrom(call.getrequest()).build(); , - , -      final message.builder responsebuilder = , -      descriptors.servicedescriptor servicedesc = service.getdescriptorfortype();
2227 , -      final message.builder responsebuilder = , -      service service = coprocessorservicehandlers.get(servicename); , -          service.getresponseprototype(methoddesc).newbuilderfortype(); , -      descriptors.methoddescriptor methoddesc = servicedesc.findmethodbyname(methodname);
2228 , -          service.getresponseprototype(methoddesc).newbuilderfortype(); , -      descriptors.servicedescriptor servicedesc = service.getdescriptorfortype(); ," -      service.callmethod(methoddesc', 'execcontroller', 'execrequest', 'new rpccallback<message>() { ", -      if (methoddesc == null) {
2229 ," -      service.callmethod(methoddesc', 'execcontroller', 'execrequest', 'new rpccallback<message>() { ", -      descriptors.methoddescriptor methoddesc = servicedesc.findmethodbyname(methodname); , -        @override , -        throw new unknownprotocolexception(service.getclass()
2230 , -        @override , -      if (methoddesc == null) { , -        public void run(message message) { ," -            ""unknown method ""+methodname+"" called on master service ""+servicename);"
2231 , -        public void run(message message) { , -        throw new unknownprotocolexception(service.getclass() , -          if (message != null) { , -      }
2232 , -          if (message != null) { ," -            ""unknown method ""+methodname+"" called on master service ""+servicename); ", -            responsebuilder.mergefrom(message); , -
2233 , -            responsebuilder.mergefrom(message); , -      } , -          } , -      //invoke the method
2234 , -          } , - , -        } , -      message execrequest = service.getrequestprototype(methoddesc).newbuilderfortype()
2235 , -        } , -      //invoke the method , -      }); , -          .mergefrom(call.getrequest()).build();
2236 , -      }); , -      message execrequest = service.getrequestprototype(methoddesc).newbuilderfortype() , -      message execresult = responsebuilder.build(); , -      final message.builder responsebuilder =
2237 , -      message execresult = responsebuilder.build(); , -          .mergefrom(call.getrequest()).build(); , - , -          service.getresponseprototype(methoddesc).newbuilderfortype();
2238 , - , -      final message.builder responsebuilder = , -      if (execcontroller.getfailedon() != null) { ," -      service.callmethod(methoddesc', 'execcontroller', 'execrequest', 'new rpccallback<message>() {"
2239 , -      if (execcontroller.getfailedon() != null) { , -          service.getresponseprototype(methoddesc).newbuilderfortype(); , -        throw execcontroller.getfailedon(); , -        @override
2240 , -        throw execcontroller.getfailedon(); ," -      service.callmethod(methoddesc', 'execcontroller', 'execrequest', 'new rpccallback<message>() { ", -      } , -        public void run(message message) {
2241 , -      } , -        @override , -      clientprotos.coprocessorserviceresponse.builder builder = , -          if (message != null) {
2242 , -      clientprotos.coprocessorserviceresponse.builder builder = , -        public void run(message message) { , -          clientprotos.coprocessorserviceresponse.newbuilder(); , -            responsebuilder.mergefrom(message);
2243 , -          clientprotos.coprocessorserviceresponse.newbuilder(); , -          if (message != null) { , -      builder.setregion(requestconverter.buildregionspecifier( , -          }
2244 , -      builder.setregion(requestconverter.buildregionspecifier( , -            responsebuilder.mergefrom(message); ," -          regionspecifiertype.region_name', 'hconstants.empty_byte_array)); ", -        }
2245 ," -          regionspecifiertype.region_name', 'hconstants.empty_byte_array)); ", -          } , -      builder.setvalue( , -      });
2246 , -      builder.setvalue( , -        } , -          builder.getvaluebuilder().setname(execresult.getclass().getname()) , -      message execresult = responsebuilder.build();
2247 , -          builder.getvaluebuilder().setname(execresult.getclass().getname()) , -      }); , -              .setvalue(execresult.tobytestring())); , -
2248 , -              .setvalue(execresult.tobytestring())); , -      message execresult = responsebuilder.build(); , -      return builder.build(); , -      if (execcontroller.getfailedon() != null) {
2249 , -      return builder.build(); , - , -    } catch (ioexception ie) { , -        throw execcontroller.getfailedon();
2250 , -    } catch (ioexception ie) { , -      if (execcontroller.getfailedon() != null) { , -      throw new serviceexception(ie); , -      }
2251 , -      throw new serviceexception(ie); , -        throw execcontroller.getfailedon(); , -    } , -      clientprotos.coprocessorserviceresponse.builder builder =
2252 , -    } , -      } , -  } , -          clientprotos.coprocessorserviceresponse.newbuilder();
2253 , -  } , -      clientprotos.coprocessorserviceresponse.builder builder = , - , -      builder.setregion(requestconverter.buildregionspecifier(
2254 , - , -          clientprotos.coprocessorserviceresponse.newbuilder(); , /** ," -          regionspecifiertype.region_name', 'hconstants.empty_byte_array));"
2255 , /** , -      builder.setregion(requestconverter.buildregionspecifier( , * utility for constructing an instance of the passed hmaster class. , -      builder.setvalue(
2256 , * utility for constructing an instance of the passed hmaster class. ," -          regionspecifiertype.region_name', 'hconstants.empty_byte_array)); ", * @param masterclass , -          builder.getvaluebuilder().setname(execresult.getclass().getname())
2257 , * @param masterclass , -      builder.setvalue( ," @@ -2915', '331 +1683', '10 @@ masterservices', 'server { ", -              .setvalue(execresult.tobytestring()));
2258 ," @@ -2915', '331 +1683', '10 @@ masterservices', 'server { ", -          builder.getvaluebuilder().setname(execresult.getclass().getname()) , return this.snapshotmanager; , -      return builder.build();
2259 , return this.snapshotmanager; , -              .setvalue(execresult.tobytestring())); , } , -    } catch (ioexception ie) {
2260 , } , -      return builder.build(); ,  , -      throw new serviceexception(ie);
2261 ,  , -    } catch (ioexception ie) { , -  /** , -    }
2262 , -  /** , -      throw new serviceexception(ie); , -   * triggers an asynchronous attempt to take a snapshot. , -  }
2263 , -   * triggers an asynchronous attempt to take a snapshot. , -    } , -   * {@inheritdoc} , -
2264 , -   * {@inheritdoc} , -  } , -   */ , /**
2265 , -   */ , - , -  @override , * utility for constructing an instance of the passed hmaster class.
2266 , -  @override , /** ," -  public snapshotresponse snapshot(rpccontroller controller', 'snapshotrequest request) ", * @param masterclass
2267 ," -  public snapshotresponse snapshot(rpccontroller controller', 'snapshotrequest request) ", * utility for constructing an instance of the passed hmaster class. , -      throws serviceexception { ," @@ -2915', '331 +1683', '10 @@ masterservices', 'server {"
2268 , -      throws serviceexception { , * @param masterclass , -    try { , return this.snapshotmanager;
2269 , -    try { ," @@ -2915', '331 +1683', '10 @@ masterservices', 'server { ", -      this.snapshotmanager.checksnapshotsupport(); , }
2270 , -      this.snapshotmanager.checksnapshotsupport(); , return this.snapshotmanager; , -    } catch (unsupportedoperationexception e) { , 
2271 , -    } catch (unsupportedoperationexception e) { , } , -      throw new serviceexception(e); , -  /**
2272 , -      throw new serviceexception(e); ,  , -    } , -   * triggers an asynchronous attempt to take a snapshot.
2273 , -    } , -  /** , - , -   * {@inheritdoc}
2274 , - , -   * triggers an asynchronous attempt to take a snapshot. ," -    log.info(getclientidauditprefix() + "" snapshot request for:"" + ", -   */
2275 ," -    log.info(getclientidauditprefix() + "" snapshot request for:"" + ", -   * {@inheritdoc} , -        clientsnapshotdescriptionutils.tostring(request.getsnapshot())); , -  @override
2276 , -        clientsnapshotdescriptionutils.tostring(request.getsnapshot())); , -   */ , -    // get the snapshot information ," -  public snapshotresponse snapshot(rpccontroller controller', 'snapshotrequest request)"
2277 , -    // get the snapshot information , -  @override , -    snapshotdescription snapshot = snapshotdescriptionutils.validate(request.getsnapshot() , -      throws serviceexception {
2278 , -    snapshotdescription snapshot = snapshotdescriptionutils.validate(request.getsnapshot() ," -  public snapshotresponse snapshot(rpccontroller controller', 'snapshotrequest request) ", -      this.conf); , -    try {
2279 , -      this.conf); , -      throws serviceexception { , -    try { , -      this.snapshotmanager.checksnapshotsupport();
2280 , -    try { , -    try { , -      snapshotmanager.takesnapshot(snapshot); , -    } catch (unsupportedoperationexception e) {
2281 , -      snapshotmanager.takesnapshot(snapshot); , -      this.snapshotmanager.checksnapshotsupport(); , -    } catch (ioexception e) { , -      throw new serviceexception(e);
2282 , -    } catch (ioexception e) { , -    } catch (unsupportedoperationexception e) { , -      throw new serviceexception(e); , -    }
2283 , -      throw new serviceexception(e); , -      throw new serviceexception(e); , -    } , -
2284 , -    } , -    } , - ," -    log.info(getclientidauditprefix() + "" snapshot request for:"" +"
2285 , - , - , -    // send back the max amount of time the client should wait for the snapshot to complete , -        clientsnapshotdescriptionutils.tostring(request.getsnapshot()));
2286 , -    // send back the max amount of time the client should wait for the snapshot to complete ," -    log.info(getclientidauditprefix() + "" snapshot request for:"" + "," -    long waittime = snapshotdescriptionutils.getmaxmastertimeout(conf', 'snapshot.gettype() ", -    // get the snapshot information
2287 ," -    long waittime = snapshotdescriptionutils.getmaxmastertimeout(conf', 'snapshot.gettype() ", -        clientsnapshotdescriptionutils.tostring(request.getsnapshot())); , -      snapshotdescriptionutils.default_max_wait_time); , -    snapshotdescription snapshot = snapshotdescriptionutils.validate(request.getsnapshot()
2288 , -      snapshotdescriptionutils.default_max_wait_time); , -    // get the snapshot information , -    return snapshotresponse.newbuilder().setexpectedtimeout(waittime).build(); , -      this.conf);
2289 , -    return snapshotresponse.newbuilder().setexpectedtimeout(waittime).build(); , -    snapshotdescription snapshot = snapshotdescriptionutils.validate(request.getsnapshot() , -  } , -    try {
2290 , -  } , -      this.conf); , - , -      snapshotmanager.takesnapshot(snapshot);
2291 , - , -    try { , -  /** , -    } catch (ioexception e) {
2292 , -  /** , -      snapshotmanager.takesnapshot(snapshot); , -   * list the currently available/stored snapshots. any in-progress snapshots are ignored , -      throw new serviceexception(e);
2293 , -   * list the currently available/stored snapshots. any in-progress snapshots are ignored , -    } catch (ioexception e) { , -   */ , -    }
2294 , -   */ , -      throw new serviceexception(e); , -  @override , -
2295 , -  @override , -    } , -  public getcompletedsnapshotsresponse getcompletedsnapshots(rpccontroller controller , -    // send back the max amount of time the client should wait for the snapshot to complete
2296 , -  public getcompletedsnapshotsresponse getcompletedsnapshots(rpccontroller controller , - , -      getcompletedsnapshotsrequest request) throws serviceexception { ," -    long waittime = snapshotdescriptionutils.getmaxmastertimeout(conf', 'snapshot.gettype()"
2297 , -      getcompletedsnapshotsrequest request) throws serviceexception { , -    // send back the max amount of time the client should wait for the snapshot to complete , -    try { , -      snapshotdescriptionutils.default_max_wait_time);
2298 , -    try { ," -    long waittime = snapshotdescriptionutils.getmaxmastertimeout(conf', 'snapshot.gettype() ", -      getcompletedsnapshotsresponse.builder builder = getcompletedsnapshotsresponse.newbuilder(); , -    return snapshotresponse.newbuilder().setexpectedtimeout(waittime).build();
2299 , -      getcompletedsnapshotsresponse.builder builder = getcompletedsnapshotsresponse.newbuilder(); , -      snapshotdescriptionutils.default_max_wait_time); , -      list<snapshotdescription> snapshots = snapshotmanager.getcompletedsnapshots(); , -  }
2300 , -      list<snapshotdescription> snapshots = snapshotmanager.getcompletedsnapshots(); , -    return snapshotresponse.newbuilder().setexpectedtimeout(waittime).build(); , - , -
2301 , - , -  } , -      // convert to protobuf , -  /**
2302 , -      // convert to protobuf , - , -      for (snapshotdescription snapshot : snapshots) { , -   * list the currently available/stored snapshots. any in-progress snapshots are ignored
2303 , -      for (snapshotdescription snapshot : snapshots) { , -  /** , -        builder.addsnapshots(snapshot); , -   */
2304 , -        builder.addsnapshots(snapshot); , -   * list the currently available/stored snapshots. any in-progress snapshots are ignored , -      } , -  @override
2305 , -      } , -   */ , -      return builder.build(); , -  public getcompletedsnapshotsresponse getcompletedsnapshots(rpccontroller controller
2306 , -      return builder.build(); , -  @override , -    } catch (ioexception e) { , -      getcompletedsnapshotsrequest request) throws serviceexception {
2307 , -    } catch (ioexception e) { , -  public getcompletedsnapshotsresponse getcompletedsnapshots(rpccontroller controller , -      throw new serviceexception(e); , -    try {
2308 , -      throw new serviceexception(e); , -      getcompletedsnapshotsrequest request) throws serviceexception { , -    } , -      getcompletedsnapshotsresponse.builder builder = getcompletedsnapshotsresponse.newbuilder();
2309 , -    } , -    try { , -  } , -      list<snapshotdescription> snapshots = snapshotmanager.getcompletedsnapshots();
2310 , -  } , -      getcompletedsnapshotsresponse.builder builder = getcompletedsnapshotsresponse.newbuilder(); , - , -
2311 , - , -      list<snapshotdescription> snapshots = snapshotmanager.getcompletedsnapshots(); , -  /** , -      // convert to protobuf
2312 , -  /** , - , -   * execute delete snapshot operation. , -      for (snapshotdescription snapshot : snapshots) {
2313 , -   * execute delete snapshot operation. , -      // convert to protobuf , -   * @return deletesnapshotresponse (a protobuf wrapped void) if the snapshot existed and was , -        builder.addsnapshots(snapshot);
2314 , -   * @return deletesnapshotresponse (a protobuf wrapped void) if the snapshot existed and was , -      for (snapshotdescription snapshot : snapshots) { , -   *    deleted properly. , -      }
2315 , -   *    deleted properly. , -        builder.addsnapshots(snapshot); , -   * @throws serviceexception wrapping snapshotdoesnotexistexception if specified snapshot did not , -      return builder.build();
2316 , -   * @throws serviceexception wrapping snapshotdoesnotexistexception if specified snapshot did not , -      } , -   *    exist. , -    } catch (ioexception e) {
2317 , -   *    exist. , -      return builder.build(); , -   */ , -      throw new serviceexception(e);
2318 , -   */ , -    } catch (ioexception e) { , -  @override , -    }
2319 , -  @override , -      throw new serviceexception(e); , -  public deletesnapshotresponse deletesnapshot(rpccontroller controller , -  }
2320 , -  public deletesnapshotresponse deletesnapshot(rpccontroller controller , -    } , -      deletesnapshotrequest request) throws serviceexception { , -
2321 , -      deletesnapshotrequest request) throws serviceexception { , -  } , -    try { , -  /**
2322 , -    try { , - , -      this.snapshotmanager.checksnapshotsupport(); , -   * execute delete snapshot operation.
2323 , -      this.snapshotmanager.checksnapshotsupport(); , -  /** , -    } catch (unsupportedoperationexception e) { , -   * @return deletesnapshotresponse (a protobuf wrapped void) if the snapshot existed and was
2324 , -    } catch (unsupportedoperationexception e) { , -   * execute delete snapshot operation. , -      throw new serviceexception(e); , -   *    deleted properly.
2325 , -      throw new serviceexception(e); , -   * @return deletesnapshotresponse (a protobuf wrapped void) if the snapshot existed and was , -    } , -   * @throws serviceexception wrapping snapshotdoesnotexistexception if specified snapshot did not
2326 , -    } , -   *    deleted properly. , - , -   *    exist.
2327 , - , -   * @throws serviceexception wrapping snapshotdoesnotexistexception if specified snapshot did not , -    try { , -   */
2328 , -    try { , -   *    exist. ," -      log.info(getclientidauditprefix() + "" delete "" + request.getsnapshot()); ", -  @override
2329 ," -      log.info(getclientidauditprefix() + "" delete "" + request.getsnapshot()); ", -   */ , -      snapshotmanager.deletesnapshot(request.getsnapshot()); , -  public deletesnapshotresponse deletesnapshot(rpccontroller controller
2330 , -      snapshotmanager.deletesnapshot(request.getsnapshot()); , -  @override , -      return deletesnapshotresponse.newbuilder().build(); , -      deletesnapshotrequest request) throws serviceexception {
2331 , -      return deletesnapshotresponse.newbuilder().build(); , -  public deletesnapshotresponse deletesnapshot(rpccontroller controller , -    } catch (ioexception e) { , -    try {
2332 , -    } catch (ioexception e) { , -      deletesnapshotrequest request) throws serviceexception { , -      throw new serviceexception(e); , -      this.snapshotmanager.checksnapshotsupport();
2333 , -      throw new serviceexception(e); , -    try { , -    } , -    } catch (unsupportedoperationexception e) {
2334 , -    } , -      this.snapshotmanager.checksnapshotsupport(); , -  } , -      throw new serviceexception(e);
2335 , -  } , -    } catch (unsupportedoperationexception e) { , - , -    }
2336 , - , -      throw new serviceexception(e); , -  /** , -
2337 , -  /** , -    } , -   * checks if the specified snapshot is done. , -    try {
2338 , -   * checks if the specified snapshot is done. , - , -   * @return true if the snapshot is in file system ready to use ," -      log.info(getclientidauditprefix() + "" delete "" + request.getsnapshot());"
2339 , -   * @return true if the snapshot is in file system ready to use , -    try { , -   *   false if the snapshot is in the process of completing , -      snapshotmanager.deletesnapshot(request.getsnapshot());
2340 , -   *   false if the snapshot is in the process of completing ," -      log.info(getclientidauditprefix() + "" delete "" + request.getsnapshot()); "," -   * @throws serviceexception wrapping unknownsnapshotexception if invalid snapshot', 'or ", -      return deletesnapshotresponse.newbuilder().build();
2341 ," -   * @throws serviceexception wrapping unknownsnapshotexception if invalid snapshot', 'or ", -      snapshotmanager.deletesnapshot(request.getsnapshot()); , -   *  a wrapped hbasesnapshotexception with progress failure reason. , -    } catch (ioexception e) {
2342 , -   *  a wrapped hbasesnapshotexception with progress failure reason. , -      return deletesnapshotresponse.newbuilder().build(); , -   */ , -      throw new serviceexception(e);
2343 , -   */ , -    } catch (ioexception e) { , -  @override , -    }
2344 , -  @override , -      throw new serviceexception(e); , -  public issnapshotdoneresponse issnapshotdone(rpccontroller controller , -  }
2345 , -  public issnapshotdoneresponse issnapshotdone(rpccontroller controller , -    } , -      issnapshotdonerequest request) throws serviceexception { , -
2346 , -      issnapshotdonerequest request) throws serviceexception { , -  } ," -    log.debug(""checking to see if snapshot from request:"" + ", -  /**
2347 ," -    log.debug(""checking to see if snapshot from request:"" + ", - ," -        clientsnapshotdescriptionutils.tostring(request.getsnapshot()) + "" is done""); ", -   * checks if the specified snapshot is done.
2348 ," -        clientsnapshotdescriptionutils.tostring(request.getsnapshot()) + "" is done""); ", -  /** , -    try { , -   * @return true if the snapshot is in file system ready to use
2349 , -    try { , -   * checks if the specified snapshot is done. , -      issnapshotdoneresponse.builder builder = issnapshotdoneresponse.newbuilder(); , -   *   false if the snapshot is in the process of completing
2350 , -      issnapshotdoneresponse.builder builder = issnapshotdoneresponse.newbuilder(); , -   * @return true if the snapshot is in file system ready to use , -      boolean done = snapshotmanager.issnapshotdone(request.getsnapshot()); ," -   * @throws serviceexception wrapping unknownsnapshotexception if invalid snapshot', 'or"
2351 , -      boolean done = snapshotmanager.issnapshotdone(request.getsnapshot()); , -   *   false if the snapshot is in the process of completing , -      builder.setdone(done); , -   *  a wrapped hbasesnapshotexception with progress failure reason.
2352 , -      builder.setdone(done); ," -   * @throws serviceexception wrapping unknownsnapshotexception if invalid snapshot', 'or ", -      return builder.build(); , -   */
2353 , -      return builder.build(); , -   *  a wrapped hbasesnapshotexception with progress failure reason. , -    } catch (ioexception e) { , -  @override
2354 , -    } catch (ioexception e) { , -   */ , -      throw new serviceexception(e); , -  public issnapshotdoneresponse issnapshotdone(rpccontroller controller
2355 , -      throw new serviceexception(e); , -  @override , -    } , -      issnapshotdonerequest request) throws serviceexception {
2356 , -    } , -  public issnapshotdoneresponse issnapshotdone(rpccontroller controller , -  } ," -    log.debug(""checking to see if snapshot from request:"" +"
2357 , -  } , -      issnapshotdonerequest request) throws serviceexception { , - ," -        clientsnapshotdescriptionutils.tostring(request.getsnapshot()) + "" is done"");"
2358 , - ," -    log.debug(""checking to see if snapshot from request:"" + ", -  /** , -    try {
2359 , -  /** ," -        clientsnapshotdescriptionutils.tostring(request.getsnapshot()) + "" is done""); ", -   * execute restore/clone snapshot operation. , -      issnapshotdoneresponse.builder builder = issnapshotdoneresponse.newbuilder();
2360 , -   * execute restore/clone snapshot operation. , -    try { , -   * , -      boolean done = snapshotmanager.issnapshotdone(request.getsnapshot());
2361 , -   * , -      issnapshotdoneresponse.builder builder = issnapshotdoneresponse.newbuilder(); ," -   * <p>if the specified table exists a ""restore"" is executed', 'replacing the table ", -      builder.setdone(done);
2362 ," -   * <p>if the specified table exists a ""restore"" is executed', 'replacing the table ", -      boolean done = snapshotmanager.issnapshotdone(request.getsnapshot()); , -   * schema and directory data with the content of the snapshot. , -      return builder.build();
2363 , -   * schema and directory data with the content of the snapshot. , -      builder.setdone(done); ," -   * the table must be disabled', 'or a unsupportedoperationexception will be thrown. ", -    } catch (ioexception e) {
2364 ," -   * the table must be disabled', 'or a unsupportedoperationexception will be thrown. ", -      return builder.build(); , -   * , -      throw new serviceexception(e);
2365 , -   * , -    } catch (ioexception e) { ," -   * <p>if the table doesn\'t exist a ""clone"" is executed', 'a new table is created ", -    }
2366 ," -   * <p>if the table doesn\'t exist a ""clone"" is executed', 'a new table is created ", -      throw new serviceexception(e); ," -   * using the schema at the time of the snapshot', 'and the content of the snapshot. ", -  }
2367 ," -   * using the schema at the time of the snapshot', 'and the content of the snapshot. ", -    } , -   * , -
2368 , -   * , -  } , -   * <p>the restore/clone operation does not require copying hfiles. since hfiles , -  /**
2369 , -   * <p>the restore/clone operation does not require copying hfiles. since hfiles , - , -   * are immutable the table can point to and use the same files as the original one. , -   * execute restore/clone snapshot operation.
2370 , -   * are immutable the table can point to and use the same files as the original one. , -  /** , -   */ , -   *
2371 , -   */ , -   * execute restore/clone snapshot operation. , -  @override ," -   * <p>if the specified table exists a ""restore"" is executed', 'replacing the table"
2372 , -  @override , -   * , -  public restoresnapshotresponse restoresnapshot(rpccontroller controller , -   * schema and directory data with the content of the snapshot.
2373 , -  public restoresnapshotresponse restoresnapshot(rpccontroller controller ," -   * <p>if the specified table exists a ""restore"" is executed', 'replacing the table ", -      restoresnapshotrequest request) throws serviceexception { ," -   * the table must be disabled', 'or a unsupportedoperationexception will be thrown."
2374 , -      restoresnapshotrequest request) throws serviceexception { , -   * schema and directory data with the content of the snapshot. , -    try { , -   *
2375 , -    try { ," -   * the table must be disabled', 'or a unsupportedoperationexception will be thrown. ", -      this.snapshotmanager.checksnapshotsupport(); ," -   * <p>if the table doesn\'t exist a ""clone"" is executed', 'a new table is created"
2376 , -      this.snapshotmanager.checksnapshotsupport(); , -   * , -    } catch (unsupportedoperationexception e) { ," -   * using the schema at the time of the snapshot', 'and the content of the snapshot."
2377 , -    } catch (unsupportedoperationexception e) { ," -   * <p>if the table doesn\'t exist a ""clone"" is executed', 'a new table is created ", -      throw new serviceexception(e); , -   *
2378 , -      throw new serviceexception(e); ," -   * using the schema at the time of the snapshot', 'and the content of the snapshot. ", -    } , -   * <p>the restore/clone operation does not require copying hfiles. since hfiles
2379 , -    } , -   * , - , -   * are immutable the table can point to and use the same files as the original one.
2380 , - , -   * <p>the restore/clone operation does not require copying hfiles. since hfiles , -    // ensure namespace exists , -   */
2381 , -    // ensure namespace exists , -   * are immutable the table can point to and use the same files as the original one. , -    try { , -  @override
2382 , -    try { , -   */ , -      tablename dsttable = tablename.valueof(request.getsnapshot().gettable()); , -  public restoresnapshotresponse restoresnapshot(rpccontroller controller
2383 , -      tablename dsttable = tablename.valueof(request.getsnapshot().gettable()); , -  @override , -      getnamespacedescriptor(dsttable.getnamespaceasstring()); , -      restoresnapshotrequest request) throws serviceexception {
2384 , -      getnamespacedescriptor(dsttable.getnamespaceasstring()); , -  public restoresnapshotresponse restoresnapshot(rpccontroller controller , -    } catch (ioexception ioe) { , -    try {
2385 , -    } catch (ioexception ioe) { , -      restoresnapshotrequest request) throws serviceexception { , -      throw new serviceexception(ioe); , -      this.snapshotmanager.checksnapshotsupport();
2386 , -      throw new serviceexception(ioe); , -    try { , -    } , -    } catch (unsupportedoperationexception e) {
2387 , -    } , -      this.snapshotmanager.checksnapshotsupport(); , - , -      throw new serviceexception(e);
2388 , - , -    } catch (unsupportedoperationexception e) { , -    try { , -    }
2389 , -    try { , -      throw new serviceexception(e); , -      snapshotdescription reqsnapshot = request.getsnapshot(); , -
2390 , -      snapshotdescription reqsnapshot = request.getsnapshot(); , -    } , -      snapshotmanager.restoresnapshot(reqsnapshot); , -    // ensure namespace exists
2391 , -      snapshotmanager.restoresnapshot(reqsnapshot); , - , -      return restoresnapshotresponse.newbuilder().build(); , -    try {
2392 , -      return restoresnapshotresponse.newbuilder().build(); , -    // ensure namespace exists , -    } catch (ioexception e) { , -      tablename dsttable = tablename.valueof(request.getsnapshot().gettable());
2393 , -    } catch (ioexception e) { , -    try { , -      throw new serviceexception(e); , -      getnamespacedescriptor(dsttable.getnamespaceasstring());
2394 , -      throw new serviceexception(e); , -      tablename dsttable = tablename.valueof(request.getsnapshot().gettable()); , -    } , -    } catch (ioexception ioe) {
2395 , -    } , -      getnamespacedescriptor(dsttable.getnamespaceasstring()); , -  } , -      throw new serviceexception(ioe);
2396 , -  } , -    } catch (ioexception ioe) { , - , -    }
2397 , - , -      throw new serviceexception(ioe); , -  /** , -
2398 , -  /** , -    } , -   * returns the status of the requested snapshot restore/clone operation. , -    try {
2399 , -   * returns the status of the requested snapshot restore/clone operation. , - ," -   * this method is not exposed to the user', 'it is just used internally by hbaseadmin ", -      snapshotdescription reqsnapshot = request.getsnapshot();
2400 ," -   * this method is not exposed to the user', 'it is just used internally by hbaseadmin ", -    try { , -   * to verify if the restore is completed. , -      snapshotmanager.restoresnapshot(reqsnapshot);
2401 , -   * to verify if the restore is completed. , -      snapshotdescription reqsnapshot = request.getsnapshot(); , -   * , -      return restoresnapshotresponse.newbuilder().build();
2402 , -   * , -      snapshotmanager.restoresnapshot(reqsnapshot); ," -   * no exceptions are thrown if the restore is not running', 'the result will be ""done"". ", -    } catch (ioexception e) {
2403 ," -   * no exceptions are thrown if the restore is not running', 'the result will be ""done"". ", -      return restoresnapshotresponse.newbuilder().build(); , -   * , -      throw new serviceexception(e);
2404 , -   * , -    } catch (ioexception e) { , -   * @return done <tt>true</tt> if the restore/clone operation is completed. , -    }
2405 , -   * @return done <tt>true</tt> if the restore/clone operation is completed. , -      throw new serviceexception(e); , -   * @throws serviceexception if the operation failed. , -  }
2406 , -   * @throws serviceexception if the operation failed. , -    } , -   */ , -
2407 , -   */ , -  } , -  @override , -  /**
2408 , -  @override , - , -  public isrestoresnapshotdoneresponse isrestoresnapshotdone(rpccontroller controller , -   * returns the status of the requested snapshot restore/clone operation.
2409 , -  public isrestoresnapshotdoneresponse isrestoresnapshotdone(rpccontroller controller , -  /** , -      isrestoresnapshotdonerequest request) throws serviceexception { ," -   * this method is not exposed to the user', 'it is just used internally by hbaseadmin"
2410 , -      isrestoresnapshotdonerequest request) throws serviceexception { , -   * returns the status of the requested snapshot restore/clone operation. , -    try { , -   * to verify if the restore is completed.
2411 , -    try { ," -   * this method is not exposed to the user', 'it is just used internally by hbaseadmin ", -      snapshotdescription snapshot = request.getsnapshot(); , -   *
2412 , -      snapshotdescription snapshot = request.getsnapshot(); , -   * to verify if the restore is completed. , -      isrestoresnapshotdoneresponse.builder builder = isrestoresnapshotdoneresponse.newbuilder(); ," -   * no exceptions are thrown if the restore is not running', 'the result will be ""done""."
2413 , -      isrestoresnapshotdoneresponse.builder builder = isrestoresnapshotdoneresponse.newbuilder(); , -   * , -      boolean done = snapshotmanager.isrestoredone(snapshot); , -   *
2414 , -      boolean done = snapshotmanager.isrestoredone(snapshot); ," -   * no exceptions are thrown if the restore is not running', 'the result will be ""done"". ", -      builder.setdone(done); , -   * @return done <tt>true</tt> if the restore/clone operation is completed.
2415 , -      builder.setdone(done); , -   * , -      return builder.build(); , -   * @throws serviceexception if the operation failed.
2416 , -      return builder.build(); , -   * @return done <tt>true</tt> if the restore/clone operation is completed. , -    } catch (ioexception e) { , -   */
2417 , -    } catch (ioexception e) { , -   * @throws serviceexception if the operation failed. , -      throw new serviceexception(e); , -  @override
2418 , -      throw new serviceexception(e); , -   */ , -    } , -  public isrestoresnapshotdoneresponse isrestoresnapshotdone(rpccontroller controller
2419 , -    } , -  @override , -  } , -      isrestoresnapshotdonerequest request) throws serviceexception {
2420 , -  } , -  public isrestoresnapshotdoneresponse isrestoresnapshotdone(rpccontroller controller , - , -    try {
2421 , - , -      isrestoresnapshotdonerequest request) throws serviceexception { , -  /** , -      snapshotdescription snapshot = request.getsnapshot();
2422 , -  /** , -    try { , -   * triggers an asynchronous attempt to run a distributed procedure. , -      isrestoresnapshotdoneresponse.builder builder = isrestoresnapshotdoneresponse.newbuilder();
2423 , -   * triggers an asynchronous attempt to run a distributed procedure. , -      snapshotdescription snapshot = request.getsnapshot(); , -   * {@inheritdoc} , -      boolean done = snapshotmanager.isrestoredone(snapshot);
2424 , -   * {@inheritdoc} , -      isrestoresnapshotdoneresponse.builder builder = isrestoresnapshotdoneresponse.newbuilder(); , -   */ , -      builder.setdone(done);
2425 , -   */ , -      boolean done = snapshotmanager.isrestoredone(snapshot); , -  @override , -      return builder.build();
2426 , -  @override , -      builder.setdone(done); , -  public execprocedureresponse execprocedure(rpccontroller controller , -    } catch (ioexception e) {
2427 , -  public execprocedureresponse execprocedure(rpccontroller controller , -      return builder.build(); , -      execprocedurerequest request) throws serviceexception { , -      throw new serviceexception(e);
2428 , -      execprocedurerequest request) throws serviceexception { , -    } catch (ioexception e) { , -    proceduredescription desc = request.getprocedure(); , -    }
2429 , -    proceduredescription desc = request.getprocedure(); , -      throw new serviceexception(e); , -    masterproceduremanager mpm = this.mpmhost.getproceduremanager(desc , -  }
2430 , -    masterproceduremanager mpm = this.mpmhost.getproceduremanager(desc , -    } , -        .getsignature()); , -
2431 , -        .getsignature()); , -  } , -    if (mpm == null) { , -  /**
2432 , -    if (mpm == null) { , - ," -      throw new serviceexception(""the procedure is not registered: "" ", -   * triggers an asynchronous attempt to run a distributed procedure.
2433 ," -      throw new serviceexception(""the procedure is not registered: "" ", -  /** , -          + desc.getsignature()); , -   * {@inheritdoc}
2434 , -          + desc.getsignature()); , -   * triggers an asynchronous attempt to run a distributed procedure. , -    } , -   */
2435 , -    } , -   * {@inheritdoc} , - , -  @override
2436 , - , -   */ ," -    log.info(getclientidauditprefix() + "" procedure request for: "" ", -  public execprocedureresponse execprocedure(rpccontroller controller
2437 ," -    log.info(getclientidauditprefix() + "" procedure request for: "" ", -  @override , -        + desc.getsignature()); , -      execprocedurerequest request) throws serviceexception {
2438 , -        + desc.getsignature()); , -  public execprocedureresponse execprocedure(rpccontroller controller , - , -    proceduredescription desc = request.getprocedure();
2439 , - , -      execprocedurerequest request) throws serviceexception { , -    try { , -    masterproceduremanager mpm = this.mpmhost.getproceduremanager(desc
2440 , -    try { , -    proceduredescription desc = request.getprocedure(); , -      mpm.execprocedure(desc); , -        .getsignature());
2441 , -      mpm.execprocedure(desc); , -    masterproceduremanager mpm = this.mpmhost.getproceduremanager(desc , -    } catch (ioexception e) { , -    if (mpm == null) {
2442 , -    } catch (ioexception e) { , -        .getsignature()); , -      throw new serviceexception(e); ," -      throw new serviceexception(""the procedure is not registered: """
2443 , -      throw new serviceexception(e); , -    if (mpm == null) { , -    } , -          + desc.getsignature());
2444 , -    } ," -      throw new serviceexception(""the procedure is not registered: "" ", - , -    }
2445 , - , -          + desc.getsignature()); , -    // send back the max amount of time the client should wait for the procedure , -
2446 , -    // send back the max amount of time the client should wait for the procedure , -    } , -    // to complete ," -    log.info(getclientidauditprefix() + "" procedure request for: """
2447 , -    // to complete , - , -    long waittime = snapshotdescriptionutils.default_max_wait_time; , -        + desc.getsignature());
2448 , -    long waittime = snapshotdescriptionutils.default_max_wait_time; ," -    log.info(getclientidauditprefix() + "" procedure request for: "" ", -    return execprocedureresponse.newbuilder().setexpectedtimeout(waittime) , -
2449 , -    return execprocedureresponse.newbuilder().setexpectedtimeout(waittime) , -        + desc.getsignature()); , -        .build(); , -    try {
2450 , -        .build(); , - , -  } , -      mpm.execprocedure(desc);
2451 , -  } , -    try { , - , -    } catch (ioexception e) {
2452 , - , -      mpm.execprocedure(desc); , -  /** , -      throw new serviceexception(e);
2453 , -  /** , -    } catch (ioexception e) { , -   * checks if the specified procedure is done. , -    }
2454 , -   * checks if the specified procedure is done. , -      throw new serviceexception(e); , -   * @return true if the procedure is done , -
2455 , -   * @return true if the procedure is done , -    } , -   *   false if the procedure is in the process of completing , -    // send back the max amount of time the client should wait for the procedure
2456 , -   *   false if the procedure is in the process of completing , - ," -   * @throws serviceexception if invalid procedure', 'or ", -    // to complete
2457 ," -   * @throws serviceexception if invalid procedure', 'or ", -    // send back the max amount of time the client should wait for the procedure , -   *  a failed procedure with progress failure reason. , -    long waittime = snapshotdescriptionutils.default_max_wait_time;
2458 , -   *  a failed procedure with progress failure reason. , -    // to complete , -   */ , -    return execprocedureresponse.newbuilder().setexpectedtimeout(waittime)
2459 , -   */ , -    long waittime = snapshotdescriptionutils.default_max_wait_time; , -  @override , -        .build();
2460 , -  @override , -    return execprocedureresponse.newbuilder().setexpectedtimeout(waittime) , -  public isproceduredoneresponse isproceduredone(rpccontroller controller , -  }
2461 , -  public isproceduredoneresponse isproceduredone(rpccontroller controller , -        .build(); , -      isproceduredonerequest request) throws serviceexception { , -
2462 , -      isproceduredonerequest request) throws serviceexception { , -  } , -    proceduredescription desc = request.getprocedure(); , -  /**
2463 , -    proceduredescription desc = request.getprocedure(); , - , -    masterproceduremanager mpm = this.mpmhost.getproceduremanager(desc , -   * checks if the specified procedure is done.
2464 , -    masterproceduremanager mpm = this.mpmhost.getproceduremanager(desc , -  /** , -        .getsignature()); , -   * @return true if the procedure is done
2465 , -        .getsignature()); , -   * checks if the specified procedure is done. , -    if (mpm == null) { , -   *   false if the procedure is in the process of completing
2466 , -    if (mpm == null) { , -   * @return true if the procedure is done ," -      throw new serviceexception(""the procedure is not registered: "" "," -   * @throws serviceexception if invalid procedure', 'or"
2467 ," -      throw new serviceexception(""the procedure is not registered: "" ", -   *   false if the procedure is in the process of completing , -          + desc.getsignature()); , -   *  a failed procedure with progress failure reason.
2468 , -          + desc.getsignature()); ," -   * @throws serviceexception if invalid procedure', 'or ", -    } , -   */
2469 , -    } , -   *  a failed procedure with progress failure reason. ," -    log.debug(""checking to see if procedure from request:"" ", -  @override
2470 ," -    log.debug(""checking to see if procedure from request:"" ", -   */ ," -        + desc.getsignature() + "" is done""); ", -  public isproceduredoneresponse isproceduredone(rpccontroller controller
2471 ," -        + desc.getsignature() + "" is done""); ", -  @override , - , -      isproceduredonerequest request) throws serviceexception {
2472 , - , -  public isproceduredoneresponse isproceduredone(rpccontroller controller , -    try { , -    proceduredescription desc = request.getprocedure();
2473 , -    try { , -      isproceduredonerequest request) throws serviceexception { , -      isproceduredoneresponse.builder builder = isproceduredoneresponse , -    masterproceduremanager mpm = this.mpmhost.getproceduremanager(desc
2474 , -      isproceduredoneresponse.builder builder = isproceduredoneresponse , -    proceduredescription desc = request.getprocedure(); , -          .newbuilder(); , -        .getsignature());
2475 , -          .newbuilder(); , -    masterproceduremanager mpm = this.mpmhost.getproceduremanager(desc , -      boolean done = mpm.isproceduredone(desc); , -    if (mpm == null) {
2476 , -      boolean done = mpm.isproceduredone(desc); , -        .getsignature()); , -      builder.setdone(done); ," -      throw new serviceexception(""the procedure is not registered: """
2477 , -      builder.setdone(done); , -    if (mpm == null) { , -      return builder.build(); , -          + desc.getsignature());
2478 , -      return builder.build(); ," -      throw new serviceexception(""the procedure is not registered: "" ", -    } catch (ioexception e) { , -    }
2479 , -    } catch (ioexception e) { , -          + desc.getsignature()); , -      throw new serviceexception(e); ," -    log.debug(""checking to see if procedure from request:"""
2480 , -      throw new serviceexception(e); , -    } , -    } ," -        + desc.getsignature() + "" is done"");"
2481 , -    } ," -    log.debug(""checking to see if procedure from request:"" ", -  } , -
2482 , -  } ," -        + desc.getsignature() + "" is done""); ", - , -    try {
2483 , - , - , -  @override , -      isproceduredoneresponse.builder builder = isproceduredoneresponse
2484 , -  @override , -    try { , -  public modifynamespaceresponse modifynamespace(rpccontroller controller , -          .newbuilder();
2485 , -  public modifynamespaceresponse modifynamespace(rpccontroller controller , -      isproceduredoneresponse.builder builder = isproceduredoneresponse , -      modifynamespacerequest request) throws serviceexception { , -      boolean done = mpm.isproceduredone(desc);
2486 , -      modifynamespacerequest request) throws serviceexception { , -          .newbuilder(); , -    try { , -      builder.setdone(done);
2487 , -    try { , -      boolean done = mpm.isproceduredone(desc); , -      modifynamespace(protobufutil.tonamespacedescriptor(request.getnamespacedescriptor())); , -      return builder.build();
2488 , -      modifynamespace(protobufutil.tonamespacedescriptor(request.getnamespacedescriptor())); , -      builder.setdone(done); , -      return modifynamespaceresponse.getdefaultinstance(); , -    } catch (ioexception e) {
2489 , -      return modifynamespaceresponse.getdefaultinstance(); , -      return builder.build(); , -    } catch (ioexception e) { , -      throw new serviceexception(e);
2490 , -    } catch (ioexception e) { , -    } catch (ioexception e) { , -      throw new serviceexception(e); , -    }
2491 , -      throw new serviceexception(e); , -      throw new serviceexception(e); , -    } , -  }
2492 , -    } , -    } , -  } , -
2493 , -  } , -  } , - , -  @override
2494 , - , - , -  @override , -  public modifynamespaceresponse modifynamespace(rpccontroller controller
2495 , -  @override , -  @override , -  public createnamespaceresponse createnamespace(rpccontroller controller , -      modifynamespacerequest request) throws serviceexception {
2496 , -  public createnamespaceresponse createnamespace(rpccontroller controller , -  public modifynamespaceresponse modifynamespace(rpccontroller controller , -     createnamespacerequest request) throws serviceexception { , -    try {
2497 , -     createnamespacerequest request) throws serviceexception { , -      modifynamespacerequest request) throws serviceexception { , -    try { , -      modifynamespace(protobufutil.tonamespacedescriptor(request.getnamespacedescriptor()));
2498 , -    try { , -    try { , -      createnamespace(protobufutil.tonamespacedescriptor(request.getnamespacedescriptor())); , -      return modifynamespaceresponse.getdefaultinstance();
2499 , -      createnamespace(protobufutil.tonamespacedescriptor(request.getnamespacedescriptor())); , -      modifynamespace(protobufutil.tonamespacedescriptor(request.getnamespacedescriptor())); , -      return createnamespaceresponse.getdefaultinstance(); , -    } catch (ioexception e) {
2500 , -      return createnamespaceresponse.getdefaultinstance(); , -      return modifynamespaceresponse.getdefaultinstance(); , -    } catch (ioexception e) { , -      throw new serviceexception(e);
2501 , -    } catch (ioexception e) { , -    } catch (ioexception e) { , -      throw new serviceexception(e); , -    }
2502 , -      throw new serviceexception(e); , -      throw new serviceexception(e); , -    } , -  }
2503 , -    } , -    } , -  } , -
2504 , -  } , -  } , - , -  @override
2505 , - , - , -  @override , -  public createnamespaceresponse createnamespace(rpccontroller controller
2506 , -  @override , -  @override , -  public deletenamespaceresponse deletenamespace(rpccontroller controller , -     createnamespacerequest request) throws serviceexception {
2507 , -  public deletenamespaceresponse deletenamespace(rpccontroller controller , -  public createnamespaceresponse createnamespace(rpccontroller controller , -      deletenamespacerequest request) throws serviceexception { , -    try {
2508 , -      deletenamespacerequest request) throws serviceexception { , -     createnamespacerequest request) throws serviceexception { , -    try { , -      createnamespace(protobufutil.tonamespacedescriptor(request.getnamespacedescriptor()));
2509 , -    try { , -    try { , -      deletenamespace(request.getnamespacename()); , -      return createnamespaceresponse.getdefaultinstance();
2510 , -      deletenamespace(request.getnamespacename()); , -      createnamespace(protobufutil.tonamespacedescriptor(request.getnamespacedescriptor())); , -      return deletenamespaceresponse.getdefaultinstance(); , -    } catch (ioexception e) {
2511 , -      return deletenamespaceresponse.getdefaultinstance(); , -      return createnamespaceresponse.getdefaultinstance(); , -    } catch (ioexception e) { , -      throw new serviceexception(e);
2512 , -    } catch (ioexception e) { , -    } catch (ioexception e) { , -      throw new serviceexception(e); , -    }
2513 , -      throw new serviceexception(e); , -      throw new serviceexception(e); , -    } , -  }
2514 , -    } , -    } , -  } , -
2515 , -  } , -  } , - , -  @override
2516 , - , - , -  @override , -  public deletenamespaceresponse deletenamespace(rpccontroller controller
2517 , -  @override , -  @override , -  public getnamespacedescriptorresponse getnamespacedescriptor( , -      deletenamespacerequest request) throws serviceexception {
2518 , -  public getnamespacedescriptorresponse getnamespacedescriptor( , -  public deletenamespaceresponse deletenamespace(rpccontroller controller ," -      rpccontroller controller', 'getnamespacedescriptorrequest request) ", -    try {
2519 ," -      rpccontroller controller', 'getnamespacedescriptorrequest request) ", -      deletenamespacerequest request) throws serviceexception { , -      throws serviceexception { , -      deletenamespace(request.getnamespacename());
2520 , -      throws serviceexception { , -    try { , -    try { , -      return deletenamespaceresponse.getdefaultinstance();
2521 , -    try { , -      deletenamespace(request.getnamespacename()); , -      return getnamespacedescriptorresponse.newbuilder() , -    } catch (ioexception e) {
2522 , -      return getnamespacedescriptorresponse.newbuilder() , -      return deletenamespaceresponse.getdefaultinstance(); , -          .setnamespacedescriptor( , -      throw new serviceexception(e);
2523 , -          .setnamespacedescriptor( , -    } catch (ioexception e) { , -              protobufutil.toprotonamespacedescriptor(getnamespacedescriptor(request.getnamespacename()))) , -    }
2524 , -              protobufutil.toprotonamespacedescriptor(getnamespacedescriptor(request.getnamespacename()))) , -      throw new serviceexception(e); , -          .build(); , -  }
2525 , -          .build(); , -    } , -    } catch (ioexception e) { , -
2526 , -    } catch (ioexception e) { , -  } , -      throw new serviceexception(e); , -  @override
2527 , -      throw new serviceexception(e); , - , -    } , -  public getnamespacedescriptorresponse getnamespacedescriptor(
2528 , -    } , -  @override , -  } ," -      rpccontroller controller', 'getnamespacedescriptorrequest request)"
2529 , -  } , -  public getnamespacedescriptorresponse getnamespacedescriptor( , - , -      throws serviceexception {
2530 , - ," -      rpccontroller controller', 'getnamespacedescriptorrequest request) ", -  @override , -    try {
2531 , -  @override , -      throws serviceexception { , -  public listnamespacedescriptorsresponse listnamespacedescriptors( , -      return getnamespacedescriptorresponse.newbuilder()
2532 , -  public listnamespacedescriptorsresponse listnamespacedescriptors( , -    try { ," -      rpccontroller controller', 'listnamespacedescriptorsrequest request) ", -          .setnamespacedescriptor(
2533 ," -      rpccontroller controller', 'listnamespacedescriptorsrequest request) ", -      return getnamespacedescriptorresponse.newbuilder() , -      throws serviceexception { , -              protobufutil.toprotonamespacedescriptor(getnamespacedescriptor(request.getnamespacename())))
2534 , -      throws serviceexception { , -          .setnamespacedescriptor( , -    try { , -          .build();
2535 , -    try { , -              protobufutil.toprotonamespacedescriptor(getnamespacedescriptor(request.getnamespacename()))) , -      listnamespacedescriptorsresponse.builder response = , -    } catch (ioexception e) {
2536 , -      listnamespacedescriptorsresponse.builder response = , -          .build(); , -          listnamespacedescriptorsresponse.newbuilder(); , -      throw new serviceexception(e);
2537 , -          listnamespacedescriptorsresponse.newbuilder(); , -    } catch (ioexception e) { , -      for(namespacedescriptor ns: listnamespacedescriptors()) { , -    }
2538 , -      for(namespacedescriptor ns: listnamespacedescriptors()) { , -      throw new serviceexception(e); , -        response.addnamespacedescriptor(protobufutil.toprotonamespacedescriptor(ns)); , -  }
2539 , -        response.addnamespacedescriptor(protobufutil.toprotonamespacedescriptor(ns)); , -    } , -      } , -
2540 , -      } , -  } , -      return response.build(); , -  @override
2541 , -      return response.build(); , - , -    } catch (ioexception e) { , -  public listnamespacedescriptorsresponse listnamespacedescriptors(
2542 , -    } catch (ioexception e) { , -  @override , -      throw new serviceexception(e); ," -      rpccontroller controller', 'listnamespacedescriptorsrequest request)"
2543 , -      throw new serviceexception(e); , -  public listnamespacedescriptorsresponse listnamespacedescriptors( , -    } , -      throws serviceexception {
2544 , -    } ," -      rpccontroller controller', 'listnamespacedescriptorsrequest request) ", -  } , -    try {
2545 , -  } , -      throws serviceexception { , - , -      listnamespacedescriptorsresponse.builder response =
2546 , - , -    try { , -  @override , -          listnamespacedescriptorsresponse.newbuilder();
2547 , -  @override , -      listnamespacedescriptorsresponse.builder response = , -  public listtabledescriptorsbynamespaceresponse listtabledescriptorsbynamespace( , -      for(namespacedescriptor ns: listnamespacedescriptors()) {
2548 , -  public listtabledescriptorsbynamespaceresponse listtabledescriptorsbynamespace( , -          listnamespacedescriptorsresponse.newbuilder(); ," -      rpccontroller controller', 'listtabledescriptorsbynamespacerequest request) ", -        response.addnamespacedescriptor(protobufutil.toprotonamespacedescriptor(ns));
2549 ," -      rpccontroller controller', 'listtabledescriptorsbynamespacerequest request) ", -      for(namespacedescriptor ns: listnamespacedescriptors()) { , -      throws serviceexception { , -      }
2550 , -      throws serviceexception { , -        response.addnamespacedescriptor(protobufutil.toprotonamespacedescriptor(ns)); , -    try { , -      return response.build();
2551 , -    try { , -      } , -      listtabledescriptorsbynamespaceresponse.builder b = , -    } catch (ioexception e) {
2552 , -      listtabledescriptorsbynamespaceresponse.builder b = , -      return response.build(); , -          listtabledescriptorsbynamespaceresponse.newbuilder(); , -      throw new serviceexception(e);
2553 , -          listtabledescriptorsbynamespaceresponse.newbuilder(); , -    } catch (ioexception e) { , -      for(htabledescriptor htd: listtabledescriptorsbynamespace(request.getnamespacename())) { , -    }
2554 , -      for(htabledescriptor htd: listtabledescriptorsbynamespace(request.getnamespacename())) { , -      throw new serviceexception(e); , -        b.addtableschema(htd.convert()); , -  }
2555 , -        b.addtableschema(htd.convert()); , -    } , -      } , -
2556 , -      } , -  } , -      return b.build(); , -  @override
2557 , -      return b.build(); , - , -    } catch (ioexception e) { , -  public listtabledescriptorsbynamespaceresponse listtabledescriptorsbynamespace(
2558 , -    } catch (ioexception e) { , -  @override , -      throw new serviceexception(e); ," -      rpccontroller controller', 'listtabledescriptorsbynamespacerequest request)"
2559 , -      throw new serviceexception(e); , -  public listtabledescriptorsbynamespaceresponse listtabledescriptorsbynamespace( , -    } , -      throws serviceexception {
2560 , -    } ," -      rpccontroller controller', 'listtabledescriptorsbynamespacerequest request) ", -  } , -    try {
2561 , -  } , -      throws serviceexception { , - , -      listtabledescriptorsbynamespaceresponse.builder b =
2562 , - , -    try { , -  @override , -          listtabledescriptorsbynamespaceresponse.newbuilder();
2563 , -  @override , -      listtabledescriptorsbynamespaceresponse.builder b = , -  public listtablenamesbynamespaceresponse listtablenamesbynamespace( , -      for(htabledescriptor htd: listtabledescriptorsbynamespace(request.getnamespacename())) {
2564 , -  public listtablenamesbynamespaceresponse listtablenamesbynamespace( , -          listtabledescriptorsbynamespaceresponse.newbuilder(); ," -      rpccontroller controller', 'listtablenamesbynamespacerequest request) ", -        b.addtableschema(htd.convert());
2565 ," -      rpccontroller controller', 'listtablenamesbynamespacerequest request) ", -      for(htabledescriptor htd: listtabledescriptorsbynamespace(request.getnamespacename())) { , -      throws serviceexception { , -      }
2566 , -      throws serviceexception { , -        b.addtableschema(htd.convert()); , -    try { , -      return b.build();
2567 , -    try { , -      } , -      listtablenamesbynamespaceresponse.builder b = , -    } catch (ioexception e) {
2568 , -      listtablenamesbynamespaceresponse.builder b = , -      return b.build(); , -          listtablenamesbynamespaceresponse.newbuilder(); , -      throw new serviceexception(e);
2569 , -          listtablenamesbynamespaceresponse.newbuilder(); , -    } catch (ioexception e) { , -      for (tablename tablename: listtablenamesbynamespace(request.getnamespacename())) { , -    }
2570 , -      for (tablename tablename: listtablenamesbynamespace(request.getnamespacename())) { , -      throw new serviceexception(e); , -        b.addtablename(protobufutil.toprototablename(tablename)); , -  }
2571 , -        b.addtablename(protobufutil.toprototablename(tablename)); , -    } , -      } , -
2572 , -      } , -  } , -      return b.build(); , -  @override
2573 , -      return b.build(); , - , -    } catch (ioexception e) { , -  public listtablenamesbynamespaceresponse listtablenamesbynamespace(
2574 , -    } catch (ioexception e) { , -  @override , -      throw new serviceexception(e); ," -      rpccontroller controller', 'listtablenamesbynamespacerequest request)"
2575 , -      throw new serviceexception(e); , -  public listtablenamesbynamespaceresponse listtablenamesbynamespace( , -    } , -      throws serviceexception {
2576 , -    } ," -      rpccontroller controller', 'listtablenamesbynamespacerequest request) ", -  } , -    try {
2577 , -  } , -      throws serviceexception { , - , -      listtablenamesbynamespaceresponse.builder b =
2578 , - , -    try { , -  private boolean ishealthcheckerconfigured() { , -          listtablenamesbynamespaceresponse.newbuilder();
2579 , -  private boolean ishealthcheckerconfigured() { , -      listtablenamesbynamespaceresponse.builder b = , -    string healthscriptlocation = this.conf.get(hconstants.health_script_loc); , -      for (tablename tablename: listtablenamesbynamespace(request.getnamespacename())) {
2580 , -    string healthscriptlocation = this.conf.get(hconstants.health_script_loc); , -          listtablenamesbynamespaceresponse.newbuilder(); , -    return org.apache.commons.lang.stringutils.isnotblank(healthscriptlocation); , -        b.addtablename(protobufutil.toprototablename(tablename));
2581 , -    return org.apache.commons.lang.stringutils.isnotblank(healthscriptlocation); , -      for (tablename tablename: listtablenamesbynamespace(request.getnamespacename())) { , -  } , -      }
2582 , -  } , -        b.addtablename(protobufutil.toprototablename(tablename)); , - , -      return b.build();
2583 , - , -      } , @override , -    } catch (ioexception e) {
2584 , @override , -      return b.build(); , public void createnamespace(namespacedescriptor descriptor) throws ioexception { , -      throw new serviceexception(e);
2585 , public void createnamespace(namespacedescriptor descriptor) throws ioexception { , -    } catch (ioexception e) { , tablename.islegalnamespacename(bytes.tobytes(descriptor.getname())); , -    }
2586 , tablename.islegalnamespacename(bytes.tobytes(descriptor.getname())); , -      throw new serviceexception(e); , +    checknamespacemanagerready(); , -  }
2587 , +    checknamespacemanagerready(); , -    } , if (cphost != null) { , -
2588 , if (cphost != null) { , -  } , if (cphost.precreatenamespace(descriptor)) { , -  private boolean ishealthcheckerconfigured() {
2589 , if (cphost.precreatenamespace(descriptor)) { , - , return; , -    string healthscriptlocation = this.conf.get(hconstants.health_script_loc);
2590 , return; , -  private boolean ishealthcheckerconfigured() { ," @@ -3255', '6 +1702', '7 @@ masterservices', 'server { ", -    return org.apache.commons.lang.stringutils.isnotblank(healthscriptlocation);
2591 ," @@ -3255', '6 +1702', '7 @@ masterservices', 'server { ", -    string healthscriptlocation = this.conf.get(hconstants.health_script_loc); , @override , -  }
2592 , @override , -    return org.apache.commons.lang.stringutils.isnotblank(healthscriptlocation); , public void modifynamespace(namespacedescriptor descriptor) throws ioexception { , -
2593 , public void modifynamespace(namespacedescriptor descriptor) throws ioexception { , -  } , tablename.islegalnamespacename(bytes.tobytes(descriptor.getname())); , @override
2594 , tablename.islegalnamespacename(bytes.tobytes(descriptor.getname())); , - , +    checknamespacemanagerready(); , public void createnamespace(namespacedescriptor descriptor) throws ioexception {
2595 , +    checknamespacemanagerready(); , @override , if (cphost != null) { , tablename.islegalnamespacename(bytes.tobytes(descriptor.getname()));
2596 , if (cphost != null) { , public void createnamespace(namespacedescriptor descriptor) throws ioexception { , if (cphost.premodifynamespace(descriptor)) { , +    checknamespacemanagerready();
2597 , if (cphost.premodifynamespace(descriptor)) { , tablename.islegalnamespacename(bytes.tobytes(descriptor.getname())); , return; , if (cphost != null) {
2598 , return; , +    checknamespacemanagerready(); ," @@ -3269', '6 +1717', '7 @@ masterservices', 'server { ", if (cphost.precreatenamespace(descriptor)) {
2599 ," @@ -3269', '6 +1717', '7 @@ masterservices', 'server { ", if (cphost != null) { ,  , return;
2600 ,  , if (cphost.precreatenamespace(descriptor)) { , @override ," @@ -3255', '6 +1702', '7 @@ masterservices', 'server {"
2601 , @override , return; , public void deletenamespace(string name) throws ioexception { , @override
2602 , public void deletenamespace(string name) throws ioexception { ," @@ -3255', '6 +1702', '7 @@ masterservices', 'server { ", +    checknamespacemanagerready(); , public void modifynamespace(namespacedescriptor descriptor) throws ioexception {
2603 , +    checknamespacemanagerready(); , @override , if (cphost != null) { , tablename.islegalnamespacename(bytes.tobytes(descriptor.getname()));
2604 , if (cphost != null) { , public void modifynamespace(namespacedescriptor descriptor) throws ioexception { , if (cphost.predeletenamespace(name)) { , +    checknamespacemanagerready();
2605 , if (cphost.predeletenamespace(name)) { , tablename.islegalnamespacename(bytes.tobytes(descriptor.getname())); , return; , if (cphost != null) {
2606 , return; , +    checknamespacemanagerready(); ," @@ -3283', '11 +1732', '7 @@ masterservices', 'server { ", if (cphost.premodifynamespace(descriptor)) {
2607 ," @@ -3283', '11 +1732', '7 @@ masterservices', 'server { ", if (cphost != null) { ,  , return;
2608 ,  , if (cphost.premodifynamespace(descriptor)) { , @override ," @@ -3269', '6 +1717', '7 @@ masterservices', 'server {"
2609 , @override , return; , public namespacedescriptor getnamespacedescriptor(string name) throws ioexception { , 
2610 , public namespacedescriptor getnamespacedescriptor(string name) throws ioexception { ," @@ -3269', '6 +1717', '7 @@ masterservices', 'server { ", -    boolean ready = tablenamespacemanager != null && , @override
2611 , -    boolean ready = tablenamespacemanager != null && ,  , -        tablenamespacemanager.istableavailableandinitialized(); , public void deletenamespace(string name) throws ioexception {
2612 , -        tablenamespacemanager.istableavailableandinitialized(); , @override , -    if (!ready) { , +    checknamespacemanagerready();
2613 , -    if (!ready) { , public void deletenamespace(string name) throws ioexception { ," -      throw new ioexception(""table namespace manager not ready yet', 'try again later""); ", if (cphost != null) {
2614 ," -      throw new ioexception(""table namespace manager not ready yet', 'try again later""); ", +    checknamespacemanagerready(); , -    } , if (cphost.predeletenamespace(name)) {
2615 , -    } , if (cphost != null) { , +    checknamespacemanagerready(); , return;
2616 , +    checknamespacemanagerready(); , if (cphost.predeletenamespace(name)) { , namespacedescriptor nsd = tablenamespacemanager.get(name); ," @@ -3283', '11 +1732', '7 @@ masterservices', 'server {"
2617 , namespacedescriptor nsd = tablenamespacemanager.get(name); , return; , if (nsd == null) { , 
2618 , if (nsd == null) { ," @@ -3283', '11 +1732', '7 @@ masterservices', 'server { ", throw new namespacenotfoundexception(name); , @override
2619 , throw new namespacenotfoundexception(name); ,  ," @@ -3297', '6 +1742', '7 @@ masterservices', 'server { ", public namespacedescriptor getnamespacedescriptor(string name) throws ioexception {
2620 ," @@ -3297', '6 +1742', '7 @@ masterservices', 'server { ", @override ,  , -    boolean ready = tablenamespacemanager != null &&
2621 ,  , public namespacedescriptor getnamespacedescriptor(string name) throws ioexception { , @override , -        tablenamespacemanager.istableavailableandinitialized();
2622 , @override , -    boolean ready = tablenamespacemanager != null && , public list<namespacedescriptor> listnamespacedescriptors() throws ioexception { , -    if (!ready) {
2623 , public list<namespacedescriptor> listnamespacedescriptors() throws ioexception { , -        tablenamespacemanager.istableavailableandinitialized(); , +    checknamespacemanagerready(); ," -      throw new ioexception(""table namespace manager not ready yet', 'try again later"");"
2624 , +    checknamespacemanagerready(); , -    if (!ready) { , return lists.newarraylist(tablenamespacemanager.list()); , -    }
2625 , return lists.newarraylist(tablenamespacemanager.list()); ," -      throw new ioexception(""table namespace manager not ready yet', 'try again later""); ", } , +    checknamespacemanagerready();
2626 , } , -    } ,  , namespacedescriptor nsd = tablenamespacemanager.get(name);
2627 ,  , +    checknamespacemanagerready(); ," @@ -3315', '5 +1761', '4 @@ masterservices', 'server { ", if (nsd == null) {
2628 ," @@ -3315', '5 +1761', '4 @@ masterservices', 'server { ", namespacedescriptor nsd = tablenamespacemanager.get(name); , } , throw new namespacenotfoundexception(name);
2629 , } , if (nsd == null) { , return tablenames; ," @@ -3297', '6 +1742', '7 @@ masterservices', 'server {"
2630 , return tablenames; , throw new namespacenotfoundexception(name); , } , 
2631 , } ," @@ -3297', '6 +1742', '7 @@ masterservices', 'server { ", - , @override
2632 , - ,  , } , public list<namespacedescriptor> listnamespacedescriptors() throws ioexception {
