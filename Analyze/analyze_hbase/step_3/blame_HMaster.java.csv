commit_id,filename,committer,date,time,line_number,code
^948d0cdec4,src/java/org/apache/hadoop/hbase/HMaster.java,Doug Cutting,2007-04-03,20:34:28,1,/**
^948d0cdec4,src/java/org/apache/hadoop/hbase/HMaster.java,Doug Cutting,2007-04-03,20:34:28,2, *
c6bf382ebe9,src/java/org/apache/hadoop/hbase/HMaster.java,Jim Kellerman,2007-07-12,22:08:25,3, * Licensed to the Apache Software Foundation (ASF) under one
c6bf382ebe9,src/java/org/apache/hadoop/hbase/HMaster.java,Jim Kellerman,2007-07-12,22:08:25,4, * or more contributor license agreements.  See the NOTICE file
c6bf382ebe9,src/java/org/apache/hadoop/hbase/HMaster.java,Jim Kellerman,2007-07-12,22:08:25,5, * distributed with this work for additional information
c6bf382ebe9,src/java/org/apache/hadoop/hbase/HMaster.java,Jim Kellerman,2007-07-12,22:08:25,6, * regarding copyright ownership.  The ASF licenses this file
c6bf382ebe9,src/java/org/apache/hadoop/hbase/HMaster.java,Jim Kellerman,2007-07-12,22:08:25,7," * to you under the Apache License, Version 2.0 (the"
c6bf382ebe9,src/java/org/apache/hadoop/hbase/HMaster.java,Jim Kellerman,2007-07-12,22:08:25,8," * ""License""); you may not use this file except in compliance"
c6bf382ebe9,src/java/org/apache/hadoop/hbase/HMaster.java,Jim Kellerman,2007-07-12,22:08:25,9, * with the License.  You may obtain a copy of the License at
^948d0cdec4,src/java/org/apache/hadoop/hbase/HMaster.java,Doug Cutting,2007-04-03,20:34:28,10, *
^948d0cdec4,src/java/org/apache/hadoop/hbase/HMaster.java,Doug Cutting,2007-04-03,20:34:28,11, *     http://www.apache.org/licenses/LICENSE-2.0
^948d0cdec4,src/java/org/apache/hadoop/hbase/HMaster.java,Doug Cutting,2007-04-03,20:34:28,12, *
^948d0cdec4,src/java/org/apache/hadoop/hbase/HMaster.java,Doug Cutting,2007-04-03,20:34:28,13," * Unless required by applicable law or agreed to in writing, software"
^948d0cdec4,src/java/org/apache/hadoop/hbase/HMaster.java,Doug Cutting,2007-04-03,20:34:28,14," * distributed under the License is distributed on an ""AS IS"" BASIS,"
^948d0cdec4,src/java/org/apache/hadoop/hbase/HMaster.java,Doug Cutting,2007-04-03,20:34:28,15," * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
^948d0cdec4,src/java/org/apache/hadoop/hbase/HMaster.java,Doug Cutting,2007-04-03,20:34:28,16, * See the License for the specific language governing permissions and
^948d0cdec4,src/java/org/apache/hadoop/hbase/HMaster.java,Doug Cutting,2007-04-03,20:34:28,17, * limitations under the License.
^948d0cdec4,src/java/org/apache/hadoop/hbase/HMaster.java,Doug Cutting,2007-04-03,20:34:28,18, */
0f6c5e0ae89,src/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2008-02-08,22:50:35,19,package org.apache.hadoop.hbase.master;
^948d0cdec4,src/java/org/apache/hadoop/hbase/HMaster.java,Doug Cutting,2007-04-03,20:34:28,20,
b1ef73ff1fb,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-06-12,01:17:45,21,import java.io.IOException;
4742456403e,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,nkeywal,2014-02-07,20:27:42,22,import java.io.InterruptedIOException;
b1ef73ff1fb,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-06-12,01:17:45,23,import java.lang.reflect.Constructor;
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,24,import java.lang.reflect.InvocationTargetException;
d6ed1130d51,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-28,19:51:25,25,import java.net.InetAddress;
d4eeff6d35d,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jean-Daniel Cryans,2010-12-01,01:32:52,26,import java.net.InetSocketAddress;
327e2d1f743,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-03-22,00:02:36,27,import java.net.UnknownHostException;
b1ef73ff1fb,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-06-12,01:17:45,28,import java.util.ArrayList;
6d7fdfd1082,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-08-14,00:34:30,29,import java.util.Collection;
3fd6997380a,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2012-03-26,23:06:02,30,import java.util.Collections;
3fd6997380a,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2012-03-26,23:06:02,31,import java.util.Comparator;
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-15,04:24:02,32,import java.util.HashSet;
b1ef73ff1fb,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-06-12,01:17:45,33,import java.util.List;
b1ef73ff1fb,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-06-12,01:17:45,34,import java.util.Map;
ed76ba8de34,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2011-10-24,23:18:04,35,import java.util.Set;
a2471aa2559,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-12-30,06:39:07,36,import java.util.concurrent.Callable;
a2471aa2559,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-12-30,06:39:07,37,import java.util.concurrent.ExecutionException;
a2471aa2559,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-12-30,06:39:07,38,import java.util.concurrent.Executors;
a2471aa2559,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-12-30,06:39:07,39,import java.util.concurrent.Future;
a2471aa2559,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-12-30,06:39:07,40,import java.util.concurrent.TimeUnit;
324a2cfeb4e,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-03-01,06:59:51,41,import java.util.concurrent.atomic.AtomicReference;
b1ef73ff1fb,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-06-12,01:17:45,42,
d7050d3541d,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-02-24,21:06:12,43,import javax.management.ObjectName;
d7050d3541d,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-02-24,21:06:12,44,
ec9a568764e,src/java/org/apache/hadoop/hbase/HMaster.java,Doug Cutting,2007-04-24,21:13:08,45,import org.apache.commons.logging.Log;
ec9a568764e,src/java/org/apache/hadoop/hbase/HMaster.java,Doug Cutting,2007-04-24,21:13:08,46,import org.apache.commons.logging.LogFactory;
dace419238e,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-03-01,17:53:03,47,import org.apache.hadoop.classification.InterfaceAudience;
3339e94e8d7,src/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2009-12-31,20:44:31,48,import org.apache.hadoop.conf.Configuration;
ab96788641a,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,larsh,2012-07-22,01:11:36,49,import org.apache.hadoop.fs.Path;
327e2d1f743,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-03-22,00:02:36,50,import org.apache.hadoop.hbase.Abortable;
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,51,import org.apache.hadoop.hbase.Chore;
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,eclark,2012-11-06,23:22:01,52,import org.apache.hadoop.hbase.ClusterId;
5e1b305116b,src/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2009-05-28,05:48:52,53,import org.apache.hadoop.hbase.ClusterStatus;
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,54,import org.apache.hadoop.hbase.DoNotRetryIOException;
b782a7202e4,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-03,06:40:13,55,import org.apache.hadoop.hbase.HBaseIOException;
0f6c5e0ae89,src/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2008-02-08,22:50:35,56,import org.apache.hadoop.hbase.HColumnDescriptor;
680343c2b27,src/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2008-05-15,22:10:47,57,import org.apache.hadoop.hbase.HConstants;
0f6c5e0ae89,src/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2008-02-08,22:50:35,58,import org.apache.hadoop.hbase.HRegionInfo;
680343c2b27,src/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2008-05-15,22:10:47,59,import org.apache.hadoop.hbase.HTableDescriptor;
a1079157eca,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-01-03,02:12:24,60,import org.apache.hadoop.hbase.HealthCheckChore;
3daea02e860,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Devaraj Das,2013-07-30,05:14:32,61,import org.apache.hadoop.hbase.MasterNotRunningException;
040b53e09aa,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-17,05:43:06,62,import org.apache.hadoop.hbase.NamespaceDescriptor;
040b53e09aa,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-17,05:43:06,63,import org.apache.hadoop.hbase.NamespaceNotFoundException;
3daea02e860,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Devaraj Das,2013-07-30,05:14:32,64,import org.apache.hadoop.hbase.PleaseHoldException;
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,65,import org.apache.hadoop.hbase.Server;
57afee6a6bb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2012-07-27,16:34:32,66,import org.apache.hadoop.hbase.ServerLoad;
529223130ab,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,23:12:42,67,import org.apache.hadoop.hbase.ServerName;
b0439269fe7,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-06-21,18:31:26,68,import org.apache.hadoop.hbase.TableDescriptors;
040b53e09aa,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-17,05:43:06,69,import org.apache.hadoop.hbase.TableName;
3daea02e860,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Devaraj Das,2013-07-30,05:14:32,70,import org.apache.hadoop.hbase.TableNotDisabledException;
3daea02e860,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Devaraj Das,2013-07-30,05:14:32,71,import org.apache.hadoop.hbase.TableNotFoundException;
3daea02e860,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Devaraj Das,2013-07-30,05:14:32,72,import org.apache.hadoop.hbase.UnknownRegionException;
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,73,import org.apache.hadoop.hbase.catalog.CatalogTracker;
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,74,import org.apache.hadoop.hbase.catalog.MetaReader;
74ab28497de,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,sershe,2014-02-10,04:16:34,75,import org.apache.hadoop.hbase.client.ConnectionUtils;
ebbdb536c7c,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Todd Lipcon,2010-06-21,20:36:39,76,import org.apache.hadoop.hbase.client.MetaScanner;
7f2792b11b9,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-06-22,06:48:28,77,import org.apache.hadoop.hbase.client.MetaScanner.MetaScannerVisitor;
6db2eedc9b6,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-24,00:18:23,78,import org.apache.hadoop.hbase.client.MetaScanner.MetaScannerVisitorBase;
8d8dc87d0dd,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-10-13,23:12:30,79,import org.apache.hadoop.hbase.client.Result;
581421a6b2e,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-09-25,03:46:53,80,import org.apache.hadoop.hbase.coprocessor.CoprocessorHost;
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,81,import org.apache.hadoop.hbase.exceptions.DeserializationException;
3812294456f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-07-26,22:50:43,82,import org.apache.hadoop.hbase.exceptions.MergeRegionException;
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,zjushch,2013-03-24,10:26:21,83,import org.apache.hadoop.hbase.exceptions.UnknownProtocolException;
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,84,import org.apache.hadoop.hbase.executor.ExecutorService;
24ebbcabc39,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,eclark,2013-02-25,22:50:17,85,import org.apache.hadoop.hbase.executor.ExecutorType;
aaf04f7ea07,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-13,21:18:42,86,import org.apache.hadoop.hbase.ipc.FifoRpcScheduler;
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,87,import org.apache.hadoop.hbase.ipc.RequestContext;
a5f27d67ca0,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2010-11-19,21:14:05,88,import org.apache.hadoop.hbase.ipc.RpcServer;
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-03,03:52:15,89,import org.apache.hadoop.hbase.ipc.RpcServer.BlockingServiceAndInterface;
3812294456f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-07-26,22:50:43,90,import org.apache.hadoop.hbase.ipc.RpcServerInterface;
4c5928faf9f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-11-14,17:03:06,91,import org.apache.hadoop.hbase.ipc.ServerRpcController;
f5881a31161,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-10-25,16:17:29,92,import org.apache.hadoop.hbase.master.RegionState.State;
eddc746457d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-09-20,06:05:01,93,import org.apache.hadoop.hbase.master.balancer.BalancerChore;
eddc746457d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-09-20,06:05:01,94,import org.apache.hadoop.hbase.master.balancer.ClusterStatusChore;
4ebecd3eba5,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-30,20:53:15,95,import org.apache.hadoop.hbase.master.balancer.LoadBalancerFactory;
ab96788641a,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,larsh,2012-07-22,01:11:36,96,import org.apache.hadoop.hbase.master.cleaner.HFileCleaner;
ab96788641a,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,larsh,2012-07-22,01:11:36,97,import org.apache.hadoop.hbase.master.cleaner.LogCleaner;
8d8dc87d0dd,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-10-13,23:12:30,98,import org.apache.hadoop.hbase.master.handler.CreateTableHandler;
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,99,import org.apache.hadoop.hbase.master.handler.DeleteTableHandler;
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,100,import org.apache.hadoop.hbase.master.handler.DisableTableHandler;
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,zjushch,2013-03-24,10:26:21,101,import org.apache.hadoop.hbase.master.handler.DispatchMergingRegionHandler;
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,102,import org.apache.hadoop.hbase.master.handler.EnableTableHandler;
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,103,import org.apache.hadoop.hbase.master.handler.ModifyTableHandler;
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,104,import org.apache.hadoop.hbase.master.handler.TableAddFamilyHandler;
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,105,import org.apache.hadoop.hbase.master.handler.TableDeleteFamilyHandler;
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,106,import org.apache.hadoop.hbase.master.handler.TableModifyFamilyHandler;
b061b959644,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:37:32,107,import org.apache.hadoop.hbase.master.snapshot.SnapshotManager;
48560e089c3,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Todd Lipcon,2011-08-30,19:27:24,108,import org.apache.hadoop.hbase.monitoring.MemoryBoundedLogMessageBuffer;
ca952ac00bf,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Todd Lipcon,2011-05-03,06:11:06,109,import org.apache.hadoop.hbase.monitoring.MonitoredTask;
ca952ac00bf,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Todd Lipcon,2011-05-03,06:11:06,110,import org.apache.hadoop.hbase.monitoring.TaskMonitor;
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2014-01-22,01:42:49,111,import org.apache.hadoop.hbase.procedure.MasterProcedureManager;
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2014-01-22,01:42:49,112,import org.apache.hadoop.hbase.procedure.MasterProcedureManagerHost;
c9b028862a6,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-08-28,03:40:47,113,import org.apache.hadoop.hbase.protobuf.ProtobufUtil;
4c5928faf9f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-11-14,17:03:06,114,import org.apache.hadoop.hbase.protobuf.RequestConverter;
c9b028862a6,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-08-28,03:40:47,115,import org.apache.hadoop.hbase.protobuf.ResponseConverter;
4c5928faf9f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-11-14,17:03:06,116,import org.apache.hadoop.hbase.protobuf.generated.ClientProtos;
87812311328,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-06-22,00:15:11,117,import org.apache.hadoop.hbase.protobuf.generated.ClusterStatusProtos;
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,118,import org.apache.hadoop.hbase.protobuf.generated.HBaseProtos;
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-03,06:20:26,119,import org.apache.hadoop.hbase.protobuf.generated.HBaseProtos.NameStringPair;
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,120,import org.apache.hadoop.hbase.protobuf.generated.HBaseProtos.ProcedureDescription;
7ea071db1ff,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-12-17,04:35:59,121,import org.apache.hadoop.hbase.protobuf.generated.HBaseProtos.RegionServerInfo;
c18eebd8a61,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-17,05:06:15,122,import org.apache.hadoop.hbase.protobuf.generated.HBaseProtos.RegionSpecifier.RegionSpecifierType;
cb6f2868583,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:05:53,123,import org.apache.hadoop.hbase.protobuf.generated.HBaseProtos.SnapshotDescription;
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,124,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos;
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,125,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.AddColumnRequest;
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,126,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.AddColumnResponse;
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,127,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.AssignRegionRequest;
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,128,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.AssignRegionResponse;
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,129,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.BalanceRequest;
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,130,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.BalanceResponse;
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,131,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.CreateNamespaceRequest;
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,132,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.CreateNamespaceResponse;
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,133,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.CreateTableRequest;
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,134,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.CreateTableResponse;
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,135,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.DeleteColumnRequest;
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,136,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.DeleteColumnResponse;
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,137,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.DeleteNamespaceRequest;
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,138,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.DeleteNamespaceResponse;
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,139,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.DeleteSnapshotRequest;
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,140,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.DeleteSnapshotResponse;
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,141,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.DeleteTableRequest;
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,142,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.DeleteTableResponse;
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,143,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.DisableTableRequest;
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,144,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.DisableTableResponse;
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,145,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.DispatchMergingRegionsRequest;
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,146,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.DispatchMergingRegionsResponse;
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,147,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.EnableCatalogJanitorRequest;
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,148,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.EnableCatalogJanitorResponse;
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,149,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.EnableTableRequest;
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,150,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.EnableTableResponse;
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,151,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.ExecProcedureRequest;
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,152,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.ExecProcedureResponse;
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,153,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.GetClusterStatusRequest;
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,154,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.GetClusterStatusResponse;
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,155,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.GetCompletedSnapshotsRequest;
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,156,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.GetCompletedSnapshotsResponse;
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,157,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.GetNamespaceDescriptorRequest;
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,158,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.GetNamespaceDescriptorResponse;
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,159,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.GetSchemaAlterStatusRequest;
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,160,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.GetSchemaAlterStatusResponse;
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,161,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.GetTableDescriptorsRequest;
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,162,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.GetTableDescriptorsResponse;
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,163,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.GetTableNamesRequest;
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,164,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.GetTableNamesResponse;
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,165,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.IsCatalogJanitorEnabledRequest;
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,166,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.IsCatalogJanitorEnabledResponse;
57afee6a6bb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2012-07-27,16:34:32,167,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.IsMasterRunningRequest;
57afee6a6bb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2012-07-27,16:34:32,168,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.IsMasterRunningResponse;
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,169,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.IsProcedureDoneRequest;
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,170,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.IsProcedureDoneResponse;
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,171,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.IsRestoreSnapshotDoneRequest;
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,172,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.IsRestoreSnapshotDoneResponse;
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,173,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.IsSnapshotDoneRequest;
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,174,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.IsSnapshotDoneResponse;
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,175,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.ListNamespaceDescriptorsRequest;
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,176,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.ListNamespaceDescriptorsResponse;
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,177,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.ListTableDescriptorsByNamespaceRequest;
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,178,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.ListTableDescriptorsByNamespaceResponse;
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,179,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.ListTableNamesByNamespaceRequest;
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,180,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.ListTableNamesByNamespaceResponse;
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,181,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.ModifyColumnRequest;
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,182,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.ModifyColumnResponse;
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,183,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.ModifyNamespaceRequest;
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,184,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.ModifyNamespaceResponse;
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,185,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.ModifyTableRequest;
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,186,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.ModifyTableResponse;
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,187,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.MoveRegionRequest;
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,188,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.MoveRegionResponse;
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,189,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.OfflineRegionRequest;
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,190,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.OfflineRegionResponse;
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,191,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.RestoreSnapshotRequest;
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,192,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.RestoreSnapshotResponse;
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,193,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.RunCatalogScanRequest;
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,194,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.RunCatalogScanResponse;
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,195,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.SetBalancerRunningRequest;
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,196,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.SetBalancerRunningResponse;
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,197,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.ShutdownRequest;
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,198,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.ShutdownResponse;
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,199,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.SnapshotRequest;
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,200,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.SnapshotResponse;
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,201,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.StopMasterRequest;
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,202,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.StopMasterResponse;
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,203,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.UnassignRegionRequest;
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,204,import org.apache.hadoop.hbase.protobuf.generated.MasterProtos.UnassignRegionResponse;
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-03,03:52:15,205,import org.apache.hadoop.hbase.protobuf.generated.RegionServerStatusProtos;
c310653a19c,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-09-06,17:22:01,206,import org.apache.hadoop.hbase.protobuf.generated.RegionServerStatusProtos.GetLastFlushedSequenceIdRequest;
c310653a19c,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-09-06,17:22:01,207,import org.apache.hadoop.hbase.protobuf.generated.RegionServerStatusProtos.GetLastFlushedSequenceIdResponse;
57afee6a6bb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2012-07-27,16:34:32,208,import org.apache.hadoop.hbase.protobuf.generated.RegionServerStatusProtos.RegionServerReportRequest;
57afee6a6bb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2012-07-27,16:34:32,209,import org.apache.hadoop.hbase.protobuf.generated.RegionServerStatusProtos.RegionServerReportResponse;
57afee6a6bb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2012-07-27,16:34:32,210,import org.apache.hadoop.hbase.protobuf.generated.RegionServerStatusProtos.RegionServerStartupRequest;
57afee6a6bb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2012-07-27,16:34:32,211,import org.apache.hadoop.hbase.protobuf.generated.RegionServerStatusProtos.RegionServerStartupResponse;
57afee6a6bb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2012-07-27,16:34:32,212,import org.apache.hadoop.hbase.protobuf.generated.RegionServerStatusProtos.ReportRSFatalErrorRequest;
57afee6a6bb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2012-07-27,16:34:32,213,import org.apache.hadoop.hbase.protobuf.generated.RegionServerStatusProtos.ReportRSFatalErrorResponse;
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,214,import org.apache.hadoop.hbase.regionserver.RegionSplitPolicy;
57afee6a6bb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2012-07-27,16:34:32,215,import org.apache.hadoop.hbase.replication.regionserver.Replication;
e5e5dac9a71,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jyates,2013-10-30,00:02:52,216,import org.apache.hadoop.hbase.security.UserProvider;
24ebbcabc39,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,eclark,2013-02-25,22:50:17,217,import org.apache.hadoop.hbase.snapshot.ClientSnapshotDescriptionUtils;
cb6f2868583,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:05:53,218,import org.apache.hadoop.hbase.snapshot.SnapshotDescriptionUtils;
b251b573905,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,17:53:26,219,import org.apache.hadoop.hbase.trace.SpanReceiverHost;
57afee6a6bb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2012-07-27,16:34:32,220,import org.apache.hadoop.hbase.util.Bytes;
57afee6a6bb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2012-07-27,16:34:32,221,import org.apache.hadoop.hbase.util.CompressionTest;
57afee6a6bb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2012-07-27,16:34:32,222,import org.apache.hadoop.hbase.util.FSTableDescriptors;
cb6f2868583,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:05:53,223,import org.apache.hadoop.hbase.util.FSUtils;
57afee6a6bb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2012-07-27,16:34:32,224,import org.apache.hadoop.hbase.util.HFileArchiveUtil;
57afee6a6bb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2012-07-27,16:34:32,225,import org.apache.hadoop.hbase.util.HasThread;
57afee6a6bb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2012-07-27,16:34:32,226,import org.apache.hadoop.hbase.util.InfoServer;
b6ad121cb9a,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,ndimiduk,2013-09-24,22:11:09,227,import org.apache.hadoop.hbase.util.JvmPauseMonitor;
57afee6a6bb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2012-07-27,16:34:32,228,import org.apache.hadoop.hbase.util.Pair;
57afee6a6bb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2012-07-27,16:34:32,229,import org.apache.hadoop.hbase.util.Sleeper;
57afee6a6bb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2012-07-27,16:34:32,230,import org.apache.hadoop.hbase.util.Strings;
57afee6a6bb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2012-07-27,16:34:32,231,import org.apache.hadoop.hbase.util.Threads;
57afee6a6bb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2012-07-27,16:34:32,232,import org.apache.hadoop.hbase.util.VersionInfo;
57afee6a6bb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2012-07-27,16:34:32,233,import org.apache.hadoop.hbase.zookeeper.ClusterStatusTracker;
57afee6a6bb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2012-07-27,16:34:32,234,import org.apache.hadoop.hbase.zookeeper.DrainingServerTracker;
c9d3cb1c3b6,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,gchanan,2012-09-13,23:00:46,235,import org.apache.hadoop.hbase.zookeeper.LoadBalancerTracker;
dfe84fb1f9a,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,larsh,2013-06-24,20:29:07,236,import org.apache.hadoop.hbase.zookeeper.MasterAddressTracker;
57afee6a6bb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2012-07-27,16:34:32,237,import org.apache.hadoop.hbase.zookeeper.RegionServerTracker;
57afee6a6bb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2012-07-27,16:34:32,238,import org.apache.hadoop.hbase.zookeeper.ZKClusterId;
57afee6a6bb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2012-07-27,16:34:32,239,import org.apache.hadoop.hbase.zookeeper.ZKUtil;
6b46196c31d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,sershe,2013-05-18,01:40:48,240,import org.apache.hadoop.hbase.zookeeper.ZooKeeperListener;
57afee6a6bb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2012-07-27,16:34:32,241,import org.apache.hadoop.hbase.zookeeper.ZooKeeperWatcher;
57afee6a6bb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2012-07-27,16:34:32,242,import org.apache.hadoop.metrics.util.MBeanUtil;
57afee6a6bb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2012-07-27,16:34:32,243,import org.apache.hadoop.net.DNS;
57afee6a6bb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2012-07-27,16:34:32,244,import org.apache.zookeeper.KeeperException;
57afee6a6bb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2012-07-27,16:34:32,245,import org.apache.zookeeper.Watcher;
57afee6a6bb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2012-07-27,16:34:32,246,
040b53e09aa,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-17,05:43:06,247,import com.google.common.collect.Lists;
bb5c15894e3,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:36:03,248,import com.google.common.collect.Maps;
bb5c15894e3,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:36:03,249,import com.google.protobuf.Descriptors;
bb5c15894e3,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:36:03,250,import com.google.protobuf.Message;
bb5c15894e3,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:36:03,251,import com.google.protobuf.RpcCallback;
57afee6a6bb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2012-07-27,16:34:32,252,import com.google.protobuf.RpcController;
bb5c15894e3,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:36:03,253,import com.google.protobuf.Service;
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-03,06:20:26,254,import com.google.protobuf.ServiceException;
ebbdb536c7c,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Todd Lipcon,2010-06-21,20:36:39,255,
add0c0c5a02,src/java/org/apache/hadoop/hbase/HMaster.java,Doug Cutting,2007-05-07,19:58:53,256,/**
9b43b98449a,src/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2009-10-27,23:32:15,257," * HMaster is the ""master server"" for HBase. An HBase cluster has one active"
9b43b98449a,src/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2009-10-27,23:32:15,258," * master.  If many masters are started, all compete.  Whichever wins goes on to"
9b43b98449a,src/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2009-10-27,23:32:15,259, * run the cluster.  All others park themselves in their constructor until
9b43b98449a,src/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2009-10-27,23:32:15,260, * master or cluster shutdown or until the active master loses its lease in
9b43b98449a,src/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2009-10-27,23:32:15,261," * zookeeper.  Thereafter, all running master jostle to take over master role."
5b600805b56,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Ryan Rawson,2010-09-15,23:44:08,262, *
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,263, * <p>The Master can be asked shutdown the cluster. See {@link #shutdown()}.  In
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,264, * this case it will tell all regionservers to go down and then wait on them
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,265, * all reporting in that they are down.  This master will then shut itself down.
5b600805b56,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Ryan Rawson,2010-09-15,23:44:08,266, *
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,267, * <p>You can also shutdown just this master.  Call {@link #stopMaster()}.
5b600805b56,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Ryan Rawson,2010-09-15,23:44:08,268, *
9b43b98449a,src/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2009-10-27,23:32:15,269, * @see Watcher
add0c0c5a02,src/java/org/apache/hadoop/hbase/HMaster.java,Doug Cutting,2007-05-07,19:58:53,270, */
dace419238e,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-03-01,17:53:03,271,@InterfaceAudience.Private
57afee6a6bb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2012-07-27,16:34:32,272,"@SuppressWarnings(""deprecation"")"
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,273,"public class HMaster extends HasThread implements MasterProtos.MasterService.BlockingInterface,"
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-03,03:52:15,274,"RegionServerStatusProtos.RegionServerStatusService.BlockingInterface,"
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-03,03:52:15,275,"MasterServices, Server {"
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,276,  private static final Log LOG = LogFactory.getLog(HMaster.class.getName());
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,277,
9b43b98449a,src/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2009-10-27,23:32:15,278,  // MASTER is name of the webapp and the attribute name used stuffing this
9b43b98449a,src/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2009-10-27,23:32:15,279,  //instance into web context.
9b43b98449a,src/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2009-10-27,23:32:15,280,"  public static final String MASTER = ""master"";"
^948d0cdec4,src/java/org/apache/hadoop/hbase/HMaster.java,Doug Cutting,2007-04-03,20:34:28,281,
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,282,  // The configuration for the Master
3339e94e8d7,src/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2009-12-31,20:44:31,283,  private final Configuration conf;
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,284,  // server for the web ui
9b43b98449a,src/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2009-10-27,23:32:15,285,  private InfoServer infoServer;
196882e2cd6,core/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-05-03,19:53:39,286,
9b43b98449a,src/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2009-10-27,23:32:15,287,  // Our zk client.
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,288,  private ZooKeeperWatcher zooKeeper;
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,289,  // Manager and zk listener for master election
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,290,  private ActiveMasterManager activeMasterManager;
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,291,  // Region server tracker
47f4477f79a,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-05-14,22:55:11,292,  RegionServerTracker regionServerTracker;
92b57170e98,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-11-03,18:34:41,293,  // Draining region server tracker
92b57170e98,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-11-03,18:34:41,294,  private DrainingServerTracker drainingServerTracker;
c9d3cb1c3b6,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,gchanan,2012-09-13,23:00:46,295,  // Tracker for load balancer state
c9d3cb1c3b6,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,gchanan,2012-09-13,23:00:46,296,  private LoadBalancerTracker loadBalancerTracker;
6b2437de2cc,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2014-03-14,03:02:21,297,  // master address tracker
6b2437de2cc,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2014-03-14,03:02:21,298,  private MasterAddressTracker masterAddressTracker;
9b43b98449a,src/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2009-10-27,23:32:15,299,
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,300,  // RPC server for the HMaster
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-03,03:52:15,301,  private final RpcServerInterface rpcServer;
b6ad121cb9a,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,ndimiduk,2013-09-24,22:11:09,302,  private JvmPauseMonitor pauseMonitor;
327e2d1f743,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-03-22,00:02:36,303,  // Set after we\'ve called HBaseServer#openServer and ready to receive RPCs.
327e2d1f743,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-03-22,00:02:36,304,  // Set back to false after we stop rpcServer.  Used by tests.
327e2d1f743,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-03-22,00:02:36,305,  private volatile boolean rpcServerOpen = false;
529223130ab,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,23:12:42,306,
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,307,  /** Namespace stuff */
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,308,  private TableNamespaceManager tableNamespaceManager;
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,309,  private NamespaceJanitor namespaceJanitorChore;
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,310,
529223130ab,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,23:12:42,311,  /**
529223130ab,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,23:12:42,312,   * This servers address.
529223130ab,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,23:12:42,313,   */
529223130ab,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,23:12:42,314,  private final InetSocketAddress isa;
529223130ab,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,23:12:42,315,
0944bd9fb07,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-10-29,04:48:10,316,  // Metrics for the HMaster
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,eclark,2012-11-06,23:22:01,317,  private final MetricsMaster metricsMaster;
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,318,  // file system manager for the master FS operations
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,319,  private MasterFileSystem fileSystemManager;
931d452cb2c,src/java/org/apache/hadoop/hbase/HMaster.java,Jim Kellerman,2007-08-10,22:11:05,320,
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,321,  // server manager to deal with region server info
47f4477f79a,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-05-14,22:55:11,322,  ServerManager serverManager;
^948d0cdec4,src/java/org/apache/hadoop/hbase/HMaster.java,Doug Cutting,2007-04-03,20:34:28,323,
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,324,  // manager of assignment nodes in zookeeper
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,325,  AssignmentManager assignmentManager;
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,326,  // manager of catalog regions
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,327,  private CatalogTracker catalogTracker;
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,328,  // Cluster status zk tracker and local setter
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,329,  private ClusterStatusTracker clusterStatusTracker;
c9b028862a6,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-08-28,03:40:47,330,
48560e089c3,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Todd Lipcon,2011-08-30,19:27:24,331,"  // buffer for ""fatal error"" notices from region servers"
48560e089c3,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Todd Lipcon,2011-08-30,19:27:24,332,  // in the cluster. This is only used for assisting
48560e089c3,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Todd Lipcon,2011-08-30,19:27:24,333,  // operations/debugging.
48560e089c3,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Todd Lipcon,2011-08-30,19:27:24,334,  private MemoryBoundedLogMessageBuffer rsFatals;
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,335,
d153ec95da6,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-09-18,00:51:05,336,  // This flag is for stopping this Master instance.  Its set when we are
d153ec95da6,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-09-18,00:51:05,337,  // stopping or aborting
d153ec95da6,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-09-18,00:51:05,338,  private volatile boolean stopped = false;
d153ec95da6,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-09-18,00:51:05,339,  // Set on abort -- usually failure of our zk session.
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,340,  private volatile boolean abort = false;
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,341,  // flag set after we become the active master (used for testing)
5f7c8ca1b2b,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-18,19:08:50,342,  private volatile boolean isActiveMaster = false;
3ce9acc3e77,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-03-21,23:27:49,343,
3ce9acc3e77,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-03-21,23:27:49,344,"  // flag set after we complete initialization once active,"
3ce9acc3e77,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-03-21,23:27:49,345,  // it is not private since it\'s used in unit tests
3ce9acc3e77,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-03-21,23:27:49,346,  volatile boolean initialized = false;
3ce9acc3e77,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-03-21,23:27:49,347,
3a23adf5aba,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-03-08,22:37:19,348,  // flag set after we complete assignMeta.
05423b150bd,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-03-13,15:35:54,349,  private volatile boolean serverShutdownHandlerEnabled = false;
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,350,
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,351,  // Instance of the hbase executor service.
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,352,  ExecutorService executorService;
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,353,
e64108690eb,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jean-Daniel Cryans,2011-03-25,00:40:55,354,  private LoadBalancer balancer;
9ea9cba5b23,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-09-24,05:46:41,355,  private Thread balancerChore;
eddc746457d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-09-20,06:05:01,356,  private Thread clusterStatusChore;
17e604efbf7,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,nkeywal,2013-03-19,09:24:01,357,  private ClusterStatusPublisher clusterStatusPublisherChore = null;
e06e00450ef,core/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-05-07,19:26:45,358,
9570f3c9079,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-10-25,07:40:25,359,  private CatalogJanitor catalogJanitorChore;
66ca4976a8a,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-11-10,04:53:20,360,  private LogCleaner logCleaner;
ab96788641a,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,larsh,2012-07-22,01:11:36,361,  private HFileCleaner hfileCleaner;
9ea9cba5b23,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-09-24,05:46:41,362,
1229397a95c,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Gary Helmling,2010-12-21,20:39:26,363,  private MasterCoprocessorHost cpHost;
529223130ab,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,23:12:42,364,  private final ServerName serverName;
1229397a95c,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Gary Helmling,2010-12-21,20:39:26,365,
b0439269fe7,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-06-21,18:31:26,366,  private TableDescriptors tableDescriptors;
7a8c36be23e,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-11-21,17:29:32,367,
9bb04c741a0,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2013-02-22,00:15:52,368,  // Table level lock manager for schema changes
9bb04c741a0,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2013-02-22,00:15:52,369,  private TableLockManager tableLockManager;
9bb04c741a0,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2013-02-22,00:15:52,370,
d9c8e9954a2,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-12-18,00:04:23,371,  // Time stamps for when a hmaster was started and when it became active
d9c8e9954a2,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-12-18,00:04:23,372,  private long masterStartTime;
d9c8e9954a2,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-12-18,00:04:23,373,  private long masterActiveTime;
d9c8e9954a2,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-12-18,00:04:23,374,
9b572151857,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2012-04-06,03:46:04,375,  /** time interval for emitting metrics values */
9b572151857,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2012-04-06,03:46:04,376,  private final int msgInterval;
d7050d3541d,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-02-24,21:06:12,377,  /**
d7050d3541d,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-02-24,21:06:12,378,   * MX Bean for MasterInfo
d7050d3541d,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-02-24,21:06:12,379,   */
d7050d3541d,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-02-24,21:06:12,380,  private ObjectName mxBean = null;
d7050d3541d,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-02-24,21:06:12,381,
8a0b742b4d4,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-07-13,07:20:25,382,"  //should we check the compression codec type at master side, default true, HBASE-6370"
8a0b742b4d4,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-07-13,07:20:25,383,  private final boolean masterCheckCompression;
8a0b742b4d4,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-07-13,07:20:25,384,
a2788de6256,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-08-30,05:51:38,385,  private SpanReceiverHost spanReceiverHost;
eddc746457d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-09-20,06:05:01,386,
4c5928faf9f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-11-14,17:03:06,387,"  private Map<String, Service> coprocessorServiceHandlers = Maps.newHashMap();"
4c5928faf9f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-11-14,17:03:06,388,
cb6f2868583,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:05:53,389,  // monitor for snapshot of hbase tables
cb6f2868583,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:05:53,390,  private SnapshotManager snapshotManager;
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2014-01-22,01:42:49,391,  // monitor for distributed procedures
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2014-01-22,01:42:49,392,  private MasterProcedureManagerHost mpmHost;
cb6f2868583,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:05:53,393,
a1079157eca,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-01-03,02:12:24,394,  /** The health check chore. */
a1079157eca,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-01-03,02:12:24,395,  private HealthCheckChore healthCheckChore;
040b53e09aa,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-17,05:43:06,396,
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-15,04:24:02,397,  /**
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-15,04:24:02,398,"   * is in distributedLogReplay mode. When true, SplitLogWorker directly replays WAL edits to newly"
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-15,04:24:02,399,   * assigned region servers instead of creating recovered.edits files.
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-15,04:24:02,400,   */
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-15,04:24:02,401,  private final boolean distributedLogReplay;
a1079157eca,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-01-03,02:12:24,402,
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-15,04:24:02,403,  /** flag used in test cases in order to simulate RS failures during master initialization */
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-15,04:24:02,404,  private volatile boolean initializationBeforeMetaAssignment = false;
7f2b36e72f5,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,nkeywal,2013-03-07,10:08:57,405,
6b46196c31d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,sershe,2013-05-18,01:40:48,406,  /** The following is used in master recovery scenario to re-register listeners */
6b46196c31d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,sershe,2013-05-18,01:40:48,407,  private List<ZooKeeperListener> registeredZKListenersBeforeRecovery;
6b46196c31d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,sershe,2013-05-18,01:40:48,408,
e06e00450ef,core/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-05-07,19:26:45,409,  /**
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,410,   * Initializes the HMaster. The steps are as follows:
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,411,   * <p>
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,412,   * <ol>
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,413,   * <li>Initialize HMaster RPC and address
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,414,   * <li>Connect to ZooKeeper.
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,415,   * </ol>
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,416,   * <p>
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,417,   * Remaining steps of initialization occur in {@link #run()} so that they
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,418,   * run in their own thread rather than within the context of the constructor.
5b600805b56,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Ryan Rawson,2010-09-15,23:44:08,419,   * @throws InterruptedException
^948d0cdec4,src/java/org/apache/hadoop/hbase/HMaster.java,Doug Cutting,2007-04-03,20:34:28,420,   */
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,421,  public HMaster(final Configuration conf)
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,422,"  throws IOException, KeeperException, InterruptedException {"
9d172f9b96f,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2011-10-28,21:43:58,423,    this.conf = new Configuration(conf);
9d172f9b96f,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2011-10-28,21:43:58,424,    // Disable the block cache on the master
69b7530f600,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jean-Daniel Cryans,2011-12-13,21:55:36,425,"    this.conf.setFloat(HConstants.HFILE_BLOCK_CACHE_SIZE_KEY, 0.0f);"
871792162eb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-11-26,21:42:51,426,    FSUtils.setupShortCircuitRead(conf);
529223130ab,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,23:12:42,427,    // Server to handle client requests.
fa40ff35662,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jean-Daniel Cryans,2013-08-29,00:36:28,428,    String hostname = Strings.domainNamePointerToHostName(DNS.getDefaultHost(
fa40ff35662,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jean-Daniel Cryans,2013-08-29,00:36:28,429,"      conf.get(""hbase.master.dns.interface"", ""default""),"
fa40ff35662,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jean-Daniel Cryans,2013-08-29,00:36:28,430,"      conf.get(""hbase.master.dns.nameserver"", ""default"")));"
529223130ab,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,23:12:42,431,"    int port = conf.getInt(HConstants.MASTER_PORT, HConstants.DEFAULT_MASTER_PORT);"
dccb58a92dc,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jean-Daniel Cryans,2013-03-21,23:51:50,432,    // Test that the hostname is reachable
529223130ab,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,23:12:42,433,"    InetSocketAddress initialIsa = new InetSocketAddress(hostname, port);"
529223130ab,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,23:12:42,434,    if (initialIsa.getAddress() == null) {
dccb58a92dc,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jean-Daniel Cryans,2013-03-21,23:51:50,435,"      throw new IllegalArgumentException(""Failed resolve of hostname "" + initialIsa);"
dccb58a92dc,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jean-Daniel Cryans,2013-03-21,23:51:50,436,    }
fa40ff35662,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jean-Daniel Cryans,2013-08-29,00:36:28,437,    // Verify that the bind address is reachable if set
fa40ff35662,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jean-Daniel Cryans,2013-08-29,00:36:28,438,"    String bindAddress = conf.get(""hbase.master.ipc.address"");"
fa40ff35662,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jean-Daniel Cryans,2013-08-29,00:36:28,439,    if (bindAddress != null) {
fa40ff35662,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jean-Daniel Cryans,2013-08-29,00:36:28,440,"      initialIsa = new InetSocketAddress(bindAddress, port);"
fa40ff35662,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jean-Daniel Cryans,2013-08-29,00:36:28,441,      if (initialIsa.getAddress() == null) {
fa40ff35662,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jean-Daniel Cryans,2013-08-29,00:36:28,442,"        throw new IllegalArgumentException(""Failed resolve of bind address "" + initialIsa);"
fa40ff35662,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jean-Daniel Cryans,2013-08-29,00:36:28,443,      }
fa40ff35662,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jean-Daniel Cryans,2013-08-29,00:36:28,444,    }
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-03,03:52:15,445,"    String name = ""master/"" + initialIsa.toString();"
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-03,03:52:15,446,    // Set how many times to retry talking to another server over HConnection.
74ab28497de,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,sershe,2014-02-10,04:16:34,447,"    ConnectionUtils.setServerSideHConnectionRetriesConfig(this.conf, name, LOG);"
25e14c8b482,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2013-07-18,18:26:04,448,"    int numHandlers = conf.getInt(HConstants.MASTER_HANDLER_COUNT,"
25e14c8b482,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2013-07-18,18:26:04,449,"      conf.getInt(HConstants.REGION_SERVER_HANDLER_COUNT, HConstants.DEFAULT_MASTER_HANLDER_COUNT));"
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-03,03:52:15,450,"    this.rpcServer = new RpcServer(this, name, getServices(),"
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-03,03:52:15,451,"      initialIsa, // BindAddress is IP we got for this server."
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-03,03:52:15,452,"      conf,"
aaf04f7ea07,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-13,21:18:42,453,"      new FifoRpcScheduler(conf, numHandlers));"
529223130ab,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,23:12:42,454,    // Set our address.
529223130ab,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,23:12:42,455,    this.isa = this.rpcServer.getListenerAddress();
fa40ff35662,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jean-Daniel Cryans,2013-08-29,00:36:28,456,    // We don\'t want to pass isa\'s hostname here since it could be 0.0.0.0
bc7c3c7daaa,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,nkeywal,2013-11-20,20:02:25,457,"    this.serverName = ServerName.valueOf(hostname, this.isa.getPort(), System.currentTimeMillis());"
48560e089c3,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Todd Lipcon,2011-08-30,19:27:24,458,    this.rsFatals = new MemoryBoundedLogMessageBuffer(
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-03,03:52:15,459,"      conf.getLong(""hbase.master.buffer.for.rs.fatals"", 1*1024*1024));"
4321ef55467,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-07-22,21:58:44,460,
47775d321dc,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-12-18,00:55:03,461,    // login the zookeeper client principal (if using security)
47775d321dc,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-12-18,00:55:03,462,"    ZKUtil.loginClient(this.conf, ""hbase.zookeeper.client.keytab.file"","
47775d321dc,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-12-18,00:55:03,463,"      ""hbase.zookeeper.client.kerberos.principal"", this.isa.getHostName());"
47775d321dc,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-12-18,00:55:03,464,
4d28e95a618,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Gary Helmling,2011-03-05,01:10:07,465,    // initialize server principal (if using secure Hadoop)
e5e5dac9a71,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jyates,2013-10-30,00:02:52,466,    UserProvider provider = UserProvider.instantiate(conf);
e5e5dac9a71,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jyates,2013-10-30,00:02:52,467,"    provider.login(""hbase.master.keytab.file"","
529223130ab,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,23:12:42,468,"      ""hbase.master.kerberos.principal"", this.isa.getHostName());"
4d28e95a618,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Gary Helmling,2011-03-05,01:10:07,469,
970b111774e,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-12-05,23:13:30,470,"    LOG.info(""hbase.rootdir="" + FSUtils.getRootDir(this.conf) +"
970b111774e,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-12-05,23:13:30,471,"        "", hbase.cluster.distributed="" + this.conf.getBoolean(""hbase.cluster.distributed"", false));"
970b111774e,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-12-05,23:13:30,472,
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,473,    // set the thread name now we have an address
b5bdfb6f3f2,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-06-05,23:16:20,474,"    setName(MASTER + "":"" + this.serverName.toShortString());"
4321ef55467,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-07-22,21:58:44,475,
39330cff754,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jean-Daniel Cryans,2010-12-15,19:47:09,476,    Replication.decorateMasterConfiguration(this.conf);
4dce2b26bfb,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Ryan Rawson,2010-11-09,02:02:27,477,
5b600805b56,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Ryan Rawson,2010-09-15,23:44:08,478,    // Hack! Maps DFSClient => Master for logs.  HDFS made this
4321ef55467,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-07-22,21:58:44,479,"    // config param for task trackers, but we can piggyback off of it."
4321ef55467,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-07-22,21:58:44,480,"    if (this.conf.get(""mapred.task.id"") == null) {"
529223130ab,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,23:12:42,481,"      this.conf.set(""mapred.task.id"", ""hb_m_"" + this.serverName.toString());"
4321ef55467,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-07-22,21:58:44,482,    }
e0e0d94f971,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Gary Helmling,2011-11-18,07:34:43,483,
5e4f28c2892,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-07-29,13:46:11,484,"    this.zooKeeper = new ZooKeeperWatcher(conf, MASTER + "":"" + isa.getPort(), this, true);"
e0e0d94f971,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Gary Helmling,2011-11-18,07:34:43,485,    this.rpcServer.startThreads();
b6ad121cb9a,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,ndimiduk,2013-09-24,22:11:09,486,    this.pauseMonitor = new JvmPauseMonitor(conf);
b6ad121cb9a,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,ndimiduk,2013-09-24,22:11:09,487,    this.pauseMonitor.start();
93e03d7d09d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-08-27,22:39:23,488,
9b572151857,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2012-04-06,03:46:04,489,    // metrics interval: using the same property as region server.
9b572151857,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2012-04-06,03:46:04,490,"    this.msgInterval = conf.getInt(""hbase.regionserver.msginterval"", 3 * 1000);"
8a0b742b4d4,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-07-13,07:20:25,491,
8a0b742b4d4,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-07-13,07:20:25,492,"    //should we check the compression codec type at master side, default true, HBASE-6370"
8a0b742b4d4,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-07-13,07:20:25,493,"    this.masterCheckCompression = conf.getBoolean(""hbase.master.check.compression"", true);"
93e03d7d09d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-08-27,22:39:23,494,
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,eclark,2012-11-06,23:22:01,495,    this.metricsMaster = new MetricsMaster( new MetricsMasterWrapperImpl(this));
a1079157eca,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-01-03,02:12:24,496,
a1079157eca,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-01-03,02:12:24,497,    // Health checker thread.
a1079157eca,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-01-03,02:12:24,498,"    int sleepTime = this.conf.getInt(HConstants.HEALTH_CHORE_WAKE_FREQ,"
a1079157eca,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-01-03,02:12:24,499,      HConstants.DEFAULT_THREAD_WAKE_FREQUENCY);
a1079157eca,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-01-03,02:12:24,500,    if (isHealthCheckerConfigured()) {
a1079157eca,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-01-03,02:12:24,501,"      healthCheckChore = new HealthCheckChore(sleepTime, this, getConfiguration());"
a1079157eca,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-01-03,02:12:24,502,    }
17e604efbf7,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,nkeywal,2013-03-19,09:24:01,503,
17e604efbf7,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,nkeywal,2013-03-19,09:24:01,504,    // Do we publish the status?
9de84022810,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,nkeywal,2013-09-09,08:53:29,505,"    boolean shouldPublish = conf.getBoolean(HConstants.STATUS_PUBLISHED,"
9de84022810,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,nkeywal,2013-09-09,08:53:29,506,        HConstants.STATUS_PUBLISHED_DEFAULT);
17e604efbf7,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,nkeywal,2013-03-19,09:24:01,507,    Class<? extends ClusterStatusPublisher.Publisher> publisherClass =
17e604efbf7,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,nkeywal,2013-03-19,09:24:01,508,"        conf.getClass(ClusterStatusPublisher.STATUS_PUBLISHER_CLASS,"
17e604efbf7,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,nkeywal,2013-03-19,09:24:01,509,"            ClusterStatusPublisher.DEFAULT_STATUS_PUBLISHER_CLASS,"
17e604efbf7,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,nkeywal,2013-03-19,09:24:01,510,            ClusterStatusPublisher.Publisher.class);
17e604efbf7,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,nkeywal,2013-03-19,09:24:01,511,
9de84022810,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,nkeywal,2013-09-09,08:53:29,512,    if (shouldPublish) {
9de84022810,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,nkeywal,2013-09-09,08:53:29,513,      if (publisherClass == null) {
9de84022810,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,nkeywal,2013-09-09,08:53:29,514,"        LOG.warn(HConstants.STATUS_PUBLISHED + "" is true, but "" +"
9de84022810,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,nkeywal,2013-09-09,08:53:29,515,            ClusterStatusPublisher.DEFAULT_STATUS_PUBLISHER_CLASS +
9de84022810,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,nkeywal,2013-09-09,08:53:29,516,"            "" is not set - not publishing status"");"
9de84022810,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,nkeywal,2013-09-09,08:53:29,517,      } else {
9de84022810,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,nkeywal,2013-09-09,08:53:29,518,"        clusterStatusPublisherChore = new ClusterStatusPublisher(this, conf, publisherClass);"
9de84022810,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,nkeywal,2013-09-09,08:53:29,519,        Threads.setDaemonThreadRunning(clusterStatusPublisherChore.getThread());
9de84022810,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,nkeywal,2013-09-09,08:53:29,520,      }
17e604efbf7,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,nkeywal,2013-03-19,09:24:01,521,    }
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-15,04:24:02,522,
040b53e09aa,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-17,05:43:06,523,"    distributedLogReplay = this.conf.getBoolean(HConstants.DISTRIBUTED_LOG_REPLAY_KEY,"
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-15,04:24:02,524,      HConstants.DEFAULT_DISTRIBUTED_LOG_REPLAY_CONFIG);
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,525,  }
1d58b8a3bfe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-09-11,19:48:02,526,
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-03,03:52:15,527,  /**
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-03,03:52:15,528,   * @return list of blocking services and their security info classes that this server supports
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-03,03:52:15,529,   */
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-03,03:52:15,530,  private List<BlockingServiceAndInterface> getServices() {
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-03,03:52:15,531,    List<BlockingServiceAndInterface> bssi = new ArrayList<BlockingServiceAndInterface>(3);
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-03,03:52:15,532,    bssi.add(new BlockingServiceAndInterface(
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,533,"        MasterProtos.MasterService.newReflectiveBlockingService(this),"
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,534,        MasterProtos.MasterService.BlockingInterface.class));
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-03,03:52:15,535,    bssi.add(new BlockingServiceAndInterface(
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-03,03:52:15,536,"        RegionServerStatusProtos.RegionServerStatusService.newReflectiveBlockingService(this),"
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-03,03:52:15,537,        RegionServerStatusProtos.RegionServerStatusService.BlockingInterface.class));
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-03,03:52:15,538,    return bssi;
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-03,03:52:15,539,  }
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-03,03:52:15,540,
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,541,  /**
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,542,   * Stall startup if we are designated a backup master; i.e. we want someone
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,543,   * else to become the master before proceeding.
17e604efbf7,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,nkeywal,2013-03-19,09:24:01,544,   * @param c configuration
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,545,   * @param amm
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,546,   * @throws InterruptedException
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,547,   */
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,548,"  private static void stallIfBackupMaster(final Configuration c,"
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,549,      final ActiveMasterManager amm)
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,550,  throws InterruptedException {
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,551,"    // If we\'re a backup master, stall until a primary to writes his address"
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,552,"    if (!c.getBoolean(HConstants.MASTER_TYPE_BACKUP,"
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,553,      HConstants.DEFAULT_MASTER_TYPE_BACKUP)) {
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,554,      return;
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,555,    }
368e9c4d19d,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-19,22:52:00,556,"    LOG.debug(""HMaster started in backup mode.  "" +"
368e9c4d19d,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-19,22:52:00,557,"      ""Stalling until master znode is written."");"
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,558,"    // This will only be a minute or so while the cluster starts up,"
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,559,    // so don\'t worry about setting watches on the parent znode
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,560,    while (!amm.isActiveMaster()) {
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,561,"      LOG.debug(""Waiting for master address ZNode to be written "" +"
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,562,"        ""(Also watching cluster state node)"");"
5807515e54c,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-12-28,19:19:06,563,      Thread.sleep(
5807515e54c,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-12-28,19:19:06,564,"        c.getInt(HConstants.ZK_SESSION_TIMEOUT, HConstants.DEFAULT_ZK_SESSION_TIMEOUT));"
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,565,    }
c9b028862a6,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-08-28,03:40:47,566,
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,567,  }
58c4f2df98f,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-09-29,22:37:50,568,
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,eclark,2012-11-06,23:22:01,569,  MetricsMaster getMetrics() {
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,eclark,2012-11-06,23:22:01,570,    return metricsMaster;
efe471f74b0,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-08-02,16:58:35,571,  }
efe471f74b0,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-08-02,16:58:35,572,
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,573,  /**
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,574,   * Main processing loop for the HMaster.
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,575,   * <ol>
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,576,   * <li>Block until becoming active master
3c764b1e057,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-10-25,06:51:28,577,   * <li>Finish initialization via finishInitialization(MonitoredTask)
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,578,   * <li>Enter loop until we are stopped
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,579,   * <li>Stop services and perform cleanup once stopped
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,580,   * </ol>
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,581,   */
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,582,  @Override
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,583,  public void run() {
ca952ac00bf,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Todd Lipcon,2011-05-03,06:11:06,584,    MonitoredTask startupStatus =
ca952ac00bf,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Todd Lipcon,2011-05-03,06:11:06,585,"      TaskMonitor.get().createStatus(""Master startup"");"
ca952ac00bf,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Todd Lipcon,2011-05-03,06:11:06,586,"    startupStatus.setDescription(""Master startup"");"
c7781e9a37f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-09-29,17:57:49,587,    masterStartTime = System.currentTimeMillis();
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,588,    try {
6b2437de2cc,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2014-03-14,03:02:21,589,"      this.masterAddressTracker = new MasterAddressTracker(getZooKeeperWatcher(), this);"
6b2437de2cc,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2014-03-14,03:02:21,590,      this.masterAddressTracker.start();
dfe84fb1f9a,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,larsh,2013-06-24,20:29:07,591,
dfe84fb1f9a,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,larsh,2013-06-24,20:29:07,592,      // Put up info server.
0e47eb67ffc,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2014-01-17,17:37:25,593,"      int port = this.conf.getInt(""hbase.master.info.port"", HConstants.DEFAULT_MASTER_INFOPORT);"
dfe84fb1f9a,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,larsh,2013-06-24,20:29:07,594,      if (port >= 0) {
dfe84fb1f9a,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,larsh,2013-06-24,20:29:07,595,"        String a = this.conf.get(""hbase.master.info.bindAddress"", ""0.0.0.0"");"
dfe84fb1f9a,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,larsh,2013-06-24,20:29:07,596,"        this.infoServer = new InfoServer(MASTER, a, port, false, this.conf);"
dfe84fb1f9a,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,larsh,2013-06-24,20:29:07,597,"        this.infoServer.addServlet(""status"", ""/master-status"", MasterStatusServlet.class);"
dfe84fb1f9a,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,larsh,2013-06-24,20:29:07,598,"        this.infoServer.addServlet(""dump"", ""/dump"", MasterDumpServlet.class);"
dfe84fb1f9a,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,larsh,2013-06-24,20:29:07,599,"        this.infoServer.setAttribute(MASTER, this);"
dfe84fb1f9a,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,larsh,2013-06-24,20:29:07,600,        this.infoServer.start();
dfe84fb1f9a,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,larsh,2013-06-24,20:29:07,601,      }
dfe84fb1f9a,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,larsh,2013-06-24,20:29:07,602,
f8f0a927e3c,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jeffreyz,2013-11-12,03:14:31,603,      this.registeredZKListenersBeforeRecovery = this.zooKeeper.getListeners();
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,604,      /*
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,605,       * Block on becoming the active master.
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,606,       *
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,607,       * We race with other masters to write our address into ZooKeeper.  If we
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,608,"       * succeed, we are the primary/active master and finish initialization."
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,609,       *
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,610,"       * If we do not succeed, there is another active master and we should"
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,611,       * now wait until it dies to try and become the next active master.  If we
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,612,"       * do not succeed on our first attempt, this is no longer a cluster startup."
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,613,       */
ca952ac00bf,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Todd Lipcon,2011-05-03,06:11:06,614,      becomeActiveMaster(startupStatus);
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,615,
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,616,      // We are either the active master or we were asked to shutdown
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,617,      if (!this.stopped) {
fc4d7d7a591,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,ramkrishna,2012-06-05,16:39:04,618,"        finishInitialization(startupStatus, false);"
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,619,        loop();
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,620,      }
f36d48b0454,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-10-22,19:54:21,621,    } catch (Throwable t) {
4317892dcec,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2012-04-06,16:03:42,622,      // HBASE-5680: Likely hadoop23 vs hadoop 20.x/1.x incompatibility
c9b028862a6,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-08-28,03:40:47,623,      if (t instanceof NoClassDefFoundError &&
4317892dcec,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2012-04-06,16:03:42,624,"          t.getMessage().contains(""org/apache/hadoop/hdfs/protocol/FSConstants$SafeModeAction"")) {"
4317892dcec,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2012-04-06,16:03:42,625,          // improved error message for this special case
4317892dcec,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2012-04-06,16:03:42,626,"          abort(""HBase is having a problem with its Hadoop jars.  You may need to """
4317892dcec,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2012-04-06,16:03:42,627,"              + ""recompile HBase against Hadoop version """
4317892dcec,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2012-04-06,16:03:42,628,              +  org.apache.hadoop.util.VersionInfo.getVersion()
4317892dcec,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2012-04-06,16:03:42,629,"              + "" or change your hadoop jars to start properly"", t);"
4317892dcec,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2012-04-06,16:03:42,630,      } else {
4317892dcec,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2012-04-06,16:03:42,631,"        abort(""Unhandled exception. Starting shutdown."", t);"
4317892dcec,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2012-04-06,16:03:42,632,      }
f36d48b0454,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-10-22,19:54:21,633,    } finally {
ca952ac00bf,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Todd Lipcon,2011-05-03,06:11:06,634,      startupStatus.cleanup();
c9b028862a6,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-08-28,03:40:47,635,
f36d48b0454,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-10-22,19:54:21,636,      stopChores();
f36d48b0454,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-10-22,19:54:21,637,      // Wait for all the remaining region servers to report in IFF we were
f36d48b0454,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-10-22,19:54:21,638,      // running a cluster shutdown AND we were NOT aborting.
afeb06a5aae,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-11-10,05:35:51,639,      if (!this.abort && this.serverManager != null &&
afeb06a5aae,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-11-10,05:35:51,640,          this.serverManager.isClusterShutdown()) {
f36d48b0454,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-10-22,19:54:21,641,        this.serverManager.letRegionServersShutdown();
f36d48b0454,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-10-22,19:54:21,642,      }
f36d48b0454,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-10-22,19:54:21,643,      stopServiceThreads();
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,644,      // Stop services started for both backup and active masters
f36d48b0454,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-10-22,19:54:21,645,      if (this.activeMasterManager != null) this.activeMasterManager.stop();
3523b66eece,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-28,21:31:58,646,      if (this.catalogTracker != null) this.catalogTracker.stop();
3523b66eece,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-28,21:31:58,647,      if (this.serverManager != null) this.serverManager.stop();
3523b66eece,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-28,21:31:58,648,      if (this.assignmentManager != null) this.assignmentManager.stop();
04ac5314bdb,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-18,17:16:15,649,      if (this.fileSystemManager != null) this.fileSystemManager.stop();
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2014-01-22,01:42:49,650,"      if (this.mpmHost != null) this.mpmHost.stop(""server shutting down."");"
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,651,      this.zooKeeper.close();
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,652,    }
f36d48b0454,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-10-22,19:54:21,653,"    LOG.info(""HMaster main thread exiting"");"
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,654,  }
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,655,
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,656,  /**
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,657,   * Try becoming active master.
c9b028862a6,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-08-28,03:40:47,658,   * @param startupStatus
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,659,   * @return True if we could successfully become the active master.
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,660,   * @throws InterruptedException
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,661,   */
ca952ac00bf,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Todd Lipcon,2011-05-03,06:11:06,662,  private boolean becomeActiveMaster(MonitoredTask startupStatus)
ca952ac00bf,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Todd Lipcon,2011-05-03,06:11:06,663,  throws InterruptedException {
52033a212f2,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,23:43:45,664,"    // TODO: This is wrong!!!! Should have new servername if we restart ourselves,"
52033a212f2,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,23:43:45,665,    // if we come back to life.
52033a212f2,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,23:43:45,666,"    this.activeMasterManager = new ActiveMasterManager(zooKeeper, this.serverName,"
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,667,        this);
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,668,    this.zooKeeper.registerListener(activeMasterManager);
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,669,"    stallIfBackupMaster(this.conf, this.activeMasterManager);"
35a36c2c666,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-03-09,14:47:16,670,
35a36c2c666,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-03-09,14:47:16,671,    // The ClusterStatusTracker is setup before the other
35a36c2c666,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-03-09,14:47:16,672,    // ZKBasedSystemTrackers because it\'s needed by the activeMasterManager
35a36c2c666,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-03-09,14:47:16,673,    // to check if the cluster should be shutdown.
35a36c2c666,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-03-09,14:47:16,674,"    this.clusterStatusTracker = new ClusterStatusTracker(getZooKeeper(), this);"
35a36c2c666,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-03-09,14:47:16,675,    this.clusterStatusTracker.start();
f729fcd4ec4,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jean-Daniel Cryans,2013-05-15,17:54:30,676,    return this.activeMasterManager.blockUntilBecomingActiveMaster(startupStatus);
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,677,  }
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,678,
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,679,  /**
ed76ba8de34,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2011-10-24,23:18:04,680,   * Initialize all ZK based system trackers.
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,681,   * @throws IOException
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,682,   * @throws InterruptedException
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,683,   */
47f4477f79a,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-05-14,22:55:11,684,"  void initializeZKBasedSystemTrackers() throws IOException,"
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,685,"      InterruptedException, KeeperException {"
ec117ea67de,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,larsh,2013-01-16,22:10:46,686,"    this.catalogTracker = createCatalogTracker(this.zooKeeper, this.conf, this);"
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,687,    this.catalogTracker.start();
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,688,
f5105f50850,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-08-23,21:05:38,689,    this.balancer = LoadBalancerFactory.getLoadBalancer(conf);
c9d3cb1c3b6,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,gchanan,2012-09-13,23:00:46,690,"    this.loadBalancerTracker = new LoadBalancerTracker(zooKeeper, this);"
c9d3cb1c3b6,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,gchanan,2012-09-13,23:00:46,691,    this.loadBalancerTracker.start();
13b35ce82c5,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,ramkrishna,2012-04-19,18:05:31,692,"    this.assignmentManager = new AssignmentManager(this, serverManager,"
9bb04c741a0,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2013-02-22,00:15:52,693,"      this.catalogTracker, this.balancer, this.executorService, this.metricsMaster,"
9bb04c741a0,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2013-02-22,00:15:52,694,      this.tableLockManager);
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,695,    zooKeeper.registerListenerFirst(assignmentManager);
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,696,
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,697,"    this.regionServerTracker = new RegionServerTracker(zooKeeper, this,"
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,698,        this.serverManager);
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,699,    this.regionServerTracker.start();
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,700,
92b57170e98,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-11-03,18:34:41,701,"    this.drainingServerTracker = new DrainingServerTracker(zooKeeper, this,"
92b57170e98,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-11-03,18:34:41,702,      this.serverManager);
92b57170e98,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-11-03,18:34:41,703,    this.drainingServerTracker.start();
92b57170e98,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-11-03,18:34:41,704,
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,705,"    // Set the cluster as up.  If new RSs, they\'ll be waiting on this before"
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,706,    // going ahead with their startup.
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,707,    boolean wasUp = this.clusterStatusTracker.isClusterUp();
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,708,    if (!wasUp) this.clusterStatusTracker.setClusterUp();
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,709,
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-03,03:52:15,710,"    LOG.info(""Server active/primary master="" + this.serverName +"
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,711,"        "", sessionid=0x"" +"
b11659d6795,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-07-28,06:44:27,712,        Long.toHexString(this.zooKeeper.getRecoverableZooKeeper().getSessionId()) +
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-03,03:52:15,713,"        "", setting cluster-up flag (Was="" + wasUp + "")"");"
cb6f2868583,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:05:53,714,
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2014-01-22,01:42:49,715,    // create/initialize the snapshot manager and other procedure managers
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2014-01-22,01:42:49,716,    this.snapshotManager = new SnapshotManager();
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2014-01-22,01:42:49,717,    this.mpmHost = new MasterProcedureManagerHost();
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2014-01-22,01:42:49,718,    this.mpmHost.register(this.snapshotManager);
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2014-01-22,01:42:49,719,    this.mpmHost.loadProcedures(conf);
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2014-01-22,01:42:49,720,"    this.mpmHost.initialize(this, this.metricsMaster);"
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,721,  }
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,722,
327e2d1f743,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-03-22,00:02:36,723,  /**
327e2d1f743,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-03-22,00:02:36,724,   * Create CatalogTracker.
327e2d1f743,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-03-22,00:02:36,725,   * In its own method so can intercept and mock it over in tests.
327e2d1f743,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-03-22,00:02:36,726,"   * @param zk If zk is null, we\'ll create an instance (and shut it down"
07d670920e2,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,nkeywal,2012-12-16,09:58:29,727,   * when {@link #stop(String)} is called) else we\'ll use what is passed.
327e2d1f743,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-03-22,00:02:36,728,   * @param conf
327e2d1f743,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-03-22,00:02:36,729,   * @param abortable If fatal exception we\'ll call abort on this.  May be null.
327e2d1f743,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-03-22,00:02:36,730,   * If it is we\'ll use the Connection associated with the passed
327e2d1f743,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-03-22,00:02:36,731,   * {@link Configuration} as our {@link Abortable}.
327e2d1f743,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-03-22,00:02:36,732,   * ({@link Object#wait(long)} when passed a <code>0</code> waits for ever).
327e2d1f743,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-03-22,00:02:36,733,   * @throws IOException
327e2d1f743,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-03-22,00:02:36,734,   */
327e2d1f743,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-03-22,00:02:36,735,"  CatalogTracker createCatalogTracker(final ZooKeeperWatcher zk,"
ec117ea67de,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,larsh,2013-01-16,22:10:46,736,"      final Configuration conf, Abortable abortable)"
327e2d1f743,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-03-22,00:02:36,737,  throws IOException {
ec117ea67de,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,larsh,2013-01-16,22:10:46,738,"    return new CatalogTracker(zk, conf, abortable);"
327e2d1f743,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-03-22,00:02:36,739,  }
327e2d1f743,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-03-22,00:02:36,740,
772ecdd2368,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-03-22,03:40:46,741,  // Check if we should stop every 100ms
327e2d1f743,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-03-22,00:02:36,742,"  private Sleeper stopSleeper = new Sleeper(100, this);"
9b572151857,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2012-04-06,03:46:04,743,
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,744,  private void loop() {
9b572151857,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2012-04-06,03:46:04,745,    long lastMsgTs = 0l;
9b572151857,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2012-04-06,03:46:04,746,    long now = 0l;
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,747,    while (!this.stopped) {
c7781e9a37f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-09-29,17:57:49,748,      now = System.currentTimeMillis();
9b572151857,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2012-04-06,03:46:04,749,      if ((now - lastMsgTs) >= this.msgInterval) {
9b572151857,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2012-04-06,03:46:04,750,        doMetrics();
c7781e9a37f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-09-29,17:57:49,751,        lastMsgTs = System.currentTimeMillis();
9b572151857,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2012-04-06,03:46:04,752,      }
23532b3538c,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-11-22,01:04:40,753,      stopSleeper.sleep();
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,754,    }
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,755,  }
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,756,
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,757,  /**
9b572151857,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2012-04-06,03:46:04,758,"   * Emit the HMaster metrics, such as region in transition metrics."
9b572151857,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2012-04-06,03:46:04,759,   * Surrounding in a try block just to be sure metrics doesn\'t abort HMaster.
9b572151857,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2012-04-06,03:46:04,760,   */
9b572151857,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2012-04-06,03:46:04,761,  private void doMetrics() {
9b572151857,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2012-04-06,03:46:04,762,    try {
9b572151857,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2012-04-06,03:46:04,763,      this.assignmentManager.updateRegionsInTransitionMetrics();
9b572151857,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2012-04-06,03:46:04,764,    } catch (Throwable e) {
9b572151857,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2012-04-06,03:46:04,765,"      LOG.error(""Couldn\'t update metrics: "" + e.getMessage());"
9b572151857,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2012-04-06,03:46:04,766,    }
9b572151857,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2012-04-06,03:46:04,767,  }
9b572151857,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2012-04-06,03:46:04,768,
fc4d7d7a591,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,ramkrishna,2012-06-05,16:39:04,769,  /**
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,770,   * Finish initialization of HMaster after becoming the primary master.
c9b028862a6,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-08-28,03:40:47,771,   *
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,772,   * <ol>
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,773,"   * <li>Initialize master components - file system manager, server manager,"
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,774,"   *     assignment manager, region server tracker, catalog tracker, etc</li>"
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,775,"   * <li>Start necessary service threads - rpc server, info server,"
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,776,"   *     executor services, etc</li>"
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,777,   * <li>Set cluster as UP in ZooKeeper</li>
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,778,   * <li>Wait for RegionServers to check-in</li>
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,779,"   * <li>Split logs and perform data recovery, if necessary</li>"
3a23adf5aba,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-03-08,22:37:19,780,   * <li>Ensure assignment of meta regions<li>
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,781,   * <li>Handle either fresh cluster start or master failover</li>
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,782,   * </ol>
c9b028862a6,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-08-28,03:40:47,783,   *
fc4d7d7a591,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,ramkrishna,2012-06-05,16:39:04,784,   * @param masterRecovery
c9b028862a6,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-08-28,03:40:47,785,   *
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,786,   * @throws IOException
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,787,   * @throws InterruptedException
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,788,   * @throws KeeperException
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,789,   */
fc4d7d7a591,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,ramkrishna,2012-06-05,16:39:04,790,"  private void finishInitialization(MonitoredTask status, boolean masterRecovery)"
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,791,"  throws IOException, InterruptedException, KeeperException {"
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,792,
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,793,    isActiveMaster = true;
1d58b8a3bfe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-09-11,19:48:02,794,
d153ec95da6,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-09-18,00:51:05,795,    /*
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,796,     * We are active master now... go initialize components we need to run.
d153ec95da6,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-09-18,00:51:05,797,"     * Note, there may be dross in zk from previous runs; it\'ll get addressed"
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,798,     * below after we determine if cluster startup or failover.
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,799,     */
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,800,
ca952ac00bf,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Todd Lipcon,2011-05-03,06:11:06,801,"    status.setStatus(""Initializing Master file system"");"
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,802,
c7781e9a37f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-09-29,17:57:49,803,    this.masterActiveTime = System.currentTimeMillis();
d153ec95da6,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-09-18,00:51:05,804,"    // TODO: Do this using Dependency Injection, using PicoContainer, Guice or Spring."
01bdee029af,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,eclark,2013-08-15,22:04:24,805,"    this.fileSystemManager = new MasterFileSystem(this, this, masterRecovery);"
b0439269fe7,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-06-21,18:31:26,806,
b0439269fe7,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-06-21,18:31:26,807,    this.tableDescriptors =
b0439269fe7,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-06-21,18:31:26,808,"      new FSTableDescriptors(this.fileSystemManager.getFileSystem(),"
b0439269fe7,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-06-21,18:31:26,809,      this.fileSystemManager.getRootDir());
ca952ac00bf,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Todd Lipcon,2011-05-03,06:11:06,810,
ef3073c22d1,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Gary Helmling,2011-04-06,04:53:47,811,    // publish cluster ID
ca952ac00bf,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Todd Lipcon,2011-05-03,06:11:06,812,"    status.setStatus(""Publishing Cluster ID in ZooKeeper"");"
373270dd773,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-18,20:20:33,813,"    ZKClusterId.setClusterId(this.zooKeeper, fileSystemManager.getClusterId());"
ef3073c22d1,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Gary Helmling,2011-04-06,04:53:47,814,
fc4d7d7a591,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,ramkrishna,2012-06-05,16:39:04,815,    if (!masterRecovery) {
a71464bf842,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-06-19,04:48:04,816,      this.executorService = new ExecutorService(getServerName().toShortString());
fc4d7d7a591,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,ramkrishna,2012-06-05,16:39:04,817,"      this.serverManager = createServerManager(this, this);"
fc4d7d7a591,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,ramkrishna,2012-06-05,16:39:04,818,    }
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,819,
54c5d944aec,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2013-03-17,16:55:01,820,"    //Initialize table lock manager, and ensure that all write locks held previously"
54c5d944aec,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2013-03-17,16:55:01,821,    //are invalidated
54c5d944aec,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2013-03-17,16:55:01,822,"    this.tableLockManager = TableLockManager.createTableLockManager(conf, zooKeeper, serverName);"
54c5d944aec,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2013-03-17,16:55:01,823,    if (!masterRecovery) {
af834c404f7,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2013-04-12,22:30:47,824,      this.tableLockManager.reapWriteLocks();
54c5d944aec,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2013-03-17,16:55:01,825,    }
54c5d944aec,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2013-03-17,16:55:01,826,
ca952ac00bf,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Todd Lipcon,2011-05-03,06:11:06,827,"    status.setStatus(""Initializing ZK system trackers"");"
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,828,    initializeZKBasedSystemTrackers();
931d452cb2c,src/java/org/apache/hadoop/hbase/HMaster.java,Jim Kellerman,2007-08-10,22:11:05,829,
fc4d7d7a591,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,ramkrishna,2012-06-05,16:39:04,830,    if (!masterRecovery) {
fc4d7d7a591,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,ramkrishna,2012-06-05,16:39:04,831,      // initialize master side coprocessors before we start handling requests
fc4d7d7a591,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,ramkrishna,2012-06-05,16:39:04,832,"      status.setStatus(""Initializing master coprocessors"");"
fc4d7d7a591,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,ramkrishna,2012-06-05,16:39:04,833,"      this.cpHost = new MasterCoprocessorHost(this, this.conf);"
c9b028862a6,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-08-28,03:40:47,834,
5c2a90aa28c,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,eclark,2013-08-14,23:20:51,835,      spanReceiverHost = SpanReceiverHost.getInstance(getConfiguration());
a2788de6256,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-08-30,05:51:38,836,
fc4d7d7a591,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,ramkrishna,2012-06-05,16:39:04,837,      // start up all service threads.
fc4d7d7a591,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,ramkrishna,2012-06-05,16:39:04,838,"      status.setStatus(""Initializing master service threads"");"
fc4d7d7a591,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,ramkrishna,2012-06-05,16:39:04,839,      startServiceThreads();
fc4d7d7a591,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,ramkrishna,2012-06-05,16:39:04,840,    }
d153ec95da6,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-09-18,00:51:05,841,
529223130ab,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,23:12:42,842,    // Wait for region servers to report in.
ca952ac00bf,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Todd Lipcon,2011-05-03,06:11:06,843,    this.serverManager.waitForRegionServers(status);
d9303244482,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2012-09-24,20:33:19,844,    // Check zk for region servers that are up but didn\'t register
529223130ab,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,23:12:42,845,    for (ServerName sn: this.regionServerTracker.getOnlineServers()) {
2a14e4d0fab,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,sershe,2014-01-03,23:08:44,846,"      // The isServerOnline check is opportunistic, correctness is handled inside"
47f4477f79a,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-05-14,22:55:11,847,      if (!this.serverManager.isServerOnline(sn)
2a14e4d0fab,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,sershe,2014-01-03,23:08:44,848,"          && serverManager.checkAndRecordNewServer(sn, ServerLoad.EMPTY_SERVERLOAD)) {"
2a14e4d0fab,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,sershe,2014-01-03,23:08:44,849,"        LOG.info(""Registered server found up in zk but who has not yet reported in: "" + sn);"
529223130ab,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,23:12:42,850,      }
529223130ab,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,23:12:42,851,    }
d153ec95da6,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-09-18,00:51:05,852,
57afee6a6bb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2012-07-27,16:34:32,853,    if (!masterRecovery) {
fc4d7d7a591,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,ramkrishna,2012-06-05,16:39:04,854,      this.assignmentManager.startTimeOutMonitor();
fc4d7d7a591,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,ramkrishna,2012-06-05,16:39:04,855,    }
a5bd102cd8b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2012-10-20,03:57:49,856,
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-15,04:24:02,857,    // get a list for previously failed RS which need log splitting work
df49eca1eb0,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-06,00:29:48,858,    // we recover hbase:meta region servers inside master initialization and
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-15,04:24:02,859,    // handle other failed servers in SSH in order to start up master node ASAP
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-15,04:24:02,860,    Set<ServerName> previouslyFailedServers = this.fileSystemManager
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-15,04:24:02,861,        .getFailedServersFromLogFolders();
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-15,04:24:02,862,
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-15,04:24:02,863,    // remove stale recovering regions from previous run
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-15,04:24:02,864,    this.fileSystemManager.removeStaleRecoveringRegionsFromZK(previouslyFailedServers);
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-15,04:24:02,865,
df49eca1eb0,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-06,00:29:48,866,    // log splitting for hbase:meta server
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-15,04:24:02,867,    ServerName oldMetaServerLocation = this.catalogTracker.getMetaLocation();
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-15,04:24:02,868,    if (oldMetaServerLocation != null && previouslyFailedServers.contains(oldMetaServerLocation)) {
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-15,04:24:02,869,      splitMetaLogBeforeAssignment(oldMetaServerLocation);
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-15,04:24:02,870,      // Note: we can\'t remove oldMetaServerLocation from previousFailedServers list because it
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-15,04:24:02,871,      // may also host user regions
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-15,04:24:02,872,    }
ccb9fd364d1,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jeffreyz,2013-06-04,21:01:05,873,    Set<ServerName> previouslyFailedMetaRSs = getPreviouselyFailedMetaServersFromZK();
7d411abdfb9,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jeffreyz,2013-12-20,22:21:01,874,    // need to use union of previouslyFailedMetaRSs recorded in ZK and previouslyFailedServers
7d411abdfb9,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jeffreyz,2013-12-20,22:21:01,875,    // instead of previouslyFailedMetaRSs alone to address the following two situations:
7d411abdfb9,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jeffreyz,2013-12-20,22:21:01,876,    // 1) the chained failure situation(recovery failed multiple times in a row).
7d411abdfb9,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jeffreyz,2013-12-20,22:21:01,877,    // 2) master get killed right before it could delete the recovering hbase:meta from ZK while the
7d411abdfb9,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jeffreyz,2013-12-20,22:21:01,878,    // same server still has non-meta wals to be replayed so that
7d411abdfb9,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jeffreyz,2013-12-20,22:21:01,879,    // removeStaleRecoveringRegionsFromZK can\'t delete the stale hbase:meta region
7d411abdfb9,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jeffreyz,2013-12-20,22:21:01,880,"    // Passing more servers into splitMetaLog is all right. If a server doesn\'t have hbase:meta wal,"
7d411abdfb9,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jeffreyz,2013-12-20,22:21:01,881,    // there is no op for the server.
7d411abdfb9,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jeffreyz,2013-12-20,22:21:01,882,    previouslyFailedMetaRSs.addAll(previouslyFailedServers);
1339f395d65,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-09-25,06:24:42,883,
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-15,04:24:02,884,    this.initializationBeforeMetaAssignment = true;
1be8cd2c63a,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-21,21:42:03,885,
1be8cd2c63a,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-21,21:42:03,886,    //initialize load balancer
1be8cd2c63a,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-21,21:42:03,887,    this.balancer.setClusterStatus(getClusterStatus());
1be8cd2c63a,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-21,21:42:03,888,    this.balancer.setMasterServices(this);
1be8cd2c63a,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-21,21:42:03,889,    this.balancer.initialize();
1be8cd2c63a,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-21,21:42:03,890,
3a23adf5aba,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-03-08,22:37:19,891,    // Make sure meta assigned before proceeding.
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-15,04:24:02,892,"    status.setStatus(""Assigning Meta Region"");"
7d411abdfb9,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jeffreyz,2013-12-20,22:21:01,893,"    assignMeta(status, previouslyFailedMetaRSs);"
df49eca1eb0,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-06,00:29:48,894,    // check if master is shutting down because above assignMeta could return even hbase:meta isn\'t
4473041015c,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-16,20:28:19,895,    // assigned when master is shutting down
4473041015c,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-16,20:28:19,896,    if(this.stopped) return;
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-15,04:24:02,897,
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-15,04:24:02,898,"    status.setStatus(""Submitting log splitting work for previously failed region servers"");"
df49eca1eb0,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-06,00:29:48,899,    // Master has recovered hbase:meta region server and we put
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-15,04:24:02,900,    // other failed region servers in a queue to be handled later by SSH
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-15,04:24:02,901,    for (ServerName tmpServer : previouslyFailedServers) {
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-15,04:24:02,902,"      this.serverManager.processDeadServer(tmpServer, true);"
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-15,04:24:02,903,    }
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-15,04:24:02,904,
53a7045cd9d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-04-09,06:02:10,905,    // Update meta with new PB serialization if required. i.e migrate all HRI to PB serialization
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-03,03:52:15,906,    // in meta. This must happen before we assign all user regions or else the assignment will
53a7045cd9d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-04-09,06:02:10,907,    // fail.
c9b028862a6,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-08-28,03:40:47,908,    org.apache.hadoop.hbase.catalog.MetaMigrationConvertingToPB
53a7045cd9d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-04-09,06:02:10,909,      .updateMetaIfNecessary(this);
d8f5be74d76,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-06-14,05:40:32,910,
d9303244482,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2012-09-24,20:33:19,911,    // Fix up assignment manager status
ca952ac00bf,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Todd Lipcon,2011-05-03,06:11:06,912,"    status.setStatus(""Starting assignment manager"");"
3ee5280b6bb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,ramkrishna,2012-05-28,17:14:56,913,    this.assignmentManager.joinCluster();
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,914,
1be8cd2c63a,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-21,21:42:03,915,    //set cluster status again after user regions are assigned
3ab49af40fb,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-08-10,22:16:30,916,    this.balancer.setClusterStatus(getClusterStatus());
ee03d1626d6,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-01-13,21:17:30,917,
c9b028862a6,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-08-28,03:40:47,918,    if (!masterRecovery) {
fc4d7d7a591,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,ramkrishna,2012-06-05,16:39:04,919,      // Start balancer and meta catalog janitor after meta and regions have
fc4d7d7a591,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,ramkrishna,2012-06-05,16:39:04,920,      // been assigned.
fc4d7d7a591,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,ramkrishna,2012-06-05,16:39:04,921,"      status.setStatus(""Starting balancer and catalog janitor"");"
eddc746457d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-09-20,06:05:01,922,      this.clusterStatusChore = getAndStartClusterStatusChore(this);
fc4d7d7a591,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,ramkrishna,2012-06-05,16:39:04,923,      this.balancerChore = getAndStartBalancerChore(this);
fc4d7d7a591,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,ramkrishna,2012-06-05,16:39:04,924,"      this.catalogJanitorChore = new CatalogJanitor(this, this);"
fc4d7d7a591,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,ramkrishna,2012-06-05,16:39:04,925,      startCatalogJanitorChore();
fc4d7d7a591,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,ramkrishna,2012-06-05,16:39:04,926,    }
040b53e09aa,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-17,05:43:06,927,
f8f0a927e3c,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jeffreyz,2013-11-12,03:14:31,928,"    status.setStatus(""Starting namespace manager"");"
f8f0a927e3c,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jeffreyz,2013-11-12,03:14:31,929,    initNamespace();
f8f0a927e3c,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jeffreyz,2013-11-12,03:14:31,930,
10b1a394957,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-13,20:28:58,931,    if (this.cpHost != null) {
10b1a394957,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-13,20:28:58,932,      try {
10b1a394957,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-13,20:28:58,933,        this.cpHost.preMasterInitialization();
10b1a394957,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-13,20:28:58,934,      } catch (IOException e) {
10b1a394957,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-13,20:28:58,935,"        LOG.error(""Coprocessor preMasterInitialization() hook failed"", e);"
10b1a394957,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-13,20:28:58,936,      }
10b1a394957,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-13,20:28:58,937,    }
d7050d3541d,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-02-24,21:06:12,938,
ca952ac00bf,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Todd Lipcon,2011-05-03,06:11:06,939,"    status.markComplete(""Initialization successful"");"
5f7c8ca1b2b,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-18,19:08:50,940,"    LOG.info(""Master has completed initialization"");"
5441eaa83dc,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-12-05,04:49:43,941,    initialized = true;
3ee5280b6bb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,ramkrishna,2012-05-28,17:14:56,942,    // clear the dead servers with same host name and port of online server because we are not
3ee5280b6bb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,ramkrishna,2012-05-28,17:14:56,943,    // removing dead server with same hostname and port of rs which is trying to check in before
3ee5280b6bb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,ramkrishna,2012-05-28,17:14:56,944,    // master initialization. See HBASE-5916.
3ee5280b6bb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,ramkrishna,2012-05-28,17:14:56,945,    this.serverManager.clearDeadServersWithSameHostNameAndPortOfOnlineServer();
c9b028862a6,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-08-28,03:40:47,946,
c9b028862a6,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-08-28,03:40:47,947,    if (!masterRecovery) {
fc4d7d7a591,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,ramkrishna,2012-06-05,16:39:04,948,      if (this.cpHost != null) {
fc4d7d7a591,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,ramkrishna,2012-06-05,16:39:04,949,        // don\'t let cp initialization errors kill the master
fc4d7d7a591,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,ramkrishna,2012-06-05,16:39:04,950,        try {
fc4d7d7a591,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,ramkrishna,2012-06-05,16:39:04,951,          this.cpHost.postStartMaster();
fc4d7d7a591,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,ramkrishna,2012-06-05,16:39:04,952,        } catch (IOException ioe) {
fc4d7d7a591,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,ramkrishna,2012-06-05,16:39:04,953,"          LOG.error(""Coprocessor postStartMaster() hook failed"", ioe);"
fc4d7d7a591,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,ramkrishna,2012-06-05,16:39:04,954,        }
cf25a779aa6,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Gary Helmling,2011-06-21,00:20:29,955,      }
cf25a779aa6,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Gary Helmling,2011-06-21,00:20:29,956,    }
be8ef48869f,src/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2008-06-05,22:22:13,957,  }
c9b028862a6,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-08-28,03:40:47,958,
e8560bf9739,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,ramkrishna,2012-05-14,18:14:37,959,  /**
e8560bf9739,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,ramkrishna,2012-05-14,18:14:37,960,   * Useful for testing purpose also where we have
e8560bf9739,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,ramkrishna,2012-05-14,18:14:37,961,   * master restart scenarios.
e8560bf9739,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,ramkrishna,2012-05-14,18:14:37,962,   */
e8560bf9739,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,ramkrishna,2012-05-14,18:14:37,963,  protected void startCatalogJanitorChore() {
e8560bf9739,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,ramkrishna,2012-05-14,18:14:37,964,    Threads.setDaemonThreadRunning(catalogJanitorChore.getThread());
e8560bf9739,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,ramkrishna,2012-05-14,18:14:37,965,  }
be8ef48869f,src/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2008-06-05,22:22:13,966,
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,967,  /**
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,968,   * Useful for testing purpose also where we have
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,969,   * master restart scenarios.
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,970,   */
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,971,  protected void startNamespaceJanitorChore() {
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,972,    Threads.setDaemonThreadRunning(namespaceJanitorChore.getThread());
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,973,  }
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,974,
327e2d1f743,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-03-22,00:02:36,975,  /**
327e2d1f743,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-03-22,00:02:36,976,   * Create a {@link ServerManager} instance.
327e2d1f743,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-03-22,00:02:36,977,   * @param master
327e2d1f743,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-03-22,00:02:36,978,   * @param services
327e2d1f743,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-03-22,00:02:36,979,   * @return An instance of {@link ServerManager}
3daea02e860,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Devaraj Das,2013-07-30,05:14:32,980,   * @throws org.apache.hadoop.hbase.ZooKeeperConnectionException
327e2d1f743,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-03-22,00:02:36,981,   * @throws IOException
327e2d1f743,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-03-22,00:02:36,982,   */
327e2d1f743,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-03-22,00:02:36,983,"  ServerManager createServerManager(final Server master,"
327e2d1f743,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-03-22,00:02:36,984,      final MasterServices services)
327e2d1f743,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-03-22,00:02:36,985,  throws IOException {
327e2d1f743,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-03-22,00:02:36,986,    // We put this out here in a method so can do a Mockito.spy and stub it out
327e2d1f743,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-03-22,00:02:36,987,    // w/ a mocked up ServerManager.
327e2d1f743,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-03-22,00:02:36,988,"    return new ServerManager(master, services);"
327e2d1f743,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-03-22,00:02:36,989,  }
327e2d1f743,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-03-22,00:02:36,990,
58c4f2df98f,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-09-29,22:37:50,991,  /**
df49eca1eb0,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-06,00:29:48,992,"   * Check <code>hbase:meta</code> is assigned. If not, assign it."
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-15,04:24:02,993,   * @param status MonitoredTask
7d411abdfb9,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jeffreyz,2013-12-20,22:21:01,994,   * @param previouslyFailedMetaRSs
58c4f2df98f,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-09-29,22:37:50,995,   * @throws InterruptedException
5b600805b56,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Ryan Rawson,2010-09-15,23:44:08,996,   * @throws IOException
58c4f2df98f,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-09-29,22:37:50,997,   * @throws KeeperException
ea200a9e5c3,src/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2009-07-03,00:08:51,998,   */
7d411abdfb9,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jeffreyz,2013-12-20,22:21:01,999,"  void assignMeta(MonitoredTask status, Set<ServerName> previouslyFailedMetaRSs)"
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-15,04:24:02,1000,"      throws InterruptedException, IOException, KeeperException {"
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-15,04:24:02,1001,    // Work on meta region
58c4f2df98f,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-09-29,22:37:50,1002,    int assigned = 0;
58c4f2df98f,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-09-29,22:37:50,1003,"    long timeout = this.conf.getLong(""hbase.catalog.verification.timeout"", 1000);"
df49eca1eb0,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-06,00:29:48,1004,"    status.setStatus(""Assigning hbase:meta region"");"
1be8cd2c63a,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-21,21:42:03,1005,
f5881a31161,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-10-25,16:17:29,1006,    RegionStates regionStates = assignmentManager.getRegionStates();
f5881a31161,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-10-25,16:17:29,1007,    regionStates.createRegionState(HRegionInfo.FIRST_META_REGIONINFO);
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-15,04:24:02,1008,    boolean rit = this.assignmentManager
f5881a31161,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-10-25,16:17:29,1009,      .processRegionInTransitionAndBlockUntilAssigned(HRegionInfo.FIRST_META_REGIONINFO);
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-15,04:24:02,1010,    boolean metaRegionLocation = this.catalogTracker.verifyMetaRegionLocation(timeout);
f5881a31161,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-10-25,16:17:29,1011,    ServerName currentMetaServer = this.catalogTracker.getMetaLocation();
704a00b5440,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-09-16,01:41:12,1012,    if (!metaRegionLocation) {
704a00b5440,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-09-16,01:41:12,1013,"      // Meta location is not verified. It should be in transition, or offline."
704a00b5440,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-09-16,01:41:12,1014,      // We will wait for it to be assigned in enableSSHandWaitForMeta below.
f690e086f6f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,ramkrishna,2012-06-25,18:07:32,1015,      assigned++;
704a00b5440,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-09-16,01:41:12,1016,      if (!rit) {
704a00b5440,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-09-16,01:41:12,1017,        // Assign meta since not already in transition
c661d926c0d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2014-01-17,00:03:20,1018,        if (currentMetaServer != null) {
c661d926c0d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2014-01-17,00:03:20,1019,"          // If the meta server is not known to be dead or online,"
c661d926c0d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2014-01-17,00:03:20,1020,"          // just split the meta log, and don\'t expire it since this"
c661d926c0d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2014-01-17,00:03:20,1021,"          // could be a full cluster restart. Otherwise, we will think"
c661d926c0d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2014-01-17,00:03:20,1022,          // this is a failover and lose previous region locations.
c661d926c0d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2014-01-17,00:03:20,1023,"          // If it is really a failover case, AM will find out in rebuilding"
c661d926c0d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2014-01-17,00:03:20,1024,"          // user regions. Otherwise, we are good since all logs are split"
c661d926c0d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2014-01-17,00:03:20,1025,          // or known to be replayed before user regions are assigned.
c661d926c0d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2014-01-17,00:03:20,1026,          if (serverManager.isServerOnline(currentMetaServer)) {
c661d926c0d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2014-01-17,00:03:20,1027,"            LOG.info(""Forcing expire of "" + currentMetaServer);"
c661d926c0d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2014-01-17,00:03:20,1028,            serverManager.expireServer(currentMetaServer);
c661d926c0d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2014-01-17,00:03:20,1029,          }
8ba036b72fa,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-12-09,23:55:32,1030,          splitMetaLogBeforeAssignment(currentMetaServer);
7d411abdfb9,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jeffreyz,2013-12-20,22:21:01,1031,          previouslyFailedMetaRSs.add(currentMetaServer);
704a00b5440,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-09-16,01:41:12,1032,        }
704a00b5440,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-09-16,01:41:12,1033,        assignmentManager.assignMeta();
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-15,04:24:02,1034,      }
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-15,04:24:02,1035,    } else {
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-15,04:24:02,1036,      // Region already assigned. We didn\'t assign it. Add to in-memory state.
f5881a31161,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-10-25,16:17:29,1037,      regionStates.updateRegionState(
f5881a31161,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-10-25,16:17:29,1038,"        HRegionInfo.FIRST_META_REGIONINFO, State.OPEN, currentMetaServer);"
f5881a31161,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-10-25,16:17:29,1039,      this.assignmentManager.regionOnline(
f5881a31161,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-10-25,16:17:29,1040,"        HRegionInfo.FIRST_META_REGIONINFO, currentMetaServer);"
58c4f2df98f,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-09-29,22:37:50,1041,    }
4473041015c,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-16,20:28:19,1042,
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,1043,    enableMeta(TableName.META_TABLE_NAME);
704a00b5440,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-09-16,01:41:12,1044,
7d411abdfb9,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jeffreyz,2013-12-20,22:21:01,1045,    if (this.distributedLogReplay && (!previouslyFailedMetaRSs.isEmpty())) {
7d411abdfb9,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jeffreyz,2013-12-20,22:21:01,1046,      // replay WAL edits mode need new hbase:meta RS is assigned firstly
7d411abdfb9,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jeffreyz,2013-12-20,22:21:01,1047,"      status.setStatus(""replaying log for Meta Region"");"
7d411abdfb9,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jeffreyz,2013-12-20,22:21:01,1048,      this.fileSystemManager.splitMetaLog(previouslyFailedMetaRSs);
7d411abdfb9,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jeffreyz,2013-12-20,22:21:01,1049,    }
7d411abdfb9,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jeffreyz,2013-12-20,22:21:01,1050,
704a00b5440,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-09-16,01:41:12,1051,    // Make sure a hbase:meta location is set. We need to enable SSH here since
704a00b5440,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-09-16,01:41:12,1052,"    // if the meta region server is died at this time, we need it to be re-assigned"
704a00b5440,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-09-16,01:41:12,1053,    // by SSH so that system tables can be assigned.
704a00b5440,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-09-16,01:41:12,1054,    // No need to wait for meta is assigned = 0 when meta is just verified.
704a00b5440,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-09-16,01:41:12,1055,    enableServerShutdownHandler(assigned != 0);
704a00b5440,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-09-16,01:41:12,1056,
df49eca1eb0,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-06,00:29:48,1057,"    LOG.info(""hbase:meta assigned="" + assigned + "", rit="" + rit +"
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,1058,"      "", location="" + catalogTracker.getMetaLocation());"
3a23adf5aba,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-03-08,22:37:19,1059,"    status.setStatus(""META assigned."");"
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-15,04:24:02,1060,  }
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-15,04:24:02,1061,
704a00b5440,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-09-16,01:41:12,1062,  void initNamespace() throws IOException {
704a00b5440,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-09-16,01:41:12,1063,    //create namespace manager
704a00b5440,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-09-16,01:41:12,1064,    tableNamespaceManager = new TableNamespaceManager(this);
704a00b5440,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-09-16,01:41:12,1065,    tableNamespaceManager.start();
704a00b5440,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-09-16,01:41:12,1066,  }
704a00b5440,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-09-16,01:41:12,1067,
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-15,04:24:02,1068,  private void splitMetaLogBeforeAssignment(ServerName currentMetaServer) throws IOException {
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-15,04:24:02,1069,    if (this.distributedLogReplay) {
df49eca1eb0,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-06,00:29:48,1070,"      // In log replay mode, we mark hbase:meta region as recovering in ZK"
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-15,04:24:02,1071,      Set<HRegionInfo> regions = new HashSet<HRegionInfo>();
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-15,04:24:02,1072,      regions.add(HRegionInfo.FIRST_META_REGIONINFO);
d70d599161d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jeffreyz,2013-08-04,06:16:31,1073,"      this.fileSystemManager.prepareLogReplay(currentMetaServer, regions);"
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-15,04:24:02,1074,    } else {
df49eca1eb0,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-06,00:29:48,1075,      // In recovered.edits mode: create recovered edits file for hbase:meta server
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-15,04:24:02,1076,      this.fileSystemManager.splitMetaLog(currentMetaServer);
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-15,04:24:02,1077,    }
327e2d1f743,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-03-22,00:02:36,1078,  }
327e2d1f743,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-03-22,00:02:36,1079,
704a00b5440,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-09-16,01:41:12,1080,  private void enableServerShutdownHandler(
704a00b5440,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-09-16,01:41:12,1081,"      final boolean waitForMeta) throws IOException, InterruptedException {"
704a00b5440,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-09-16,01:41:12,1082,"    // If ServerShutdownHandler is disabled, we enable it and expire those dead"
704a00b5440,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-09-16,01:41:12,1083,    // but not expired servers. This is required so that if meta is assigning to
704a00b5440,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-09-16,01:41:12,1084,"    // a server which dies after assignMeta starts assignment,"
704a00b5440,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-09-16,01:41:12,1085,"    // SSH can re-assign it. Otherwise, we will be"
704a00b5440,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-09-16,01:41:12,1086,    // stuck here waiting forever if waitForMeta is specified.
704a00b5440,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-09-16,01:41:12,1087,    if (!serverShutdownHandlerEnabled) {
704a00b5440,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-09-16,01:41:12,1088,      serverShutdownHandlerEnabled = true;
704a00b5440,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-09-16,01:41:12,1089,      this.serverManager.processQueuedDeadServers();
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,1090,    }
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,1091,
704a00b5440,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-09-16,01:41:12,1092,    if (waitForMeta) {
704a00b5440,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-09-16,01:41:12,1093,      this.catalogTracker.waitForMeta();
704a00b5440,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-09-16,01:41:12,1094,      // Above check waits for general meta availability but this does not
704a00b5440,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-09-16,01:41:12,1095,      // guarantee that the transition has completed
704a00b5440,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-09-16,01:41:12,1096,      this.assignmentManager.waitForAssignment(HRegionInfo.FIRST_META_REGIONINFO);
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,1097,    }
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,1098,  }
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,1099,
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,1100,  private void enableMeta(TableName metaTableName) {
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,1101,    if (!this.assignmentManager.getZKTable().isEnabledTable(metaTableName)) {
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,1102,      this.assignmentManager.setEnabledTable(metaTableName);
458a3ff0924,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-03-16,19:14:11,1103,    }
458a3ff0924,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-03-16,19:14:11,1104,  }
458a3ff0924,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-03-16,19:14:11,1105,
ccb9fd364d1,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jeffreyz,2013-06-04,21:01:05,1106,  /**
df49eca1eb0,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-06,00:29:48,1107,   * This function returns a set of region server names under hbase:meta recovering region ZK node
ccb9fd364d1,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jeffreyz,2013-06-04,21:01:05,1108,   * @return Set of meta server names which were recorded in ZK
ccb9fd364d1,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jeffreyz,2013-06-04,21:01:05,1109,   * @throws KeeperException
ccb9fd364d1,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jeffreyz,2013-06-04,21:01:05,1110,   */
ccb9fd364d1,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jeffreyz,2013-06-04,21:01:05,1111,  private Set<ServerName> getPreviouselyFailedMetaServersFromZK() throws KeeperException {
ccb9fd364d1,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jeffreyz,2013-06-04,21:01:05,1112,    Set<ServerName> result = new HashSet<ServerName>();
ccb9fd364d1,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jeffreyz,2013-06-04,21:01:05,1113,"    String metaRecoveringZNode = ZKUtil.joinZNode(zooKeeper.recoveringRegionsZNode,"
ccb9fd364d1,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jeffreyz,2013-06-04,21:01:05,1114,      HRegionInfo.FIRST_META_REGIONINFO.getEncodedName());
ccb9fd364d1,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jeffreyz,2013-06-04,21:01:05,1115,"    List<String> regionFailedServers = ZKUtil.listChildrenNoWatch(zooKeeper, metaRecoveringZNode);"
ccb9fd364d1,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jeffreyz,2013-06-04,21:01:05,1116,    if (regionFailedServers == null) return result;
ccb9fd364d1,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jeffreyz,2013-06-04,21:01:05,1117,
ccb9fd364d1,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jeffreyz,2013-06-04,21:01:05,1118,    for(String failedServer : regionFailedServers) {
ccb9fd364d1,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jeffreyz,2013-06-04,21:01:05,1119,      ServerName server = ServerName.parseServerName(failedServer);
ccb9fd364d1,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jeffreyz,2013-06-04,21:01:05,1120,      result.add(server);
ccb9fd364d1,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jeffreyz,2013-06-04,21:01:05,1121,    }
ccb9fd364d1,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jeffreyz,2013-06-04,21:01:05,1122,    return result;
ccb9fd364d1,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jeffreyz,2013-06-04,21:01:05,1123,  }
ccb9fd364d1,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jeffreyz,2013-06-04,21:01:05,1124,
b0439269fe7,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-06-21,18:31:26,1125,  @Override
b0439269fe7,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-06-21,18:31:26,1126,  public TableDescriptors getTableDescriptors() {
b0439269fe7,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-06-21,18:31:26,1127,    return this.tableDescriptors;
b0439269fe7,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-06-21,18:31:26,1128,  }
b0439269fe7,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-06-21,18:31:26,1129,
9b43b98449a,src/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2009-10-27,23:32:15,1130,  /** @return InfoServer object. Maybe null.*/
9b43b98449a,src/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2009-10-27,23:32:15,1131,  public InfoServer getInfoServer() {
9b43b98449a,src/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2009-10-27,23:32:15,1132,    return this.infoServer;
9b43b98449a,src/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2009-10-27,23:32:15,1133,  }
9b43b98449a,src/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2009-10-27,23:32:15,1134,
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,1135,  @Override
3339e94e8d7,src/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2009-12-31,20:44:31,1136,  public Configuration getConfiguration() {
9b43b98449a,src/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2009-10-27,23:32:15,1137,    return this.conf;
6c9ddf9f37b,src/java/org/apache/hadoop/hbase/HMaster.java,Michael Stack,2007-10-06,03:09:50,1138,  }
9b43b98449a,src/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2009-10-27,23:32:15,1139,
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,1140,  @Override
9b43b98449a,src/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2009-10-27,23:32:15,1141,  public ServerManager getServerManager() {
9b43b98449a,src/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2009-10-27,23:32:15,1142,    return this.serverManager;
822ba8bc3ba,src/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2008-05-14,19:06:52,1143,  }
9b43b98449a,src/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2009-10-27,23:32:15,1144,
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,1145,  @Override
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,1146,  public ExecutorService getExecutorService() {
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,1147,    return this.executorService;
9b43b98449a,src/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2009-10-27,23:32:15,1148,  }
9b43b98449a,src/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2009-10-27,23:32:15,1149,
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,1150,  @Override
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,1151,  public MasterFileSystem getMasterFileSystem() {
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,1152,    return this.fileSystemManager;
9b43b98449a,src/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2009-10-27,23:32:15,1153,  }
9b43b98449a,src/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2009-10-27,23:32:15,1154,
9057e559a18,src/java/org/apache/hadoop/hbase/master/HMaster.java,Jim Kellerman,2008-03-13,00:33:13,1155,  /**
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,1156,   * Get the ZK wrapper object - needed by master_jsp.java
9b43b98449a,src/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2009-10-27,23:32:15,1157,   * @return the zookeeper wrapper
9057e559a18,src/java/org/apache/hadoop/hbase/master/HMaster.java,Jim Kellerman,2008-03-13,00:33:13,1158,   */
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,1159,  public ZooKeeperWatcher getZooKeeperWatcher() {
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,1160,    return this.zooKeeper;
0f0e4579a92,src/java/org/apache/hadoop/hbase/master/HMaster.java,Jean-Daniel Cryans,2009-05-26,18:01:56,1161,  }
0f0e4579a92,src/java/org/apache/hadoop/hbase/master/HMaster.java,Jean-Daniel Cryans,2009-05-26,18:01:56,1162,
dfe84fb1f9a,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,larsh,2013-06-24,20:29:07,1163,  public ActiveMasterManager getActiveMasterManager() {
dfe84fb1f9a,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,larsh,2013-06-24,20:29:07,1164,    return this.activeMasterManager;
dfe84fb1f9a,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,larsh,2013-06-24,20:29:07,1165,  }
1be8cd2c63a,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-21,21:42:03,1166,
6b2437de2cc,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2014-03-14,03:02:21,1167,  public MasterAddressTracker getMasterAddressTracker() {
6b2437de2cc,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2014-03-14,03:02:21,1168,    return this.masterAddressTracker;
dfe84fb1f9a,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,larsh,2013-06-24,20:29:07,1169,  }
1be8cd2c63a,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-21,21:42:03,1170,
83298b47216,src/java/org/apache/hadoop/hbase/HMaster.java,Michael Stack,2007-09-15,15:14:53,1171,  /*
83298b47216,src/java/org/apache/hadoop/hbase/HMaster.java,Michael Stack,2007-09-15,15:14:53,1172,   * Start up all services. If any of these threads gets an unhandled exception
83298b47216,src/java/org/apache/hadoop/hbase/HMaster.java,Michael Stack,2007-09-15,15:14:53,1173,   * then they just die with a logged message.  This should be fine because
83298b47216,src/java/org/apache/hadoop/hbase/HMaster.java,Michael Stack,2007-09-15,15:14:53,1174,"   * in general, we do not expect the master to get such unhandled exceptions"
83298b47216,src/java/org/apache/hadoop/hbase/HMaster.java,Michael Stack,2007-09-15,15:14:53,1175,   *  as OOMEs; it should be lightly loaded. See what HRegionServer does if
83298b47216,src/java/org/apache/hadoop/hbase/HMaster.java,Michael Stack,2007-09-15,15:14:53,1176,   *  need to install an unexpected exception handler.
83298b47216,src/java/org/apache/hadoop/hbase/HMaster.java,Michael Stack,2007-09-15,15:14:53,1177,   */
327e2d1f743,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-03-22,00:02:36,1178,  void startServiceThreads() throws IOException{
258c11120e3,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-25,23:13:41,1179,   // Start the executor service pools
258c11120e3,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-25,23:13:41,1180,"   this.executorService.startExecutorService(ExecutorType.MASTER_OPEN_REGION,"
258c11120e3,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-25,23:13:41,1181,"      conf.getInt(""hbase.master.executor.openregion.threads"", 5));"
258c11120e3,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-25,23:13:41,1182,"   this.executorService.startExecutorService(ExecutorType.MASTER_CLOSE_REGION,"
258c11120e3,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-25,23:13:41,1183,"      conf.getInt(""hbase.master.executor.closeregion.threads"", 5));"
258c11120e3,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-25,23:13:41,1184,"   this.executorService.startExecutorService(ExecutorType.MASTER_SERVER_OPERATIONS,"
8e78536a3b6,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jeffreyz,2013-07-05,07:44:00,1185,"      conf.getInt(""hbase.master.executor.serverops.threads"", 5));"
258c11120e3,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-25,23:13:41,1186,"   this.executorService.startExecutorService(ExecutorType.MASTER_META_SERVER_OPERATIONS,"
258c11120e3,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-25,23:13:41,1187,"      conf.getInt(""hbase.master.executor.serverops.threads"", 5));"
8e78536a3b6,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jeffreyz,2013-07-05,07:44:00,1188,"   this.executorService.startExecutorService(ExecutorType.M_LOG_REPLAY_OPS,"
8e78536a3b6,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jeffreyz,2013-07-05,07:44:00,1189,"      conf.getInt(""hbase.master.executor.logreplayops.threads"", 10));"
c9b028862a6,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-08-28,03:40:47,1190,
258c11120e3,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-25,23:13:41,1191,   // We depend on there being only one instance of this executor running
258c11120e3,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-25,23:13:41,1192,"   // at a time.  To do concurrency, would need fencing of enable/disable of"
258c11120e3,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-25,23:13:41,1193,   // tables.
258c11120e3,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-25,23:13:41,1194,"   this.executorService.startExecutorService(ExecutorType.MASTER_TABLE_OPERATIONS, 1);"
258c11120e3,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-25,23:13:41,1195,
258c11120e3,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-25,23:13:41,1196,   // Start log cleaner thread
258c11120e3,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-25,23:13:41,1197,   String n = Thread.currentThread().getName();
ab96788641a,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,larsh,2012-07-22,01:11:36,1198,"   int cleanerInterval = conf.getInt(""hbase.master.cleaner.interval"", 60 * 1000);"
258c11120e3,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-25,23:13:41,1199,   this.logCleaner =
ab96788641a,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,larsh,2012-07-22,01:11:36,1200,"      new LogCleaner(cleanerInterval,"
258c11120e3,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-25,23:13:41,1201,"         this, conf, getMasterFileSystem().getFileSystem(),"
258c11120e3,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-25,23:13:41,1202,         getMasterFileSystem().getOldLogDir());
9570f3c9079,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-10-25,07:40:25,1203,"         Threads.setDaemonThreadRunning(logCleaner.getThread(), n + "".oldLogCleaner"");"
258c11120e3,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-25,23:13:41,1204,
ab96788641a,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,larsh,2012-07-22,01:11:36,1205,   //start the hfile archive cleaner thread
ab96788641a,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,larsh,2012-07-22,01:11:36,1206,    Path archiveDir = HFileArchiveUtil.getArchivePath(conf);
ab96788641a,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,larsh,2012-07-22,01:11:36,1207,"    this.hfileCleaner = new HFileCleaner(cleanerInterval, this, conf, getMasterFileSystem()"
ab96788641a,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,larsh,2012-07-22,01:11:36,1208,"        .getFileSystem(), archiveDir);"
ab96788641a,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,larsh,2012-07-22,01:11:36,1209,"    Threads.setDaemonThreadRunning(hfileCleaner.getThread(), n + "".archivedHFileCleaner"");"
ab96788641a,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,larsh,2012-07-22,01:11:36,1210,
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-03,03:52:15,1211,    // Start the health checker
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-03,03:52:15,1212,    if (this.healthCheckChore != null) {
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-03,03:52:15,1213,"      Threads.setDaemonThreadRunning(this.healthCheckChore.getThread(), n + "".healthChecker"");"
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-03,03:52:15,1214,    }
a1079157eca,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-01-03,02:12:24,1215,
258c11120e3,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-25,23:13:41,1216,    // Start allowing requests to happen.
258c11120e3,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-25,23:13:41,1217,    this.rpcServer.openServer();
327e2d1f743,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-03-22,00:02:36,1218,    this.rpcServerOpen = true;
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-03,03:52:15,1219,    if (LOG.isTraceEnabled()) {
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-03,03:52:15,1220,"      LOG.trace(""Started service threads"");"
258c11120e3,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-25,23:13:41,1221,    }
327e2d1f743,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-03-22,00:02:36,1222,  }
258c11120e3,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-25,23:13:41,1223,
327e2d1f743,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-03-22,00:02:36,1224,  /**
327e2d1f743,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-03-22,00:02:36,1225,   * Use this when trying to figure when its ok to send in rpcs.  Used by tests.
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-03,03:52:15,1226,   * @return True if we have successfully run {@link RpcServer#openServer()}
327e2d1f743,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-03-22,00:02:36,1227,   */
327e2d1f743,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-03-22,00:02:36,1228,  boolean isRpcServerOpen() {
327e2d1f743,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-03-22,00:02:36,1229,    return this.rpcServerOpen;
83298b47216,src/java/org/apache/hadoop/hbase/HMaster.java,Michael Stack,2007-09-15,15:14:53,1230,  }
9b68f4bf419,src/java/org/apache/hadoop/hbase/HMaster.java,Jim Kellerman,2007-12-14,21:51:45,1231,
9ea9cba5b23,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-09-24,05:46:41,1232,  private void stopServiceThreads() {
9ea9cba5b23,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-09-24,05:46:41,1233,    if (LOG.isDebugEnabled()) {
9ea9cba5b23,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-09-24,05:46:41,1234,"      LOG.debug(""Stopping service threads"");"
9ea9cba5b23,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-09-24,05:46:41,1235,    }
f36d48b0454,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-10-22,19:54:21,1236,    if (this.rpcServer != null) this.rpcServer.stop();
327e2d1f743,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-03-22,00:02:36,1237,    this.rpcServerOpen = false;
9ea9cba5b23,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-09-24,05:46:41,1238,    // Clean up and close up shop
899b7093d68,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jean-Daniel Cryans,2010-11-23,21:31:18,1239,    if (this.logCleaner!= null) this.logCleaner.interrupt();
ab96788641a,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,larsh,2012-07-22,01:11:36,1240,    if (this.hfileCleaner != null) this.hfileCleaner.interrupt();
ab96788641a,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,larsh,2012-07-22,01:11:36,1241,
9ea9cba5b23,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-09-24,05:46:41,1242,    if (this.infoServer != null) {
9ea9cba5b23,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-09-24,05:46:41,1243,"      LOG.info(""Stopping infoServer"");"
9ea9cba5b23,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-09-24,05:46:41,1244,      try {
9ea9cba5b23,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-09-24,05:46:41,1245,        this.infoServer.stop();
9ea9cba5b23,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-09-24,05:46:41,1246,      } catch (Exception ex) {
9ea9cba5b23,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-09-24,05:46:41,1247,        ex.printStackTrace();
9ea9cba5b23,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-09-24,05:46:41,1248,      }
9ea9cba5b23,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-09-24,05:46:41,1249,    }
f36d48b0454,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-10-22,19:54:21,1250,    if (this.executorService != null) this.executorService.shutdown();
a1079157eca,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-01-03,02:12:24,1251,    if (this.healthCheckChore != null) {
a1079157eca,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-01-03,02:12:24,1252,      this.healthCheckChore.interrupt();
a1079157eca,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-01-03,02:12:24,1253,    }
b6ad121cb9a,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,ndimiduk,2013-09-24,22:11:09,1254,    if (this.pauseMonitor != null) {
b6ad121cb9a,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,ndimiduk,2013-09-24,22:11:09,1255,      this.pauseMonitor.stop();
b6ad121cb9a,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,ndimiduk,2013-09-24,22:11:09,1256,    }
9ea9cba5b23,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-09-24,05:46:41,1257,  }
9ea9cba5b23,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-09-24,05:46:41,1258,
eddc746457d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-09-20,06:05:01,1259,  private static Thread getAndStartClusterStatusChore(HMaster master) {
eddc746457d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-09-20,06:05:01,1260,    if (master == null || master.balancer == null) {
eddc746457d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-09-20,06:05:01,1261,      return null;
eddc746457d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-09-20,06:05:01,1262,    }
eddc746457d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-09-20,06:05:01,1263,"    Chore chore = new ClusterStatusChore(master, master.balancer);"
eddc746457d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-09-20,06:05:01,1264,    return Threads.setDaemonThreadRunning(chore.getThread());
eddc746457d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-09-20,06:05:01,1265,  }
eddc746457d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-09-20,06:05:01,1266,
de4f4aa9e4b,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-04-05,18:57:09,1267,  private static Thread getAndStartBalancerChore(final HMaster master) {
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,1268,    // Start up the load balancer chore
eddc746457d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-09-20,06:05:01,1269,    Chore chore = new BalancerChore(master);
9570f3c9079,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-10-25,07:40:25,1270,    return Threads.setDaemonThreadRunning(chore.getThread());
e4194e10e51,src/java/org/apache/hadoop/hbase/HMaster.java,Jim Kellerman,2007-05-24,22:37:26,1271,  }
931d452cb2c,src/java/org/apache/hadoop/hbase/HMaster.java,Jim Kellerman,2007-08-10,22:11:05,1272,
5f7c8ca1b2b,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-18,19:08:50,1273,  private void stopChores() {
5f7c8ca1b2b,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-18,19:08:50,1274,    if (this.balancerChore != null) {
5f7c8ca1b2b,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-18,19:08:50,1275,      this.balancerChore.interrupt();
5f7c8ca1b2b,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-18,19:08:50,1276,    }
eddc746457d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-09-20,06:05:01,1277,    if (this.clusterStatusChore != null) {
eddc746457d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-09-20,06:05:01,1278,      this.clusterStatusChore.interrupt();
eddc746457d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-09-20,06:05:01,1279,    }
5f7c8ca1b2b,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-18,19:08:50,1280,    if (this.catalogJanitorChore != null) {
5f7c8ca1b2b,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-18,19:08:50,1281,      this.catalogJanitorChore.interrupt();
5f7c8ca1b2b,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-18,19:08:50,1282,    }
17e604efbf7,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,nkeywal,2013-03-19,09:24:01,1283,    if (this.clusterStatusPublisherChore != null){
17e604efbf7,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,nkeywal,2013-03-19,09:24:01,1284,      clusterStatusPublisherChore.interrupt();
17e604efbf7,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,nkeywal,2013-03-19,09:24:01,1285,    }
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,1286,    if (this.namespaceJanitorChore != null){
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,1287,      namespaceJanitorChore.interrupt();
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,1288,    }
5f7c8ca1b2b,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-18,19:08:50,1289,  }
5f7c8ca1b2b,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-18,19:08:50,1290,
66ca4976a8a,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-11-10,04:53:20,1291,  @Override
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-03,06:20:26,1292,  public RegionServerStartupResponse regionServerStartup(
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-03,06:20:26,1293,"      RpcController controller, RegionServerStartupRequest request) throws ServiceException {"
079c580042a,src/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2009-01-07,21:03:20,1294,    // Register with server manager
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-03,06:20:26,1295,    try {
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-03,06:20:26,1296,"      InetAddress ia = getRemoteInetAddress(request.getPort(), request.getServerStartCode());"
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-03,06:20:26,1297,"      ServerName rs = this.serverManager.regionServerStartup(ia, request.getPort(),"
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-03,06:20:26,1298,"        request.getServerStartCode(), request.getServerCurrentTime());"
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-03,06:20:26,1299,
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-03,06:20:26,1300,      // Send back some config info
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-03,06:20:26,1301,      RegionServerStartupResponse.Builder resp = createConfigurationSubset();
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-03,06:20:26,1302,      NameStringPair.Builder entry = NameStringPair.newBuilder()
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-03,06:20:26,1303,        .setName(HConstants.KEY_FOR_HOSTNAME_SEEN_BY_MASTER)
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-03,06:20:26,1304,        .setValue(rs.getHostname());
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-03,06:20:26,1305,      resp.addMapEntries(entry.build());
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-03,06:20:26,1306,
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-03,06:20:26,1307,      return resp.build();
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,1308,    } catch (IOException ioe) {
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-03,06:20:26,1309,      throw new ServiceException(ioe);
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-03,06:20:26,1310,    }
7acd7d074a3,src/java/org/apache/hadoop/hbase/HMaster.java,Michael Stack,2007-09-27,21:28:31,1311,  }
9b43b98449a,src/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2009-10-27,23:32:15,1312,
327e2d1f743,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-03-22,00:02:36,1313,  /**
327e2d1f743,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-03-22,00:02:36,1314,   * @return Get remote side\'s InetAddress
c9b028862a6,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-08-28,03:40:47,1315,   * @throws UnknownHostException
327e2d1f743,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-03-22,00:02:36,1316,   */
327e2d1f743,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-03-22,00:02:36,1317,"  InetAddress getRemoteInetAddress(final int port, final long serverStartCode)"
327e2d1f743,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-03-22,00:02:36,1318,  throws UnknownHostException {
327e2d1f743,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-03-22,00:02:36,1319,    // Do it out here in its own little method so can fake an address when
327e2d1f743,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-03-22,00:02:36,1320,    // mocking up in tests.
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-03,03:52:15,1321,    return RpcServer.getRemoteIp();
327e2d1f743,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-03-22,00:02:36,1322,  }
327e2d1f743,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-03-22,00:02:36,1323,
7acd7d074a3,src/java/org/apache/hadoop/hbase/HMaster.java,Michael Stack,2007-09-27,21:28:31,1324,  /**
7acd7d074a3,src/java/org/apache/hadoop/hbase/HMaster.java,Michael Stack,2007-09-27,21:28:31,1325,   * @return Subset of configuration to pass initializing regionservers: e.g.
7acd7d074a3,src/java/org/apache/hadoop/hbase/HMaster.java,Michael Stack,2007-09-27,21:28:31,1326,   * the filesystem to use and root directory to use.
7acd7d074a3,src/java/org/apache/hadoop/hbase/HMaster.java,Michael Stack,2007-09-27,21:28:31,1327,   */
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-03,06:20:26,1328,  protected RegionServerStartupResponse.Builder createConfigurationSubset() {
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-03,06:20:26,1329,    RegionServerStartupResponse.Builder resp = addConfig(
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-03,06:20:26,1330,"      RegionServerStartupResponse.newBuilder(), HConstants.HBASE_DIR);"
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-03,06:20:26,1331,"    return addConfig(resp, ""fs.default.name"");"
7acd7d074a3,src/java/org/apache/hadoop/hbase/HMaster.java,Michael Stack,2007-09-27,21:28:31,1332,  }
7acd7d074a3,src/java/org/apache/hadoop/hbase/HMaster.java,Michael Stack,2007-09-27,21:28:31,1333,
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-03,06:20:26,1334,  private RegionServerStartupResponse.Builder addConfig(
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-03,06:20:26,1335,"      final RegionServerStartupResponse.Builder resp, final String key) {"
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-03,06:20:26,1336,    NameStringPair.Builder entry = NameStringPair.newBuilder()
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-03,06:20:26,1337,      .setName(key)
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-03,06:20:26,1338,      .setValue(this.conf.get(key));
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-03,06:20:26,1339,    resp.addMapEntries(entry.build());
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-03,06:20:26,1340,    return resp;
^948d0cdec4,src/java/org/apache/hadoop/hbase/HMaster.java,Doug Cutting,2007-04-03,20:34:28,1341,  }
931d452cb2c,src/java/org/apache/hadoop/hbase/HMaster.java,Jim Kellerman,2007-08-10,22:11:05,1342,
c310653a19c,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-09-06,17:22:01,1343,  @Override
c310653a19c,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-09-06,17:22:01,1344,"  public GetLastFlushedSequenceIdResponse getLastFlushedSequenceId(RpcController controller,"
c310653a19c,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-09-06,17:22:01,1345,      GetLastFlushedSequenceIdRequest request) throws ServiceException {
c310653a19c,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-09-06,17:22:01,1346,    byte[] regionName = request.getRegionName().toByteArray();
c310653a19c,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-09-06,17:22:01,1347,    long seqId = serverManager.getLastFlushedSequenceId(regionName);
c310653a19c,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-09-06,17:22:01,1348,    return ResponseConverter.buildGetLastFlushedSequenceIdResponse(seqId);
c310653a19c,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-09-06,17:22:01,1349,  }
c310653a19c,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-09-06,17:22:01,1350,
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,1351,  @Override
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-03,06:20:26,1352,  public RegionServerReportResponse regionServerReport(
c310653a19c,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-09-06,17:22:01,1353,"      RpcController controller, RegionServerReportRequest request) throws ServiceException {"
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-03,06:20:26,1354,    try {
87812311328,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-06-22,00:15:11,1355,      ClusterStatusProtos.ServerLoad sl = request.getLoad();
9582b9b34da,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2014-02-24,17:10:03,1356,      ServerName serverName = ProtobufUtil.toServerName(request.getServer());
9582b9b34da,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2014-02-24,17:10:03,1357,      ServerLoad oldLoad = serverManager.getLoad(serverName);
9582b9b34da,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2014-02-24,17:10:03,1358,"      this.serverManager.regionServerReport(serverName, new ServerLoad(sl));"
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,eclark,2012-11-06,23:22:01,1359,      if (sl != null && this.metricsMaster != null) {
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-03,06:20:26,1360,        // Up our metrics.
9582b9b34da,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2014-02-24,17:10:03,1361,        this.metricsMaster.incrementRequests(sl.getTotalNumberOfRequests()
9582b9b34da,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2014-02-24,17:10:03,1362,          - (oldLoad != null ? oldLoad.getTotalNumberOfRequests() : 0));
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-03,06:20:26,1363,      }
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,1364,    } catch (IOException ioe) {
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-03,06:20:26,1365,      throw new ServiceException(ioe);
529223130ab,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,23:12:42,1366,    }
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-03,06:20:26,1367,
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-03,06:20:26,1368,    return RegionServerReportResponse.newBuilder().build();
ec2d29c9027,src/java/org/apache/hadoop/hbase/HMaster.java,Michael Stack,2007-08-22,04:05:08,1369,  }
ef9a7c1017c,src/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2008-02-12,06:19:46,1370,
48560e089c3,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Todd Lipcon,2011-08-30,19:27:24,1371,  @Override
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-03,06:20:26,1372,  public ReportRSFatalErrorResponse reportRSFatalError(
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-03,06:20:26,1373,"      RpcController controller, ReportRSFatalErrorRequest request) throws ServiceException {"
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-03,06:20:26,1374,    String errorText = request.getErrorMessage();
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-03,06:20:26,1375,    ServerName sn = ProtobufUtil.toServerName(request.getServer());
52343c55165,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,nkeywal,2013-04-09,16:49:47,1376,"    String msg = ""Region server "" + sn +"
bf0f06c569d,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-10-27,22:20:02,1377,"      "" reported a fatal error:\\n"" + errorText;"
48560e089c3,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Todd Lipcon,2011-08-30,19:27:24,1378,    LOG.error(msg);
48560e089c3,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Todd Lipcon,2011-08-30,19:27:24,1379,    rsFatals.add(msg);
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-03,06:20:26,1380,
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-03,06:20:26,1381,    return ReportRSFatalErrorResponse.newBuilder().build();
48560e089c3,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Todd Lipcon,2011-08-30,19:27:24,1382,  }
48560e089c3,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Todd Lipcon,2011-08-30,19:27:24,1383,
ef9a7c1017c,src/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2008-02-12,06:19:46,1384,  public boolean isMasterRunning() {
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,1385,    return !isStopped();
ef9a7c1017c,src/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2008-02-12,06:19:46,1386,  }
ef9a7c1017c,src/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2008-02-12,06:19:46,1387,
040b53e09aa,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-17,05:43:06,1388,  @Override
ca8882e804d,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-24,00:33:48,1389,"  public IsMasterRunningResponse isMasterRunning(RpcController c, IsMasterRunningRequest req)"
ca8882e804d,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-24,00:33:48,1390,  throws ServiceException {
ca8882e804d,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-24,00:33:48,1391,    return IsMasterRunningResponse.newBuilder().setIsMasterRunning(isMasterRunning()).build();
ca8882e804d,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-24,00:33:48,1392,  }
ca8882e804d,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-24,00:33:48,1393,
4b07b3985dd,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-07-21,17:07:03,1394,  @Override
7fb94c126af,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-11,21:07:33,1395,"  public RunCatalogScanResponse runCatalogScan(RpcController c,"
7fb94c126af,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-11,21:07:33,1396,      RunCatalogScanRequest req) throws ServiceException {
4b07b3985dd,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-07-21,17:07:03,1397,    try {
7fb94c126af,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-11,21:07:33,1398,      return ResponseConverter.buildRunCatalogScanResponse(catalogJanitorChore.scan());
4b07b3985dd,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-07-21,17:07:03,1399,    } catch (IOException ioe) {
4b07b3985dd,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-07-21,17:07:03,1400,      throw new ServiceException(ioe);
4b07b3985dd,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-07-21,17:07:03,1401,    }
4b07b3985dd,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-07-21,17:07:03,1402,  }
4b07b3985dd,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-07-21,17:07:03,1403,
4b07b3985dd,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-07-21,17:07:03,1404,  @Override
4b07b3985dd,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-07-21,17:07:03,1405,"  public EnableCatalogJanitorResponse enableCatalogJanitor(RpcController c,"
4b07b3985dd,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-07-21,17:07:03,1406,      EnableCatalogJanitorRequest req) throws ServiceException {
4b07b3985dd,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-07-21,17:07:03,1407,    return EnableCatalogJanitorResponse.newBuilder().
4b07b3985dd,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-07-21,17:07:03,1408,        setPrevValue(catalogJanitorChore.setEnabled(req.getEnable())).build();
4b07b3985dd,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-07-21,17:07:03,1409,  }
4b07b3985dd,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-07-21,17:07:03,1410,
4b07b3985dd,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-07-21,17:07:03,1411,  @Override
4b07b3985dd,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-07-21,17:07:03,1412,"  public IsCatalogJanitorEnabledResponse isCatalogJanitorEnabled(RpcController c,"
4b07b3985dd,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-07-21,17:07:03,1413,      IsCatalogJanitorEnabledRequest req) throws ServiceException {
280c6124b5b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2012-08-21,17:25:27,1414,    boolean isEnabled = catalogJanitorChore != null ? catalogJanitorChore.getEnabled() : false;
280c6124b5b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2012-08-21,17:25:27,1415,    return IsCatalogJanitorEnabledResponse.newBuilder().setValue(isEnabled).build();
4b07b3985dd,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-07-21,17:07:03,1416,  }
4b07b3985dd,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-07-21,17:07:03,1417,
9ad69f3bd04,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-03-20,02:41:12,1418,  /**
9ad69f3bd04,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-03-20,02:41:12,1419,   * @return Maximum time we should run balancer for
9ad69f3bd04,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-03-20,02:41:12,1420,   */
9ad69f3bd04,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-03-20,02:41:12,1421,  private int getBalancerCutoffTime() {
9ad69f3bd04,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-03-20,02:41:12,1422,    int balancerCutoffTime =
9ad69f3bd04,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-03-20,02:41:12,1423,"      getConfiguration().getInt(""hbase.balancer.max.balancing"", -1);"
9ad69f3bd04,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-03-20,02:41:12,1424,    if (balancerCutoffTime == -1) {
e21a1ee4ae2,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2013-04-11,21:59:31,1425,      // No time period set so create one
9ad69f3bd04,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-03-20,02:41:12,1426,      int balancerPeriod =
9ad69f3bd04,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-03-20,02:41:12,1427,"        getConfiguration().getInt(""hbase.balancer.period"", 300000);"
e21a1ee4ae2,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2013-04-11,21:59:31,1428,      balancerCutoffTime = balancerPeriod;
9ad69f3bd04,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-03-20,02:41:12,1429,"      // If nonsense period, set it to balancerPeriod"
9ad69f3bd04,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-03-20,02:41:12,1430,      if (balancerCutoffTime <= 0) balancerCutoffTime = balancerPeriod;
9ad69f3bd04,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-03-20,02:41:12,1431,    }
9ad69f3bd04,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-03-20,02:41:12,1432,    return balancerCutoffTime;
9ad69f3bd04,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-03-20,02:41:12,1433,  }
9ad69f3bd04,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-03-20,02:41:12,1434,
4742456403e,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,nkeywal,2014-02-07,20:27:42,1435,  public boolean balance() throws IOException {
5f5f22e30da,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,ramkrishna,2012-08-24,18:35:52,1436,"    // if master not initialized, don\'t run balancer."
5f5f22e30da,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,ramkrishna,2012-08-24,18:35:52,1437,    if (!this.initialized) {
5f5f22e30da,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,ramkrishna,2012-08-24,18:35:52,1438,"      LOG.debug(""Master has not been initialized, don\'t run balancer."");"
5f5f22e30da,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,ramkrishna,2012-08-24,18:35:52,1439,      return false;
5f5f22e30da,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,ramkrishna,2012-08-24,18:35:52,1440,    }
9ad69f3bd04,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-03-20,02:41:12,1441,    // Do this call outside of synchronized block.
9ad69f3bd04,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-03-20,02:41:12,1442,    int maximumBalanceTime = getBalancerCutoffTime();
de4f4aa9e4b,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-04-05,18:57:09,1443,    boolean balancerRan;
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,1444,    synchronized (this.balancer) {
d4355b91d5f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2014-02-03,20:36:12,1445,"      // If balance not true, don\'t run balancer."
d4355b91d5f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2014-02-03,20:36:12,1446,      if (!this.loadBalancerTracker.isBalancerOn()) return false;
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,1447,      // Only allow one balance run at at time.
57afee6a6bb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2012-07-27,16:34:32,1448,      if (this.assignmentManager.getRegionStates().isRegionsInTransition()) {
57afee6a6bb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2012-07-27,16:34:32,1449,"        Map<String, RegionState> regionsInTransition ="
57afee6a6bb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2012-07-27,16:34:32,1450,          this.assignmentManager.getRegionStates().getRegionsInTransition();
57afee6a6bb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2012-07-27,16:34:32,1451,"        LOG.debug(""Not running balancer because "" + regionsInTransition.size() +"
57afee6a6bb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2012-07-27,16:34:32,1452,"          "" region(s) in transition: "" + org.apache.commons.lang.StringUtils."
57afee6a6bb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2012-07-27,16:34:32,1453,"            abbreviate(regionsInTransition.toString(), 256));"
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,1454,        return false;
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,1455,      }
95f2f2eab4d,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jean-Daniel Cryans,2010-12-04,00:50:16,1456,      if (this.serverManager.areDeadServersInProgress()) {
8d5248d3d95,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-12-06,20:56:15,1457,"        LOG.debug(""Not running balancer because processing dead regionserver(s): "" +"
de4f4aa9e4b,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-04-05,18:57:09,1458,          this.serverManager.getDeadServers());
7a8c36be23e,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-11-21,17:29:32,1459,        return false;
7a8c36be23e,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-11-21,17:29:32,1460,      }
de4f4aa9e4b,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-04-05,18:57:09,1461,
1229397a95c,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Gary Helmling,2010-12-21,20:39:26,1462,      if (this.cpHost != null) {
5c585457877,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2013-05-07,16:10:07,1463,        try {
5c585457877,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2013-05-07,16:10:07,1464,          if (this.cpHost.preBalance()) {
5c585457877,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2013-05-07,16:10:07,1465,"            LOG.debug(""Coprocessor bypassing balancer request"");"
5c585457877,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2013-05-07,16:10:07,1466,            return false;
5c585457877,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2013-05-07,16:10:07,1467,          }
5c585457877,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2013-05-07,16:10:07,1468,        } catch (IOException ioe) {
5c585457877,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2013-05-07,16:10:07,1469,"          LOG.error(""Error invoking master coprocessor preBalance()"", ioe);"
1229397a95c,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Gary Helmling,2010-12-21,20:39:26,1470,          return false;
1229397a95c,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Gary Helmling,2010-12-21,20:39:26,1471,        }
1229397a95c,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Gary Helmling,2010-12-21,20:39:26,1472,      }
1229397a95c,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Gary Helmling,2010-12-21,20:39:26,1473,
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,1474,"      Map<TableName, Map<ServerName, List<HRegionInfo>>> assignmentsByTable ="
57afee6a6bb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2012-07-27,16:34:32,1475,        this.assignmentManager.getRegionStates().getAssignmentsByTable();
c3d7b8ec190,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-01-05,22:22:19,1476,
c3d7b8ec190,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-01-05,22:22:19,1477,      List<RegionPlan> plans = new ArrayList<RegionPlan>();
4ebecd3eba5,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-30,20:53:15,1478,      //Give the balancer the current cluster state.
4ebecd3eba5,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-30,20:53:15,1479,      this.balancer.setClusterStatus(getClusterStatus());
c3d7b8ec190,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-01-05,22:22:19,1480,"      for (Map<ServerName, List<HRegionInfo>> assignments : assignmentsByTable.values()) {"
c3d7b8ec190,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-01-05,22:22:19,1481,        List<RegionPlan> partialPlans = this.balancer.balanceCluster(assignments);
c3d7b8ec190,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-01-05,22:22:19,1482,        if (partialPlans != null) plans.addAll(partialPlans);
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,1483,      }
e21a1ee4ae2,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2013-04-11,21:59:31,1484,      long cutoffTime = System.currentTimeMillis() + maximumBalanceTime;
7a8c36be23e,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-11-21,17:29:32,1485,      int rpCount = 0;  // number of RegionPlans balanced so far
9ad69f3bd04,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-03-20,02:41:12,1486,      long totalRegPlanExecTime = 0;
5de1c25b33e,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-03-31,18:33:37,1487,      balancerRan = plans != null;
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,1488,      if (plans != null && !plans.isEmpty()) {
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,1489,        for (RegionPlan plan: plans) {
a46c74894f2,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-09-22,18:42:41,1490,"          LOG.info(""balance "" + plan);"
c7781e9a37f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-09-29,17:57:49,1491,          long balStartTime = System.currentTimeMillis();
e21a1ee4ae2,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2013-04-11,21:59:31,1492,          //TODO: bulk assign
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,1493,          this.assignmentManager.balance(plan);
c7781e9a37f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-09-29,17:57:49,1494,          totalRegPlanExecTime += System.currentTimeMillis()-balStartTime;
9ad69f3bd04,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-03-20,02:41:12,1495,          rpCount++;
9ad69f3bd04,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-03-20,02:41:12,1496,          if (rpCount < plans.size() &&
9ad69f3bd04,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-03-20,02:41:12,1497,"              // if performing next balance exceeds cutoff time, exit the loop"
c7781e9a37f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-09-29,17:57:49,1498,              (System.currentTimeMillis() + (totalRegPlanExecTime / rpCount)) > cutoffTime) {
e21a1ee4ae2,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2013-04-11,21:59:31,1499,"            //TODO: After balance, there should not be a cutoff time (keeping it as a security net for now)"
9ad69f3bd04,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-03-20,02:41:12,1500,"            LOG.debug(""No more balancing till next balance run; maximumBalanceTime="" +"
de4f4aa9e4b,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-04-05,18:57:09,1501,              maximumBalanceTime);
9ad69f3bd04,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-03-20,02:41:12,1502,            break;
9ad69f3bd04,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-03-20,02:41:12,1503,          }
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,1504,        }
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,1505,      }
1229397a95c,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Gary Helmling,2010-12-21,20:39:26,1506,      if (this.cpHost != null) {
5c585457877,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2013-05-07,16:10:07,1507,        try {
5c585457877,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2013-05-07,16:10:07,1508,"          this.cpHost.postBalance(rpCount < plans.size() ? plans.subList(0, rpCount) : plans);"
5c585457877,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2013-05-07,16:10:07,1509,        } catch (IOException ioe) {
5c585457877,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2013-05-07,16:10:07,1510,          // balancing already succeeded so don\'t change the result
5c585457877,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2013-05-07,16:10:07,1511,"          LOG.error(""Error invoking master coprocessor postBalance()"", ioe);"
5c585457877,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2013-05-07,16:10:07,1512,        }
1229397a95c,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Gary Helmling,2010-12-21,20:39:26,1513,      }
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,1514,    }
5de1c25b33e,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-03-31,18:33:37,1515,    return balancerRan;
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,1516,  }
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,1517,
ca8882e804d,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-24,00:33:48,1518,  @Override
ca8882e804d,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-24,00:33:48,1519,"  public BalanceResponse balance(RpcController c, BalanceRequest request) throws ServiceException {"
7170a40decc,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-15,04:36:11,1520,    try {
7170a40decc,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-15,04:36:11,1521,      return BalanceResponse.newBuilder().setBalancerRan(balance()).build();
4742456403e,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,nkeywal,2014-02-07,20:27:42,1522,    } catch (IOException ex) {
7170a40decc,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-15,04:36:11,1523,      throw new ServiceException(ex);
7170a40decc,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-15,04:36:11,1524,    }
ca8882e804d,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-24,00:33:48,1525,  }
ca8882e804d,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-24,00:33:48,1526,
e1244033bf7,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-09-19,17:21:32,1527,  enum BalanceSwitchMode {
e1244033bf7,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-09-19,17:21:32,1528,"    SYNC,"
e1244033bf7,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-09-19,17:21:32,1529,    ASYNC
e1244033bf7,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-09-19,17:21:32,1530,  }
49627667a0d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-06-24,22:21:33,1531,
e1244033bf7,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-09-19,17:21:32,1532,  /**
e1244033bf7,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-09-19,17:21:32,1533,   * Assigns balancer switch according to BalanceSwitchMode
e1244033bf7,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-09-19,17:21:32,1534,   * @param b new balancer switch
e1244033bf7,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-09-19,17:21:32,1535,   * @param mode BalanceSwitchMode
e1244033bf7,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-09-19,17:21:32,1536,   * @return old balancer switch
e1244033bf7,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-09-19,17:21:32,1537,   */
c9d3cb1c3b6,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,gchanan,2012-09-13,23:00:46,1538,"  public boolean switchBalancer(final boolean b, BalanceSwitchMode mode) throws IOException {"
c9d3cb1c3b6,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,gchanan,2012-09-13,23:00:46,1539,    boolean oldValue = this.loadBalancerTracker.isBalancerOn();
1229397a95c,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Gary Helmling,2010-12-21,20:39:26,1540,    boolean newValue = b;
1229397a95c,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Gary Helmling,2010-12-21,20:39:26,1541,    try {
1229397a95c,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Gary Helmling,2010-12-21,20:39:26,1542,      if (this.cpHost != null) {
1229397a95c,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Gary Helmling,2010-12-21,20:39:26,1543,        newValue = this.cpHost.preBalanceSwitch(newValue);
1229397a95c,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Gary Helmling,2010-12-21,20:39:26,1544,      }
c9d3cb1c3b6,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,gchanan,2012-09-13,23:00:46,1545,      try {
c9d3cb1c3b6,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,gchanan,2012-09-13,23:00:46,1546,        if (mode == BalanceSwitchMode.SYNC) {
c9d3cb1c3b6,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,gchanan,2012-09-13,23:00:46,1547,          synchronized (this.balancer) {
c9d3cb1c3b6,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,gchanan,2012-09-13,23:00:46,1548,            this.loadBalancerTracker.setBalancerOn(newValue);
c9d3cb1c3b6,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,gchanan,2012-09-13,23:00:46,1549,          }
c9d3cb1c3b6,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,gchanan,2012-09-13,23:00:46,1550,        } else {
c9d3cb1c3b6,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,gchanan,2012-09-13,23:00:46,1551,          this.loadBalancerTracker.setBalancerOn(newValue);
e1244033bf7,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-09-19,17:21:32,1552,        }
c9d3cb1c3b6,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,gchanan,2012-09-13,23:00:46,1553,      } catch (KeeperException ke) {
c9d3cb1c3b6,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,gchanan,2012-09-13,23:00:46,1554,        throw new IOException(ke);
e1244033bf7,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-09-19,17:21:32,1555,      }
3babc19ae12,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-22,15:07:37,1556,"      LOG.info(getClientIdAuditPrefix() + "" set balanceSwitch="" + newValue);"
1229397a95c,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Gary Helmling,2010-12-21,20:39:26,1557,      if (this.cpHost != null) {
1229397a95c,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Gary Helmling,2010-12-21,20:39:26,1558,"        this.cpHost.postBalanceSwitch(oldValue, newValue);"
1229397a95c,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Gary Helmling,2010-12-21,20:39:26,1559,      }
1229397a95c,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Gary Helmling,2010-12-21,20:39:26,1560,    } catch (IOException ioe) {
1229397a95c,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Gary Helmling,2010-12-21,20:39:26,1561,"      LOG.warn(""Error flipping balance switch"", ioe);"
1229397a95c,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Gary Helmling,2010-12-21,20:39:26,1562,    }
ca8882e804d,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-24,00:33:48,1563,    return oldValue;
e1244033bf7,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-09-19,17:21:32,1564,  }
ca8882e804d,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-24,00:33:48,1565,
3babc19ae12,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-22,15:07:37,1566,  /**
3babc19ae12,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-22,15:07:37,1567,   * @return Client info for use as prefix on an audit log string; who did an action
3babc19ae12,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-22,15:07:37,1568,   */
3babc19ae12,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-22,15:07:37,1569,  String getClientIdAuditPrefix() {
3babc19ae12,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-22,15:07:37,1570,"    return ""Client="" + RequestContext.getRequestUserName() + ""/"" +"
3babc19ae12,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-22,15:07:37,1571,      RequestContext.get().getRemoteAddress();
3babc19ae12,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-22,15:07:37,1572,  }
3babc19ae12,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-22,15:07:37,1573,
c9d3cb1c3b6,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,gchanan,2012-09-13,23:00:46,1574,  public boolean synchronousBalanceSwitch(final boolean b) throws IOException {
e1244033bf7,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-09-19,17:21:32,1575,"    return switchBalancer(b, BalanceSwitchMode.SYNC);"
e1244033bf7,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-09-19,17:21:32,1576,  }
ca8882e804d,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-24,00:33:48,1577,
c9d3cb1c3b6,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,gchanan,2012-09-13,23:00:46,1578,  public boolean balanceSwitch(final boolean b) throws IOException {
e1244033bf7,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-09-19,17:21:32,1579,"    return switchBalancer(b, BalanceSwitchMode.ASYNC);"
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,1580,  }
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,1581,
ca8882e804d,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-24,00:33:48,1582,  @Override
0f558bb1268,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-06-23,00:38:45,1583,  public SetBalancerRunningResponse setBalancerRunning(
0f558bb1268,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-06-23,00:38:45,1584,"      RpcController controller, SetBalancerRunningRequest req) throws ServiceException {"
c9d3cb1c3b6,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,gchanan,2012-09-13,23:00:46,1585,    try {
c9d3cb1c3b6,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,gchanan,2012-09-13,23:00:46,1586,      boolean prevValue = (req.getSynchronous())?
c9d3cb1c3b6,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,gchanan,2012-09-13,23:00:46,1587,        synchronousBalanceSwitch(req.getOn()):balanceSwitch(req.getOn());
c9d3cb1c3b6,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,gchanan,2012-09-13,23:00:46,1588,      return SetBalancerRunningResponse.newBuilder().setPrevBalanceValue(prevValue).build();
c9d3cb1c3b6,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,gchanan,2012-09-13,23:00:46,1589,    } catch (IOException ioe) {
c9d3cb1c3b6,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,gchanan,2012-09-13,23:00:46,1590,      throw new ServiceException(ioe);
c9d3cb1c3b6,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,gchanan,2012-09-13,23:00:46,1591,    }
ca8882e804d,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-24,00:33:48,1592,  }
ca8882e804d,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-24,00:33:48,1593,
0d31ac5f37a,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-01-09,05:25:50,1594,  /**
3c764b1e057,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-10-25,06:51:28,1595,   * Switch for the background CatalogJanitor thread.
0d31ac5f37a,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-01-09,05:25:50,1596,   * Used for testing.  The thread will continue to run.  It will just be a noop
0d31ac5f37a,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-01-09,05:25:50,1597,   * if disabled.
0d31ac5f37a,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-01-09,05:25:50,1598,"   * @param b If false, the catalog janitor won\'t do anything."
0d31ac5f37a,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-01-09,05:25:50,1599,   */
0d31ac5f37a,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-01-09,05:25:50,1600,  public void setCatalogJanitorEnabled(final boolean b) {
d2fb5a546fd,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,nkeywal,2013-02-12,09:38:57,1601,    this.catalogJanitorChore.setEnabled(b);
0d31ac5f37a,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-01-09,05:25:50,1602,  }
0d31ac5f37a,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-01-09,05:25:50,1603,
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,zjushch,2013-03-24,10:26:21,1604,  @Override
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,zjushch,2013-03-24,10:26:21,1605,  public DispatchMergingRegionsResponse dispatchMergingRegions(
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,zjushch,2013-03-24,10:26:21,1606,"      RpcController controller, DispatchMergingRegionsRequest request)"
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,zjushch,2013-03-24,10:26:21,1607,      throws ServiceException {
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,zjushch,2013-03-24,10:26:21,1608,    final byte[] encodedNameOfRegionA = request.getRegionA().getValue()
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,zjushch,2013-03-24,10:26:21,1609,        .toByteArray();
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,zjushch,2013-03-24,10:26:21,1610,    final byte[] encodedNameOfRegionB = request.getRegionB().getValue()
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,zjushch,2013-03-24,10:26:21,1611,        .toByteArray();
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,zjushch,2013-03-24,10:26:21,1612,    final boolean forcible = request.getForcible();
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,zjushch,2013-03-24,10:26:21,1613,    if (request.getRegionA().getType() != RegionSpecifierType.ENCODED_REGION_NAME
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,zjushch,2013-03-24,10:26:21,1614,        || request.getRegionB().getType() != RegionSpecifierType.ENCODED_REGION_NAME) {
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,zjushch,2013-03-24,10:26:21,1615,"      LOG.warn(""mergeRegions specifier type: expected: """
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,zjushch,2013-03-24,10:26:21,1616,"          + RegionSpecifierType.ENCODED_REGION_NAME + "" actual: region_a="""
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,zjushch,2013-03-24,10:26:21,1617,"          + request.getRegionA().getType() + "", region_b="""
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,zjushch,2013-03-24,10:26:21,1618,          + request.getRegionB().getType());
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,zjushch,2013-03-24,10:26:21,1619,    }
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,zjushch,2013-03-24,10:26:21,1620,    RegionState regionStateA = assignmentManager.getRegionStates()
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,zjushch,2013-03-24,10:26:21,1621,        .getRegionState(Bytes.toString(encodedNameOfRegionA));
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,zjushch,2013-03-24,10:26:21,1622,    RegionState regionStateB = assignmentManager.getRegionStates()
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,zjushch,2013-03-24,10:26:21,1623,        .getRegionState(Bytes.toString(encodedNameOfRegionB));
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,zjushch,2013-03-24,10:26:21,1624,    if (regionStateA == null || regionStateB == null) {
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,zjushch,2013-03-24,10:26:21,1625,      throw new ServiceException(new UnknownRegionException(
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,zjushch,2013-03-24,10:26:21,1626,          Bytes.toStringBinary(regionStateA == null ? encodedNameOfRegionA
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,zjushch,2013-03-24,10:26:21,1627,              : encodedNameOfRegionB)));
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,zjushch,2013-03-24,10:26:21,1628,    }
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,zjushch,2013-03-24,10:26:21,1629,
3812294456f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-07-26,22:50:43,1630,    if (!regionStateA.isOpened() || !regionStateB.isOpened()) {
3812294456f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-07-26,22:50:43,1631,      throw new ServiceException(new MergeRegionException(
3812294456f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-07-26,22:50:43,1632,"        ""Unable to merge regions not online "" + regionStateA + "", "" + regionStateB));"
3812294456f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-07-26,22:50:43,1633,    }
3812294456f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-07-26,22:50:43,1634,
3812294456f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-07-26,22:50:43,1635,    HRegionInfo regionInfoA = regionStateA.getRegion();
3812294456f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-07-26,22:50:43,1636,    HRegionInfo regionInfoB = regionStateB.getRegion();
3812294456f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-07-26,22:50:43,1637,    if (regionInfoA.compareTo(regionInfoB) == 0) {
3812294456f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-07-26,22:50:43,1638,      throw new ServiceException(new MergeRegionException(
3812294456f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-07-26,22:50:43,1639,"        ""Unable to merge a region to itself "" + regionInfoA + "", "" + regionInfoB));"
3812294456f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-07-26,22:50:43,1640,    }
3812294456f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-07-26,22:50:43,1641,
3812294456f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-07-26,22:50:43,1642,"    if (!forcible && !HRegionInfo.areAdjacent(regionInfoA, regionInfoB)) {"
3812294456f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-07-26,22:50:43,1643,      throw new ServiceException(new MergeRegionException(
3812294456f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-07-26,22:50:43,1644,"        ""Unable to merge not adjacent regions """
3812294456f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-07-26,22:50:43,1645,"          + regionInfoA.getRegionNameAsString() + "", """
3812294456f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-07-26,22:50:43,1646,          + regionInfoB.getRegionNameAsString()
3812294456f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-07-26,22:50:43,1647,"          + "" where forcible = "" + forcible));"
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,zjushch,2013-03-24,10:26:21,1648,    }
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,zjushch,2013-03-24,10:26:21,1649,
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,zjushch,2013-03-24,10:26:21,1650,    try {
3812294456f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-07-26,22:50:43,1651,"      dispatchMergingRegions(regionInfoA, regionInfoB, forcible);"
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,zjushch,2013-03-24,10:26:21,1652,    } catch (IOException ioe) {
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,zjushch,2013-03-24,10:26:21,1653,      throw new ServiceException(ioe);
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,zjushch,2013-03-24,10:26:21,1654,    }
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,zjushch,2013-03-24,10:26:21,1655,
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,zjushch,2013-03-24,10:26:21,1656,    return DispatchMergingRegionsResponse.newBuilder().build();
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,zjushch,2013-03-24,10:26:21,1657,  }
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,zjushch,2013-03-24,10:26:21,1658,
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,zjushch,2013-03-24,10:26:21,1659,  @Override
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,zjushch,2013-03-24,10:26:21,1660,"  public void dispatchMergingRegions(final HRegionInfo region_a,"
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,zjushch,2013-03-24,10:26:21,1661,"      final HRegionInfo region_b, final boolean forcible) throws IOException {"
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,zjushch,2013-03-24,10:26:21,1662,    checkInitialized();
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,zjushch,2013-03-24,10:26:21,1663,"    this.executorService.submit(new DispatchMergingRegionHandler(this,"
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,zjushch,2013-03-24,10:26:21,1664,"        this.catalogJanitorChore, region_a, region_b, forcible));"
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,zjushch,2013-03-24,10:26:21,1665,  }
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,zjushch,2013-03-24,10:26:21,1666,
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,1667,  @Override
c18eebd8a61,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-17,05:06:15,1668,"  public MoveRegionResponse moveRegion(RpcController controller, MoveRegionRequest req)"
c18eebd8a61,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-17,05:06:15,1669,  throws ServiceException {
c18eebd8a61,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-17,05:06:15,1670,    final byte [] encodedRegionName = req.getRegion().getValue().toByteArray();
c18eebd8a61,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-17,05:06:15,1671,    RegionSpecifierType type = req.getRegion().getType();
c18eebd8a61,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-17,05:06:15,1672,    final byte [] destServerName = (req.hasDestServerName())?
c18eebd8a61,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-17,05:06:15,1673,      Bytes.toBytes(ProtobufUtil.toServerName(req.getDestServerName()).getServerName()):null;
c18eebd8a61,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-17,05:06:15,1674,    MoveRegionResponse mrr = MoveRegionResponse.newBuilder().build();
c18eebd8a61,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-17,05:06:15,1675,
c18eebd8a61,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-17,05:06:15,1676,    if (type != RegionSpecifierType.ENCODED_REGION_NAME) {
c18eebd8a61,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-17,05:06:15,1677,"      LOG.warn(""moveRegion specifier type: expected: "" + RegionSpecifierType.ENCODED_REGION_NAME"
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,1678,"        + "" actual: "" + type);"
c18eebd8a61,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-17,05:06:15,1679,    }
3ce9acc3e77,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-03-21,23:27:49,1680,
3ce9acc3e77,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-03-21,23:27:49,1681,    try {
3ce9acc3e77,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-03-21,23:27:49,1682,"      move(encodedRegionName, destServerName);"
3d6dee2c3cd,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-03-25,17:57:06,1683,    } catch (HBaseIOException ioe) {
3ce9acc3e77,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-03-21,23:27:49,1684,      throw new ServiceException(ioe);
3ce9acc3e77,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-03-21,23:27:49,1685,    }
3ce9acc3e77,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-03-21,23:27:49,1686,    return mrr;
3ce9acc3e77,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-03-21,23:27:49,1687,  }
3ce9acc3e77,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-03-21,23:27:49,1688,
3ce9acc3e77,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-03-21,23:27:49,1689,"  void move(final byte[] encodedRegionName,"
3d6dee2c3cd,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-03-25,17:57:06,1690,      final byte[] destServerName) throws HBaseIOException {
57afee6a6bb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2012-07-27,16:34:32,1691,    RegionState regionState = assignmentManager.getRegionStates().
57afee6a6bb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2012-07-27,16:34:32,1692,      getRegionState(Bytes.toString(encodedRegionName));
57afee6a6bb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2012-07-27,16:34:32,1693,    if (regionState == null) {
3ce9acc3e77,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-03-21,23:27:49,1694,      throw new UnknownRegionException(Bytes.toStringBinary(encodedRegionName));
c18eebd8a61,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-17,05:06:15,1695,    }
57afee6a6bb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2012-07-27,16:34:32,1696,
57afee6a6bb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2012-07-27,16:34:32,1697,    HRegionInfo hri = regionState.getRegion();
17a5076606b,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-05-12,20:47:25,1698,    ServerName dest;
2149277bf36,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-11-29,19:41:02,1699,    if (destServerName == null || destServerName.length == 0) {
2149277bf36,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-11-29,19:41:02,1700,"      LOG.info(""Passed destination servername is null/empty so "" +"
2149277bf36,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-11-29,19:41:02,1701,"        ""choosing a server at random"");"
17a5076606b,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-05-12,20:47:25,1702,      final List<ServerName> destServers = this.serverManager.createDestinationServersList(
57afee6a6bb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2012-07-27,16:34:32,1703,        regionState.getServerName());
17a5076606b,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-05-12,20:47:25,1704,"      dest = balancer.randomAssignment(hri, destServers);"
2149277bf36,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-11-29,19:41:02,1705,    } else {
bc7c3c7daaa,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,nkeywal,2013-11-20,20:02:25,1706,      dest = ServerName.valueOf(Bytes.toString(destServerName));
57afee6a6bb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2012-07-27,16:34:32,1707,      if (dest.equals(regionState.getServerName())) {
14f80913e55,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,ramkrishna,2012-04-20,17:36:02,1708,"        LOG.debug(""Skipping move of region "" + hri.getRegionNameAsString()"
17a5076606b,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-05-12,20:47:25,1709,"          + "" because region already assigned to the same server "" + dest + ""."");"
3ce9acc3e77,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-03-21,23:27:49,1710,        return;
14f80913e55,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,ramkrishna,2012-04-20,17:36:02,1711,      }
17a5076606b,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-05-12,20:47:25,1712,    }
17a5076606b,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-05-12,20:47:25,1713,
17a5076606b,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-05-12,20:47:25,1714,    // Now we can do the move
57afee6a6bb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2012-07-27,16:34:32,1715,"    RegionPlan rp = new RegionPlan(hri, regionState.getServerName(), dest);"
17a5076606b,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-05-12,20:47:25,1716,
17a5076606b,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-05-12,20:47:25,1717,    try {
3ce9acc3e77,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-03-21,23:27:49,1718,      checkInitialized();
17a5076606b,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-05-12,20:47:25,1719,      if (this.cpHost != null) {
17a5076606b,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-05-12,20:47:25,1720,"        if (this.cpHost.preMove(hri, rp.getSource(), rp.getDestination())) {"
3ce9acc3e77,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-03-21,23:27:49,1721,          return;
900a9124c4e,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Gary Helmling,2011-09-16,21:10:56,1722,        }
1229397a95c,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Gary Helmling,2010-12-21,20:39:26,1723,      }
3babc19ae12,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-22,15:07:37,1724,"      LOG.info(getClientIdAuditPrefix() + "" move "" + rp + "", running balancer"");"
17a5076606b,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-05-12,20:47:25,1725,      this.assignmentManager.balance(rp);
17a5076606b,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-05-12,20:47:25,1726,      if (this.cpHost != null) {
17a5076606b,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-05-12,20:47:25,1727,"        this.cpHost.postMove(hri, rp.getSource(), rp.getDestination());"
17a5076606b,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-05-12,20:47:25,1728,      }
17a5076606b,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-05-12,20:47:25,1729,    } catch (IOException ioe) {
3d6dee2c3cd,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-03-25,17:57:06,1730,      if (ioe instanceof HBaseIOException) {
3d6dee2c3cd,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-03-25,17:57:06,1731,        throw (HBaseIOException)ioe;
3d6dee2c3cd,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-03-25,17:57:06,1732,      }
3d6dee2c3cd,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-03-25,17:57:06,1733,      throw new HBaseIOException(ioe);
2149277bf36,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-11-29,19:41:02,1734,    }
ef9a7c1017c,src/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2008-02-12,06:19:46,1735,  }
931d452cb2c,src/java/org/apache/hadoop/hbase/HMaster.java,Jim Kellerman,2007-08-10,22:11:05,1736,
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,1737,  @Override
d8f5be74d76,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-06-14,05:40:32,1738,"  public void createTable(HTableDescriptor hTableDescriptor,"
cc93cb02981,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-08-26,18:59:26,1739,    byte [][] splitKeys)
e06e00450ef,core/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-05-07,19:26:45,1740,  throws IOException {
ef9a7c1017c,src/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2008-02-12,06:19:46,1741,    if (!isMasterRunning()) {
ef9a7c1017c,src/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2008-02-12,06:19:46,1742,      throw new MasterNotRunningException();
612f446dbdd,src/java/org/apache/hadoop/hbase/HMaster.java,Jim Kellerman,2007-12-07,21:23:54,1743,    }
1193bc1df07,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Gary Helmling,2011-09-08,06:49:35,1744,
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,1745,    String namespace = hTableDescriptor.getTableName().getNamespaceAsString();
040b53e09aa,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-17,05:43:06,1746,    getNamespaceDescriptor(namespace); // ensure namespace exists
1be8cd2c63a,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-21,21:42:03,1747,
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,1748,"    HRegionInfo[] newRegions = getHRegionInfos(hTableDescriptor, splitKeys);"
9989f836998,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,larsh,2012-04-24,05:12:45,1749,    checkInitialized();
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1750,    sanityCheckTableDescriptor(hTableDescriptor);
d8f5be74d76,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-06-14,05:40:32,1751,    if (cpHost != null) {
1193bc1df07,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Gary Helmling,2011-09-08,06:49:35,1752,"      cpHost.preCreateTable(hTableDescriptor, newRegions);"
0d884e15bc6,core/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-05-06,15:13:51,1753,    }
3babc19ae12,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-22,15:07:37,1754,"    LOG.info(getClientIdAuditPrefix() + "" create "" + hTableDescriptor);"
cc93cb02981,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-08-26,18:59:26,1755,"    this.executorService.submit(new CreateTableHandler(this,"
d9303244482,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2012-09-24,20:33:19,1756,"      this.fileSystemManager, hTableDescriptor, conf,"
9bb04c741a0,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2013-02-22,00:15:52,1757,"      newRegions, this).prepare());"
cc93cb02981,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-08-26,18:59:26,1758,    if (cpHost != null) {
1193bc1df07,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Gary Helmling,2011-09-08,06:49:35,1759,"      cpHost.postCreateTable(hTableDescriptor, newRegions);"
81aae08c4ad,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-05-25,05:07:10,1760,    }
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,1761,
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,1762,  }
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,1763,
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1764,  /**
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1765,"   * Checks whether the table conforms to some sane limits, and configured"
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1766,"   * values (compression, etc) work. Throws an exception if something is wrong."
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1767,   * @throws IOException
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1768,   */
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1769,  private void sanityCheckTableDescriptor(final HTableDescriptor htd) throws IOException {
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1770,"    final String CONF_KEY = ""hbase.table.sanity.checks"";"
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1771,"    if (!conf.getBoolean(CONF_KEY, true)) {"
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1772,      return;
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1773,    }
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1774,    String tableVal = htd.getConfigurationValue(CONF_KEY);
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1775,    if (tableVal != null && !Boolean.valueOf(tableVal)) {
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1776,      return;
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1777,    }
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1778,
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1779,    // check max file size
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1780,    long maxFileSizeLowerLimit = 2 * 1024 * 1024L; // 2M is the default lower limit
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1781,    long maxFileSize = htd.getMaxFileSize();
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1782,    if (maxFileSize < 0) {
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1783,"      maxFileSize = conf.getLong(HConstants.HREGION_MAX_FILESIZE, maxFileSizeLowerLimit);"
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1784,    }
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1785,"    if (maxFileSize < conf.getLong(""hbase.hregion.max.filesize.limit"", maxFileSizeLowerLimit)) {"
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1786,"      throw new DoNotRetryIOException(""MAX_FILESIZE for table descriptor or """
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1787,"        + ""\\""hbase.hregion.max.filesize\\"" ("" + maxFileSize"
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1788,"        + "") is too small, which might cause over splitting into unmanageable """
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1789,"        + ""number of regions. Set "" + CONF_KEY + "" to false at conf or table descriptor """
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1790,"          + ""if you want to bypass sanity checks"");"
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1791,    }
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1792,
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1793,    // check flush size
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1794,    long flushSizeLowerLimit = 1024 * 1024L; // 1M is the default lower limit
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1795,    long flushSize = htd.getMemStoreFlushSize();
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1796,    if (flushSize < 0) {
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1797,"      flushSize = conf.getLong(HConstants.HREGION_MEMSTORE_FLUSH_SIZE, flushSizeLowerLimit);"
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1798,    }
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1799,"    if (flushSize < conf.getLong(""hbase.hregion.memstore.flush.size.limit"", flushSizeLowerLimit)) {"
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1800,"      throw new DoNotRetryIOException(""MEMSTORE_FLUSHSIZE for table descriptor or """
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1801,"          + ""\\""hbase.hregion.memstore.flush.size\\"" (""+flushSize+"") is too small, which might cause"""
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1802,"          + "" very frequent flushing. Set "" + CONF_KEY + "" to false at conf or table descriptor """
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1803,"          + ""if you want to bypass sanity checks"");"
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1804,    }
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1805,
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1806,    // check split policy class can be loaded
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1807,    try {
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1808,"      RegionSplitPolicy.getSplitPolicyClass(htd, conf);"
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1809,    } catch (Exception ex) {
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1810,      throw new DoNotRetryIOException(ex);
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1811,    }
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1812,
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1813,    // check compression can be loaded
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1814,    checkCompression(htd);
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1815,
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1816,    // check that we have at least 1 CF
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1817,    if (htd.getColumnFamilies().length == 0) {
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1818,"      throw new DoNotRetryIOException(""Table should have at least one column family """
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1819,"          + ""Set ""+CONF_KEY+"" at conf or table descriptor if you want to bypass sanity checks"");"
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1820,    }
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1821,
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1822,    for (HColumnDescriptor hcd : htd.getColumnFamilies()) {
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1823,      if (hcd.getTimeToLive() <= 0) {
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1824,"        throw new DoNotRetryIOException(""TTL for column family "" + hcd.getNameAsString()"
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1825,"          + ""  must be positive. Set "" + CONF_KEY + "" to false at conf or table descriptor """
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1826,"          + ""if you want to bypass sanity checks"");"
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1827,      }
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1828,
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1829,      // check blockSize
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1830,      if (hcd.getBlocksize() < 1024 || hcd.getBlocksize() > 16 * 1024 * 1024) {
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1831,"        throw new DoNotRetryIOException(""Block size for column family "" + hcd.getNameAsString()"
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1832,"          + ""  must be between 1K and 16MB Set ""+CONF_KEY+"" to false at conf or table descriptor """
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1833,"          + ""if you want to bypass sanity checks"");"
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1834,      }
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1835,
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1836,      // check versions
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1837,      if (hcd.getMinVersions() < 0) {
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1838,"        throw new DoNotRetryIOException(""Min versions for column family "" + hcd.getNameAsString()"
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1839,"          + ""  must be positive. Set "" + CONF_KEY + "" to false at conf or table descriptor """
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1840,"          + ""if you want to bypass sanity checks"");"
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1841,      }
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1842,      // max versions already being checked
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1843,
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1844,      // check replication scope
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1845,      if (hcd.getScope() < 0) {
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1846,"        throw new DoNotRetryIOException(""Replication scope for column family """
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1847,"          + hcd.getNameAsString() + ""  must be positive. Set "" + CONF_KEY + "" to false at conf """
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1848,"          + ""or table descriptor if you want to bypass sanity checks"");"
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1849,      }
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1850,
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1851,      // TODO: should we check coprocessors and encryption ?
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1852,    }
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1853,  }
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,1854,
8a0b742b4d4,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-07-13,07:20:25,1855,  private void checkCompression(final HTableDescriptor htd)
8a0b742b4d4,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-07-13,07:20:25,1856,  throws IOException {
8a0b742b4d4,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-07-13,07:20:25,1857,    if (!this.masterCheckCompression) return;
8a0b742b4d4,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-07-13,07:20:25,1858,    for (HColumnDescriptor hcd : htd.getColumnFamilies()) {
8a0b742b4d4,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-07-13,07:20:25,1859,      checkCompression(hcd);
8a0b742b4d4,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-07-13,07:20:25,1860,    }
8a0b742b4d4,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-07-13,07:20:25,1861,  }
8a0b742b4d4,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-07-13,07:20:25,1862,
8a0b742b4d4,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-07-13,07:20:25,1863,  private void checkCompression(final HColumnDescriptor hcd)
8a0b742b4d4,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-07-13,07:20:25,1864,  throws IOException {
8a0b742b4d4,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-07-13,07:20:25,1865,    if (!this.masterCheckCompression) return;
8a0b742b4d4,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-07-13,07:20:25,1866,    CompressionTest.testCompression(hcd.getCompression());
8a0b742b4d4,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-07-13,07:20:25,1867,    CompressionTest.testCompression(hcd.getCompactionCompression());
8a0b742b4d4,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-07-13,07:20:25,1868,  }
8a0b742b4d4,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-07-13,07:20:25,1869,
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,1870,  @Override
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,1871,"  public CreateTableResponse createTable(RpcController controller, CreateTableRequest req)"
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,1872,  throws ServiceException {
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,1873,    HTableDescriptor hTableDescriptor = HTableDescriptor.convert(req.getTableSchema());
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,1874,    byte [][] splitKeys = ProtobufUtil.getSplitKeysArray(req);
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,1875,    try {
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,1876,"      createTable(hTableDescriptor,splitKeys);"
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,1877,    } catch (IOException ioe) {
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,1878,      throw new ServiceException(ioe);
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,1879,    }
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,1880,    return CreateTableResponse.newBuilder().build();
cc93cb02981,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-08-26,18:59:26,1881,  }
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,1882,
cc93cb02981,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-08-26,18:59:26,1883,"  private HRegionInfo[] getHRegionInfos(HTableDescriptor hTableDescriptor,"
cc93cb02981,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-08-26,18:59:26,1884,    byte[][] splitKeys) {
cc93cb02981,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-08-26,18:59:26,1885,    HRegionInfo[] hRegionInfos = null;
cc93cb02981,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-08-26,18:59:26,1886,    if (splitKeys == null || splitKeys.length == 0) {
cc93cb02981,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-08-26,18:59:26,1887,      hRegionInfos = new HRegionInfo[]{
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,1888,"          new HRegionInfo(hTableDescriptor.getTableName(), null, null)};"
cc93cb02981,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-08-26,18:59:26,1889,    } else {
cc93cb02981,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-08-26,18:59:26,1890,      int numRegions = splitKeys.length + 1;
cc93cb02981,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-08-26,18:59:26,1891,      hRegionInfos = new HRegionInfo[numRegions];
cc93cb02981,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-08-26,18:59:26,1892,      byte[] startKey = null;
cc93cb02981,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-08-26,18:59:26,1893,      byte[] endKey = null;
cc93cb02981,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-08-26,18:59:26,1894,      for (int i = 0; i < numRegions; i++) {
cc93cb02981,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-08-26,18:59:26,1895,        endKey = (i == splitKeys.length) ? null : splitKeys[i];
cc93cb02981,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-08-26,18:59:26,1896,        hRegionInfos[i] =
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,1897,"            new HRegionInfo(hTableDescriptor.getTableName(), startKey, endKey);"
cc93cb02981,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-08-26,18:59:26,1898,        startKey = endKey;
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,1899,      }
0d884e15bc6,core/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-05-06,15:13:51,1900,    }
cc93cb02981,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-08-26,18:59:26,1901,    return hRegionInfos;
14dd64dacef,src/java/org/apache/hadoop/hbase/HMaster.java,Michael Stack,2007-07-14,20:08:01,1902,  }
^948d0cdec4,src/java/org/apache/hadoop/hbase/HMaster.java,Doug Cutting,2007-04-03,20:34:28,1903,
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,1904,  private static boolean isCatalogTable(final TableName tableName) {
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,1905,    return tableName.equals(TableName.META_TABLE_NAME);
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,1906,  }
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,1907,
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,1908,  @Override
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,1909,  public void deleteTable(final TableName tableName) throws IOException {
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,1910,    checkInitialized();
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,1911,    if (cpHost != null) {
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,1912,      cpHost.preDeleteTable(tableName);
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,1913,    }
3babc19ae12,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-22,15:07:37,1914,"    LOG.info(getClientIdAuditPrefix() + "" delete "" + tableName);"
9bb04c741a0,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2013-02-22,00:15:52,1915,"    this.executorService.submit(new DeleteTableHandler(tableName, this, this).prepare());"
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,1916,    if (cpHost != null) {
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,1917,      cpHost.postDeleteTable(tableName);
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,1918,    }
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,1919,  }
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,1920,
8d8dc87d0dd,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-10-13,23:12:30,1921,  @Override
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,1922,"  public DeleteTableResponse deleteTable(RpcController controller, DeleteTableRequest request)"
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,1923,  throws ServiceException {
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,1924,    try {
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,1925,      deleteTable(ProtobufUtil.toTableName(request.getTableName()));
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,1926,    } catch (IOException ioe) {
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,1927,      throw new ServiceException(ioe);
1229397a95c,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Gary Helmling,2010-12-21,20:39:26,1928,    }
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,1929,    return DeleteTableResponse.newBuilder().build();
f35462842b9,src/java/org/apache/hadoop/hbase/HMaster.java,Jim Kellerman,2007-05-29,17:17:44,1930,  }
931d452cb2c,src/java/org/apache/hadoop/hbase/HMaster.java,Jim Kellerman,2007-08-10,22:11:05,1931,
7a8c36be23e,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-11-21,17:29:32,1932,  /**
7a8c36be23e,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-11-21,17:29:32,1933,   * Get the number of regions of the table that have been updated by the alter.
7a8c36be23e,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-11-21,17:29:32,1934,   *
7a8c36be23e,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-11-21,17:29:32,1935,   * @return Pair indicating the number of regions updated Pair.getFirst is the
7a8c36be23e,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-11-21,17:29:32,1936,   *         regions that are yet to be updated Pair.getSecond is the total number
7a8c36be23e,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-11-21,17:29:32,1937,   *         of regions of the table
c9b028862a6,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-08-28,03:40:47,1938,   * @throws IOException
7a8c36be23e,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-11-21,17:29:32,1939,   */
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,1940,  @Override
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,1941,  public GetSchemaAlterStatusResponse getSchemaAlterStatus(
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,1942,"      RpcController controller, GetSchemaAlterStatusRequest req) throws ServiceException {"
72dfa4207d3,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Nicolas Spiegelberg,2012-04-04,21:53:12,1943,"    // TODO: currently, we query using the table name on the client side. this"
72dfa4207d3,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Nicolas Spiegelberg,2012-04-04,21:53:12,1944,    // may overlap with other table operations or the table operation may
72dfa4207d3,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Nicolas Spiegelberg,2012-04-04,21:53:12,1945,    // have completed before querying this API. We need to refactor to a
72dfa4207d3,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Nicolas Spiegelberg,2012-04-04,21:53:12,1946,    // transaction system in the future to avoid these ambiguities.
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,1947,    TableName tableName = ProtobufUtil.toTableName(req.getTableName());
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,1948,
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,1949,    try {
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,1950,"      Pair<Integer,Integer> pair = this.assignmentManager.getReopenStatus(tableName);"
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,1951,      GetSchemaAlterStatusResponse.Builder ret = GetSchemaAlterStatusResponse.newBuilder();
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,1952,      ret.setYetToUpdateRegions(pair.getFirst());
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,1953,      ret.setTotalRegions(pair.getSecond());
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,1954,      return ret.build();
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,1955,    } catch (IOException ioe) {
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,1956,      throw new ServiceException(ioe);
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,1957,    }
7a8c36be23e,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-11-21,17:29:32,1958,  }
7a8c36be23e,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-11-21,17:29:32,1959,
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,1960,  @Override
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,1961,"  public void addColumn(final TableName tableName, final HColumnDescriptor column)"
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,1962,      throws IOException {
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,1963,    checkInitialized();
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,1964,    if (cpHost != null) {
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,1965,"      if (cpHost.preAddColumn(tableName, column)) {"
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,1966,        return;
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,1967,      }
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,1968,    }
9bb04c741a0,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2013-02-22,00:15:52,1969,    //TODO: we should process this (and some others) in an executor
3babc19ae12,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-22,15:07:37,1970,"    new TableAddFamilyHandler(tableName, column, this, this).prepare().process();"
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,1971,    if (cpHost != null) {
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,1972,"      cpHost.postAddColumn(tableName, column);"
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,1973,    }
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,1974,  }
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,1975,
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,1976,  @Override
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,1977,"  public AddColumnResponse addColumn(RpcController controller, AddColumnRequest req)"
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,1978,  throws ServiceException {
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,1979,    try {
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,1980,"      addColumn(ProtobufUtil.toTableName(req.getTableName()),"
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,1981,        HColumnDescriptor.convert(req.getColumnFamilies()));
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,1982,    } catch (IOException ioe) {
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,1983,      throw new ServiceException(ioe);
1229397a95c,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Gary Helmling,2010-12-21,20:39:26,1984,    }
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,1985,    return AddColumnResponse.newBuilder().build();
f35462842b9,src/java/org/apache/hadoop/hbase/HMaster.java,Jim Kellerman,2007-05-29,17:17:44,1986,  }
931d452cb2c,src/java/org/apache/hadoop/hbase/HMaster.java,Jim Kellerman,2007-08-10,22:11:05,1987,
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,1988,  @Override
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,1989,"  public void modifyColumn(TableName tableName, HColumnDescriptor descriptor)"
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,1990,      throws IOException {
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,1991,    checkInitialized();
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,1992,    checkCompression(descriptor);
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,1993,    if (cpHost != null) {
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,1994,"      if (cpHost.preModifyColumn(tableName, descriptor)) {"
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,1995,        return;
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,1996,      }
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,1997,    }
3babc19ae12,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-22,15:07:37,1998,"    LOG.info(getClientIdAuditPrefix() + "" modify "" + descriptor);"
9bb04c741a0,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2013-02-22,00:15:52,1999,"    new TableModifyFamilyHandler(tableName, descriptor, this, this)"
9bb04c741a0,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2013-02-22,00:15:52,2000,      .prepare().process();
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,2001,    if (cpHost != null) {
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,2002,"      cpHost.postModifyColumn(tableName, descriptor);"
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,2003,    }
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,2004,  }
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,2005,
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,2006,  @Override
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,2007,"  public ModifyColumnResponse modifyColumn(RpcController controller, ModifyColumnRequest req)"
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,2008,  throws ServiceException {
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,2009,    try {
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,2010,"      modifyColumn(ProtobufUtil.toTableName(req.getTableName()),"
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,2011,        HColumnDescriptor.convert(req.getColumnFamilies()));
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,2012,    } catch (IOException ioe) {
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,2013,      throw new ServiceException(ioe);
1229397a95c,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Gary Helmling,2010-12-21,20:39:26,2014,    }
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,2015,    return ModifyColumnResponse.newBuilder().build();
29e68d505cd,src/java/org/apache/hadoop/hbase/HMaster.java,Michael Stack,2007-12-11,17:07:12,2016,  }
29e68d505cd,src/java/org/apache/hadoop/hbase/HMaster.java,Michael Stack,2007-12-11,17:07:12,2017,
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,2018,  @Override
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,2019,"  public void deleteColumn(final TableName tableName, final byte[] columnName)"
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,2020,      throws IOException {
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,2021,    checkInitialized();
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,2022,    if (cpHost != null) {
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,2023,"      if (cpHost.preDeleteColumn(tableName, columnName)) {"
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,2024,        return;
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,2025,      }
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,2026,    }
3babc19ae12,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-22,15:07:37,2027,"    LOG.info(getClientIdAuditPrefix() + "" delete "" + Bytes.toString(columnName));"
9bb04c741a0,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2013-02-22,00:15:52,2028,"    new TableDeleteFamilyHandler(tableName, columnName, this, this).prepare().process();"
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,2029,    if (cpHost != null) {
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,2030,"      cpHost.postDeleteColumn(tableName, columnName);"
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,2031,    }
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,2032,  }
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,2033,
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,2034,  @Override
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,2035,"  public DeleteColumnResponse deleteColumn(RpcController controller, DeleteColumnRequest req)"
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,2036,  throws ServiceException {
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,2037,    try {
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,2038,"      deleteColumn(ProtobufUtil.toTableName(req.getTableName()),"
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,2039,          req.getColumnName().toByteArray());
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,2040,    } catch (IOException ioe) {
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,2041,      throw new ServiceException(ioe);
1229397a95c,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Gary Helmling,2010-12-21,20:39:26,2042,    }
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,2043,    return DeleteColumnResponse.newBuilder().build();
f35462842b9,src/java/org/apache/hadoop/hbase/HMaster.java,Jim Kellerman,2007-05-29,17:17:44,2044,  }
931d452cb2c,src/java/org/apache/hadoop/hbase/HMaster.java,Jim Kellerman,2007-08-10,22:11:05,2045,
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,2046,  @Override
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,2047,  public void enableTable(final TableName tableName) throws IOException {
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,2048,    checkInitialized();
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,2049,    if (cpHost != null) {
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,2050,      cpHost.preEnableTable(tableName);
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,2051,    }
3babc19ae12,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-22,15:07:37,2052,"    LOG.info(getClientIdAuditPrefix() + "" enable "" + tableName);"
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,2053,"    this.executorService.submit(new EnableTableHandler(this, tableName,"
9bb04c741a0,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2013-02-22,00:15:52,2054,"      catalogTracker, assignmentManager, tableLockManager, false).prepare());"
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,2055,    if (cpHost != null) {
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,2056,      cpHost.postEnableTable(tableName);
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,2057,   }
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,2058,  }
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,2059,
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,2060,  @Override
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,2061,"  public EnableTableResponse enableTable(RpcController controller, EnableTableRequest request)"
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,2062,  throws ServiceException {
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,2063,    try {
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,2064,      enableTable(ProtobufUtil.toTableName(request.getTableName()));
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,2065,    } catch (IOException ioe) {
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,2066,      throw new ServiceException(ioe);
1229397a95c,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Gary Helmling,2010-12-21,20:39:26,2067,    }
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,2068,    return EnableTableResponse.newBuilder().build();
f35462842b9,src/java/org/apache/hadoop/hbase/HMaster.java,Jim Kellerman,2007-05-29,17:17:44,2069,  }
14dd64dacef,src/java/org/apache/hadoop/hbase/HMaster.java,Michael Stack,2007-07-14,20:08:01,2070,
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,2071,  @Override
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,2072,  public void disableTable(final TableName tableName) throws IOException {
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,2073,    checkInitialized();
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,2074,    if (cpHost != null) {
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,2075,      cpHost.preDisableTable(tableName);
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,2076,    }
3babc19ae12,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-22,15:07:37,2077,"    LOG.info(getClientIdAuditPrefix() + "" disable "" + tableName);"
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,2078,"    this.executorService.submit(new DisableTableHandler(this, tableName,"
9bb04c741a0,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2013-02-22,00:15:52,2079,"      catalogTracker, assignmentManager, tableLockManager, false).prepare());"
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,2080,    if (cpHost != null) {
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,2081,      cpHost.postDisableTable(tableName);
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,2082,    }
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,2083,  }
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,2084,
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,2085,  @Override
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,2086,"  public DisableTableResponse disableTable(RpcController controller, DisableTableRequest request)"
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,2087,  throws ServiceException {
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,2088,    try {
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,2089,      disableTable(ProtobufUtil.toTableName(request.getTableName()));
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,2090,    } catch (IOException ioe) {
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,2091,      throw new ServiceException(ioe);
1229397a95c,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Gary Helmling,2010-12-21,20:39:26,2092,    }
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,2093,    return DisableTableResponse.newBuilder().build();
ebbdb536c7c,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Todd Lipcon,2010-06-21,20:36:39,2094,  }
0eb54f38b78,src/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2008-10-21,20:23:23,2095,
ebbdb536c7c,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Todd Lipcon,2010-06-21,20:36:39,2096,  /**
ebbdb536c7c,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Todd Lipcon,2010-06-21,20:36:39,2097,   * Return the region and current deployment for the region containing
ebbdb536c7c,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Todd Lipcon,2010-06-21,20:36:39,2098,"   * the given row. If the region cannot be found, returns null. If it"
ebbdb536c7c,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Todd Lipcon,2010-06-21,20:36:39,2099,"   * is found, but not currently deployed, the second element of the pair"
ebbdb536c7c,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Todd Lipcon,2010-06-21,20:36:39,2100,   * may be null.
ebbdb536c7c,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Todd Lipcon,2010-06-21,20:36:39,2101,   */
529223130ab,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,23:12:42,2102,"  Pair<HRegionInfo, ServerName> getTableRegionForRow("
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,2103,"      final TableName tableName, final byte [] rowKey)"
9b43b98449a,src/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2009-10-27,23:32:15,2104,  throws IOException {
529223130ab,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,23:12:42,2105,"    final AtomicReference<Pair<HRegionInfo, ServerName>> result ="
529223130ab,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,23:12:42,2106,"      new AtomicReference<Pair<HRegionInfo, ServerName>>(null);"
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,2107,
ebbdb536c7c,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Todd Lipcon,2010-06-21,20:36:39,2108,    MetaScannerVisitor visitor =
6db2eedc9b6,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-24,00:18:23,2109,      new MetaScannerVisitorBase() {
ebbdb536c7c,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Todd Lipcon,2010-06-21,20:36:39,2110,        @Override
ebbdb536c7c,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Todd Lipcon,2010-06-21,20:36:39,2111,        public boolean processRow(Result data) throws IOException {
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,2112,          if (data == null || data.size() <= 0) {
ebbdb536c7c,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Todd Lipcon,2010-06-21,20:36:39,2113,            return true;
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,2114,          }
c9b028862a6,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-08-28,03:40:47,2115,"          Pair<HRegionInfo, ServerName> pair = HRegionInfo.getHRegionInfoAndServerName(data);"
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,2116,          if (pair == null) {
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,2117,            return false;
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,2118,          }
ed509f750c9,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-13,23:15:00,2119,          if (!pair.getFirst().getTable().equals(tableName)) {
ebbdb536c7c,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Todd Lipcon,2010-06-21,20:36:39,2120,            return false;
0eb54f38b78,src/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2008-10-21,20:23:23,2121,          }
ebbdb536c7c,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Todd Lipcon,2010-06-21,20:36:39,2122,          result.set(pair);
ebbdb536c7c,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Todd Lipcon,2010-06-21,20:36:39,2123,          return true;
0eb54f38b78,src/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2008-10-21,20:23:23,2124,        }
ebbdb536c7c,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Todd Lipcon,2010-06-21,20:36:39,2125,    };
0eb54f38b78,src/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2008-10-21,20:23:23,2126,
ebbdb536c7c,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Todd Lipcon,2010-06-21,20:36:39,2127,"    MetaScanner.metaScan(conf, visitor, tableName, rowKey, 1);"
ebbdb536c7c,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Todd Lipcon,2010-06-21,20:36:39,2128,    return result.get();
ebbdb536c7c,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Todd Lipcon,2010-06-21,20:36:39,2129,  }
e06e00450ef,core/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-05-07,19:26:45,2130,
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,2131,  @Override
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,2132,"  public void modifyTable(final TableName tableName, final HTableDescriptor descriptor)"
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,2133,      throws IOException {
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,2134,    checkInitialized();
ee48ff48a19,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2014-02-26,22:24:20,2135,    sanityCheckTableDescriptor(descriptor);
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,2136,    if (cpHost != null) {
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,2137,"      cpHost.preModifyTable(tableName, descriptor);"
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,2138,    }
3babc19ae12,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-22,15:07:37,2139,"    LOG.info(getClientIdAuditPrefix() + "" modify "" + tableName);"
9bb04c741a0,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2013-02-22,00:15:52,2140,"    new ModifyTableHandler(tableName, descriptor, this, this).prepare().process();"
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,2141,    if (cpHost != null) {
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,2142,"      cpHost.postModifyTable(tableName, descriptor);"
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,2143,    }
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,2144,  }
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,2145,
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,2146,  @Override
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,2147,"  public ModifyTableResponse modifyTable(RpcController controller, ModifyTableRequest req)"
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,2148,  throws ServiceException {
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,2149,    try {
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,2150,"      modifyTable(ProtobufUtil.toTableName(req.getTableName()),"
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,2151,        HTableDescriptor.convert(req.getTableSchema()));
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,2152,    } catch (IOException ioe) {
115a8fd4395,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2012-12-18,19:01:23,2153,      throw new ServiceException(ioe);
1229397a95c,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Gary Helmling,2010-12-21,20:39:26,2154,    }
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,2155,    return ModifyTableResponse.newBuilder().build();
d47bdad4fd5,src/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2008-12-23,23:10:25,2156,  }
d47bdad4fd5,src/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2008-12-23,23:10:25,2157,
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,2158,  @Override
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,2159,  public void checkTableModifiable(final TableName tableName)
07d670920e2,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,nkeywal,2012-12-16,09:58:29,2160,"      throws IOException, TableNotFoundException, TableNotDisabledException {"
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,2161,    if (isCatalogTable(tableName)) {
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,2162,"      throw new IOException(""Can\'t modify catalog tables"");"
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,2163,    }
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,2164,"    if (!MetaReader.tableExists(getCatalogTracker(), tableName)) {"
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,2165,      throw new TableNotFoundException(tableName);
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,2166,    }
de4f4aa9e4b,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-04-05,18:57:09,2167,    if (!getAssignmentManager().getZKTable().
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,2168,        isDisabledTable(tableName)) {
de4f4aa9e4b,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-04-05,18:57:09,2169,      throw new TableNotDisabledException(tableName);
de4f4aa9e4b,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-04-05,18:57:09,2170,    }
6279d759c05,src/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2008-07-17,07:17:26,2171,  }
6279d759c05,src/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2008-07-17,07:17:26,2172,
8ad8c97c1d6,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-06,06:26:22,2173,  @Override
c310653a19c,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-09-06,17:22:01,2174,"  public GetClusterStatusResponse getClusterStatus(RpcController controller,"
c310653a19c,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-09-06,17:22:01,2175,      GetClusterStatusRequest req)
8ad8c97c1d6,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-06,06:26:22,2176,  throws ServiceException {
8ad8c97c1d6,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-06,06:26:22,2177,    GetClusterStatusResponse.Builder response = GetClusterStatusResponse.newBuilder();
4742456403e,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,nkeywal,2014-02-07,20:27:42,2178,    try {
4742456403e,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,nkeywal,2014-02-07,20:27:42,2179,      response.setClusterStatus(getClusterStatus().convert());
4742456403e,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,nkeywal,2014-02-07,20:27:42,2180,    } catch (InterruptedIOException e) {
4742456403e,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,nkeywal,2014-02-07,20:27:42,2181,      throw new ServiceException(e);
4742456403e,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,nkeywal,2014-02-07,20:27:42,2182,    }
8ad8c97c1d6,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-06,06:26:22,2183,    return response.build();
8ad8c97c1d6,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-06,06:26:22,2184,  }
c310653a19c,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-09-06,17:22:01,2185,
5e1b305116b,src/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2009-05-28,05:48:52,2186,  /**
5e1b305116b,src/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2009-05-28,05:48:52,2187,   * @return cluster status
5e1b305116b,src/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2009-05-28,05:48:52,2188,   */
4742456403e,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,nkeywal,2014-02-07,20:27:42,2189,  public ClusterStatus getClusterStatus() throws InterruptedIOException {
145d25dfc2e,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-02-19,04:10:46,2190,    // Build Set of backup masters from ZK nodes
145d25dfc2e,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-02-19,04:10:46,2191,    List<String> backupMasterStrings;
145d25dfc2e,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-02-19,04:10:46,2192,    try {
145d25dfc2e,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-02-19,04:10:46,2193,"      backupMasterStrings = ZKUtil.listChildrenNoWatch(this.zooKeeper,"
062660e3f48,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-02,16:26:36,2194,        this.zooKeeper.backupMasterAddressesZNode);
145d25dfc2e,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-02-19,04:10:46,2195,    } catch (KeeperException e) {
145d25dfc2e,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-02-19,04:10:46,2196,"      LOG.warn(this.zooKeeper.prefix(""Unable to list backup servers""), e);"
145d25dfc2e,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-02-19,04:10:46,2197,      backupMasterStrings = new ArrayList<String>(0);
145d25dfc2e,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-02-19,04:10:46,2198,    }
145d25dfc2e,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-02-19,04:10:46,2199,    List<ServerName> backupMasters = new ArrayList<ServerName>(
145d25dfc2e,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-02-19,04:10:46,2200,                                          backupMasterStrings.size());
145d25dfc2e,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-02-19,04:10:46,2201,    for (String s: backupMasterStrings) {
3fd6997380a,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2012-03-26,23:06:02,2202,      try {
4742456403e,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,nkeywal,2014-02-07,20:27:42,2203,        byte [] bytes;
4742456403e,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,nkeywal,2014-02-07,20:27:42,2204,        try {
4742456403e,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,nkeywal,2014-02-07,20:27:42,2205,"          bytes = ZKUtil.getData(this.zooKeeper, ZKUtil.joinZNode("
4742456403e,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,nkeywal,2014-02-07,20:27:42,2206,"              this.zooKeeper.backupMasterAddressesZNode, s));"
4742456403e,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,nkeywal,2014-02-07,20:27:42,2207,        } catch (InterruptedException e) {
4742456403e,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,nkeywal,2014-02-07,20:27:42,2208,          throw new InterruptedIOException();
4742456403e,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,nkeywal,2014-02-07,20:27:42,2209,        }
3fd6997380a,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2012-03-26,23:06:02,2210,        if (bytes != null) {
062660e3f48,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-02,16:26:36,2211,          ServerName sn;
062660e3f48,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-02,16:26:36,2212,          try {
062660e3f48,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-02,16:26:36,2213,            sn = ServerName.parseFrom(bytes);
062660e3f48,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-02,16:26:36,2214,          } catch (DeserializationException e) {
062660e3f48,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-02,16:26:36,2215,"            LOG.warn(""Failed parse, skipping registering backup server"", e);"
062660e3f48,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-02,16:26:36,2216,            continue;
062660e3f48,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-02,16:26:36,2217,          }
062660e3f48,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-02,16:26:36,2218,          backupMasters.add(sn);
3fd6997380a,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2012-03-26,23:06:02,2219,        }
3fd6997380a,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2012-03-26,23:06:02,2220,      } catch (KeeperException e) {
3fd6997380a,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2012-03-26,23:06:02,2221,"        LOG.warn(this.zooKeeper.prefix(""Unable to get information about "" +"
3fd6997380a,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2012-03-26,23:06:02,2222,"                 ""backup servers""), e);"
3fd6997380a,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2012-03-26,23:06:02,2223,      }
145d25dfc2e,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-02-19,04:10:46,2224,    }
3fd6997380a,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2012-03-26,23:06:02,2225,"    Collections.sort(backupMasters, new Comparator<ServerName>() {"
040b53e09aa,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-17,05:43:06,2226,      @Override
3fd6997380a,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2012-03-26,23:06:02,2227,"      public int compare(ServerName s1, ServerName s2) {"
3fd6997380a,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2012-03-26,23:06:02,2228,        return s1.getServerName().compareTo(s2.getServerName());
3fd6997380a,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2012-03-26,23:06:02,2229,      }});
145d25dfc2e,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-02-19,04:10:46,2230,
529223130ab,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,23:12:42,2231,"    return new ClusterStatus(VersionInfo.getVersion(),"
373270dd773,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-18,20:20:33,2232,"      this.fileSystemManager.getClusterId().toString(),"
529223130ab,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,23:12:42,2233,"      this.serverManager.getOnlineServers(),"
8bd7bffb36c,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,nkeywal,2013-02-12,10:20:34,2234,"      this.serverManager.getDeadServers().copyServerNames(),"
145d25dfc2e,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-02-19,04:10:46,2235,"      this.serverName,"
145d25dfc2e,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-02-19,04:10:46,2236,"      backupMasters,"
57afee6a6bb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2012-07-27,16:34:32,2237,"      this.assignmentManager.getRegionStates().getRegionsInTransition(),"
c9d3cb1c3b6,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,gchanan,2012-09-13,23:00:46,2238,"      this.getCoprocessors(), this.loadBalancerTracker.isBalancerOn());"
5e1b305116b,src/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2009-05-28,05:48:52,2239,  }
5e1b305116b,src/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2009-05-28,05:48:52,2240,
ef3073c22d1,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Gary Helmling,2011-04-06,04:53:47,2241,  public String getClusterId() {
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,eclark,2012-11-06,23:22:01,2242,    if (fileSystemManager == null) {
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,eclark,2012-11-06,23:22:01,2243,"      return """";"
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,eclark,2012-11-06,23:22:01,2244,    }
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,eclark,2012-11-06,23:22:01,2245,    ClusterId id = fileSystemManager.getClusterId();
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,eclark,2012-11-06,23:22:01,2246,    if (id == null) {
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,eclark,2012-11-06,23:22:01,2247,"      return """";"
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,eclark,2012-11-06,23:22:01,2248,    }
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,eclark,2012-11-06,23:22:01,2249,    return id.toString();
ef3073c22d1,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Gary Helmling,2011-04-06,04:53:47,2250,  }
ef3073c22d1,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Gary Helmling,2011-04-06,04:53:47,2251,
581421a6b2e,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-09-25,03:46:53,2252,  /**
581421a6b2e,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-09-25,03:46:53,2253,   * The set of loaded coprocessors is stored in a static set. Since it\'s
581421a6b2e,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-09-25,03:46:53,2254,"   * statically allocated, it does not require that HMaster\'s cpHost be"
581421a6b2e,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-09-25,03:46:53,2255,   * initialized prior to accessing it.
581421a6b2e,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-09-25,03:46:53,2256,   * @return a String representation of the set of names of the loaded
581421a6b2e,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-09-25,03:46:53,2257,   * coprocessors.
581421a6b2e,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-09-25,03:46:53,2258,   */
581421a6b2e,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-09-25,03:46:53,2259,  public static String getLoadedCoprocessors() {
581421a6b2e,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-09-25,03:46:53,2260,    return CoprocessorHost.getLoadedCoprocessors().toString();
581421a6b2e,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-09-25,03:46:53,2261,  }
581421a6b2e,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-09-25,03:46:53,2262,
d9c8e9954a2,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-12-18,00:04:23,2263,  /**
d9c8e9954a2,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-12-18,00:04:23,2264,   * @return timestamp in millis when HMaster was started.
d9c8e9954a2,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-12-18,00:04:23,2265,   */
d9c8e9954a2,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-12-18,00:04:23,2266,  public long getMasterStartTime() {
d9c8e9954a2,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-12-18,00:04:23,2267,    return masterStartTime;
d9c8e9954a2,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-12-18,00:04:23,2268,  }
d9c8e9954a2,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-12-18,00:04:23,2269,
d9c8e9954a2,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-12-18,00:04:23,2270,  /**
d9c8e9954a2,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-12-18,00:04:23,2271,   * @return timestamp in millis when HMaster became the active master.
d9c8e9954a2,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-12-18,00:04:23,2272,   */
d9c8e9954a2,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-12-18,00:04:23,2273,  public long getMasterActiveTime() {
d9c8e9954a2,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-12-18,00:04:23,2274,    return masterActiveTime;
d9c8e9954a2,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-12-18,00:04:23,2275,  }
d7050d3541d,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-02-24,21:06:12,2276,
7ea071db1ff,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-12-17,04:35:59,2277,  public int getRegionServerInfoPort(final ServerName sn) {
7ea071db1ff,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-12-17,04:35:59,2278,    RegionServerInfo info = this.regionServerTracker.getRegionServerInfo(sn);
7ea071db1ff,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-12-17,04:35:59,2279,    if (info == null || info.getInfoPort() == 0) {
7ea071db1ff,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-12-17,04:35:59,2280,"      return conf.getInt(HConstants.REGIONSERVER_INFO_PORT,"
7ea071db1ff,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-12-17,04:35:59,2281,        HConstants.DEFAULT_REGIONSERVER_INFOPORT);
7ea071db1ff,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-12-17,04:35:59,2282,    }
7ea071db1ff,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-12-17,04:35:59,2283,    return info.getInfoPort();
7ea071db1ff,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-12-17,04:35:59,2284,  }
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2014-01-22,01:42:49,2285,
ed76ba8de34,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2011-10-24,23:18:04,2286,  /**
ed76ba8de34,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2011-10-24,23:18:04,2287,   * @return array of coprocessor SimpleNames.
ed76ba8de34,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2011-10-24,23:18:04,2288,   */
ed76ba8de34,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2011-10-24,23:18:04,2289,  public String[] getCoprocessors() {
ed76ba8de34,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2011-10-24,23:18:04,2290,    Set<String> masterCoprocessors =
ed76ba8de34,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2011-10-24,23:18:04,2291,        getCoprocessorHost().getCoprocessors();
d2fb5a546fd,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,nkeywal,2013-02-12,09:38:57,2292,    return masterCoprocessors.toArray(new String[masterCoprocessors.size()]);
ed76ba8de34,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2011-10-24,23:18:04,2293,  }
ed76ba8de34,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2011-10-24,23:18:04,2294,
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,2295,  @Override
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,2296,"  public void abort(final String msg, final Throwable t) {"
581421a6b2e,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-09-25,03:46:53,2297,    if (cpHost != null) {
581421a6b2e,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-09-25,03:46:53,2298,      // HBASE-4014: dump a list of loaded coprocessors.
581421a6b2e,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-09-25,03:46:53,2299,"      LOG.fatal(""Master server abort: loaded coprocessors are: "" +"
581421a6b2e,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-09-25,03:46:53,2300,          getLoadedCoprocessors());
581421a6b2e,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-09-25,03:46:53,2301,    }
581421a6b2e,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-09-25,03:46:53,2302,
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,2303,"    if (abortNow(msg, t)) {"
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,2304,"      if (t != null) LOG.fatal(msg, t);"
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,2305,      else LOG.fatal(msg);
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,2306,      this.abort = true;
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,2307,"      stop(""Aborting"");"
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,2308,    }
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,2309,  }
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,2310,
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,2311,  /**
a2471aa2559,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-12-30,06:39:07,2312,   * We do the following in a different thread.  If it is not completed
a2471aa2559,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-12-30,06:39:07,2313,"   * in time, we will time it out and assume it is not easy to recover."
a2471aa2559,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-12-30,06:39:07,2314,   *
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,2315,   * 1. Create a new ZK session. (since our current one is expired)
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,2316,   * 2. Try to become a primary master again
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,2317,   * 3. Initialize all ZK based system trackers.
3a23adf5aba,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-03-08,22:37:19,2318,"   * 4. Assign meta. (they are already assigned, but we need to update our"
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,2319,   * internal memory state to reflect it)
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,2320,   * 5. Process any RIT if any during the process of our recovery.
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,2321,   *
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,2322,   * @return True if we could successfully recover from ZK session expiry.
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,2323,   * @throws InterruptedException
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,2324,   * @throws IOException
a2471aa2559,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-12-30,06:39:07,2325,   * @throws KeeperException
a2471aa2559,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-12-30,06:39:07,2326,   * @throws ExecutionException
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,2327,   */
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,2328,"  private boolean tryRecoveringExpiredZKSession() throws InterruptedException,"
a2471aa2559,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-12-30,06:39:07,2329,"      IOException, KeeperException, ExecutionException {"
a2471aa2559,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-12-30,06:39:07,2330,
267e55da403,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,sershe,2013-05-14,20:38:08,2331,    this.zooKeeper.unregisterAllListeners();
6b46196c31d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,sershe,2013-05-18,01:40:48,2332,    // add back listeners which were registered before master initialization
6b46196c31d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,sershe,2013-05-18,01:40:48,2333,    // because they won\'t be added back in below Master re-initialization code
6b46196c31d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,sershe,2013-05-18,01:40:48,2334,    if (this.registeredZKListenersBeforeRecovery != null) {
6b46196c31d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,sershe,2013-05-18,01:40:48,2335,      for (ZooKeeperListener curListener : this.registeredZKListenersBeforeRecovery) {
6b46196c31d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,sershe,2013-05-18,01:40:48,2336,        this.zooKeeper.registerListener(curListener);
6b46196c31d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,sershe,2013-05-18,01:40:48,2337,      }
6b46196c31d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,sershe,2013-05-18,01:40:48,2338,    }
6b46196c31d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,sershe,2013-05-18,01:40:48,2339,
1d24d71821f,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-03-16,21:30:47,2340,    this.zooKeeper.reconnectAfterExpiration();
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,2341,
a2471aa2559,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-12-30,06:39:07,2342,    Callable<Boolean> callable = new Callable<Boolean> () {
040b53e09aa,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-17,05:43:06,2343,      @Override
a2471aa2559,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-12-30,06:39:07,2344,"      public Boolean call() throws InterruptedException,"
a2471aa2559,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-12-30,06:39:07,2345,"          IOException, KeeperException {"
a2471aa2559,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-12-30,06:39:07,2346,        MonitoredTask status =
a2471aa2559,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-12-30,06:39:07,2347,"          TaskMonitor.get().createStatus(""Recovering expired ZK session"");"
a2471aa2559,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-12-30,06:39:07,2348,        try {
a2471aa2559,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-12-30,06:39:07,2349,          if (!becomeActiveMaster(status)) {
a2471aa2559,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-12-30,06:39:07,2350,            return Boolean.FALSE;
a2471aa2559,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-12-30,06:39:07,2351,          }
fc4d7d7a591,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,ramkrishna,2012-06-05,16:39:04,2352,          serverShutdownHandlerEnabled = false;
fc4d7d7a591,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,ramkrishna,2012-06-05,16:39:04,2353,          initialized = false;
fc4d7d7a591,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,ramkrishna,2012-06-05,16:39:04,2354,"          finishInitialization(status, true);"
4473041015c,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-16,20:28:19,2355,          return !stopped;
a2471aa2559,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-12-30,06:39:07,2356,        } finally {
a2471aa2559,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-12-30,06:39:07,2357,          status.cleanup();
a2471aa2559,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-12-30,06:39:07,2358,        }
a2471aa2559,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-12-30,06:39:07,2359,      }
a2471aa2559,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-12-30,06:39:07,2360,    };
a2471aa2559,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-12-30,06:39:07,2361,
a2471aa2559,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-12-30,06:39:07,2362,    long timeout =
a2471aa2559,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-12-30,06:39:07,2363,"      conf.getLong(""hbase.master.zksession.recover.timeout"", 300000);"
a2471aa2559,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-12-30,06:39:07,2364,    java.util.concurrent.ExecutorService executor =
a2471aa2559,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-12-30,06:39:07,2365,      Executors.newSingleThreadExecutor();
a2471aa2559,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-12-30,06:39:07,2366,    Future<Boolean> result = executor.submit(callable);
a2471aa2559,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-12-30,06:39:07,2367,    executor.shutdown();
a2471aa2559,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-12-30,06:39:07,2368,"    if (executor.awaitTermination(timeout, TimeUnit.MILLISECONDS)"
a2471aa2559,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-12-30,06:39:07,2369,        && result.isDone()) {
a2471aa2559,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-12-30,06:39:07,2370,      Boolean recovered = result.get();
a2471aa2559,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-12-30,06:39:07,2371,      if (recovered != null) {
a2471aa2559,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-12-30,06:39:07,2372,        return recovered.booleanValue();
ca952ac00bf,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Todd Lipcon,2011-05-03,06:11:06,2373,      }
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,2374,    }
a2471aa2559,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-12-30,06:39:07,2375,    executor.shutdownNow();
a2471aa2559,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-12-30,06:39:07,2376,    return false;
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,2377,  }
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,2378,
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,2379,  /**
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,2380,   * Check to see if the current trigger for abort is due to ZooKeeper session
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,2381,"   * expiry, and If yes, whether we can recover from ZK session expiry."
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,2382,   *
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,2383,   * @param msg Original abort message
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,2384,   * @param t   The cause for current abort request
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,2385,"   * @return true if we should proceed with abort operation, false other wise."
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,2386,   */
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,2387,"  private boolean abortNow(final String msg, final Throwable t) {"
2f1ba4a7fab,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jean-Daniel Cryans,2013-07-10,17:30:41,2388,    if (!this.isActiveMaster || this.stopped) {
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,2389,      return true;
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,2390,    }
e1506729013,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-11,17:43:43,2391,
e1506729013,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-11,17:43:43,2392,"    boolean failFast = conf.getBoolean(""fail.fast.expired.active.master"", false);"
e1506729013,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-11,17:43:43,2393,    if (t != null && t instanceof KeeperException.SessionExpiredException
e1506729013,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-11,17:43:43,2394,        && !failFast) {
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,2395,      try {
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,2396,"        LOG.info(""Primary Master trying to recover from ZooKeeper session "" +"
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,2397,"            ""expiry."");"
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,2398,        return !tryRecoveringExpiredZKSession();
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,2399,      } catch (Throwable newT) {
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,2400,"        LOG.error(""Primary master encountered unexpected exception while "" +"
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,2401,"            ""trying to recover from ZooKeeper session"" +"
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,2402,"            "" expiry. Proceeding with server abort."", newT);"
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,2403,      }
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,2404,    }
1f01e305408,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,00:01:31,2405,    return true;
9057e559a18,src/java/org/apache/hadoop/hbase/master/HMaster.java,Jim Kellerman,2008-03-13,00:33:13,2406,  }
9b43b98449a,src/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2009-10-27,23:32:15,2407,
9cf697f4df9,src/java/org/apache/hadoop/hbase/master/HMaster.java,Jean-Daniel Cryans,2009-07-07,16:33:41,2408,  @Override
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,2409,  public ZooKeeperWatcher getZooKeeper() {
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,2410,    return zooKeeper;
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,2411,  }
c7df216c115,src/java/org/apache/hadoop/hbase/master/HMaster.java,Jean-Daniel Cryans,2009-10-29,01:24:03,2412,
71b0e2c0a8e,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:15:04,2413,  @Override
1229397a95c,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Gary Helmling,2010-12-21,20:39:26,2414,  public MasterCoprocessorHost getCoprocessorHost() {
1229397a95c,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Gary Helmling,2010-12-21,20:39:26,2415,    return cpHost;
1229397a95c,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Gary Helmling,2010-12-21,20:39:26,2416,  }
1229397a95c,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Gary Helmling,2010-12-21,20:39:26,2417,
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,2418,  @Override
529223130ab,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,23:12:42,2419,  public ServerName getServerName() {
529223130ab,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,23:12:42,2420,    return this.serverName;
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,2421,  }
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,2422,
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,2423,  @Override
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,2424,  public CatalogTracker getCatalogTracker() {
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,2425,    return catalogTracker;
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,2426,  }
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,2427,
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,2428,  @Override
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,2429,  public AssignmentManager getAssignmentManager() {
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,2430,    return this.assignmentManager;
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,2431,  }
57afee6a6bb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2012-07-27,16:34:32,2432,
9bb04c741a0,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2013-02-22,00:15:52,2433,  @Override
9bb04c741a0,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2013-02-22,00:15:52,2434,  public TableLockManager getTableLockManager() {
9bb04c741a0,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2013-02-22,00:15:52,2435,    return this.tableLockManager;
9bb04c741a0,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2013-02-22,00:15:52,2436,  }
9bb04c741a0,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2013-02-22,00:15:52,2437,
48560e089c3,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Todd Lipcon,2011-08-30,19:27:24,2438,  public MemoryBoundedLogMessageBuffer getRegionServerFatalLogBuffer() {
48560e089c3,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Todd Lipcon,2011-08-30,19:27:24,2439,    return rsFatals;
48560e089c3,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Todd Lipcon,2011-08-30,19:27:24,2440,  }
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,2441,
5c585457877,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2013-05-07,16:10:07,2442,  public void shutdown() {
9bb04c741a0,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Enis Soztutar,2013-02-22,00:15:52,2443,    if (spanReceiverHost != null) {
65d9c0d6d2c,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:40:18,2444,      spanReceiverHost.closeReceivers();
65d9c0d6d2c,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:40:18,2445,    }
1229397a95c,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Gary Helmling,2010-12-21,20:39:26,2446,    if (cpHost != null) {
5c585457877,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2013-05-07,16:10:07,2447,      try {
5c585457877,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2013-05-07,16:10:07,2448,        cpHost.preShutdown();
5c585457877,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2013-05-07,16:10:07,2449,      } catch (IOException ioe) {
5c585457877,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2013-05-07,16:10:07,2450,"        LOG.error(""Error call master coprocessor preShutdown()"", ioe);"
5c585457877,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2013-05-07,16:10:07,2451,      }
1229397a95c,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Gary Helmling,2010-12-21,20:39:26,2452,    }
d7050d3541d,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-02-24,21:06:12,2453,    if (mxBean != null) {
d7050d3541d,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-02-24,21:06:12,2454,      MBeanUtil.unregisterMBean(mxBean);
d7050d3541d,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-02-24,21:06:12,2455,      mxBean = null;
d7050d3541d,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-02-24,21:06:12,2456,    }
1f8021eca9c,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-12-19,17:24:33,2457,    if (this.assignmentManager != null) this.assignmentManager.shutdown();
1f8021eca9c,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-12-19,17:24:33,2458,    if (this.serverManager != null) this.serverManager.shutdownCluster();
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,2459,    try {
1f8021eca9c,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-12-19,17:24:33,2460,      if (this.clusterStatusTracker != null){
1f8021eca9c,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-12-19,17:24:33,2461,        this.clusterStatusTracker.setClusterDown();
1f8021eca9c,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-12-19,17:24:33,2462,      }
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,2463,    } catch (KeeperException e) {
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,2464,"      LOG.error(""ZooKeeper exception trying to set cluster as down in ZK"", e);"
9cf697f4df9,src/java/org/apache/hadoop/hbase/master/HMaster.java,Jean-Daniel Cryans,2009-07-07,16:33:41,2465,    }
9cf697f4df9,src/java/org/apache/hadoop/hbase/master/HMaster.java,Jean-Daniel Cryans,2009-07-07,16:33:41,2466,  }
931d452cb2c,src/java/org/apache/hadoop/hbase/HMaster.java,Jim Kellerman,2007-08-10,22:11:05,2467,
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,2468,  @Override
ca8882e804d,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-24,00:33:48,2469,"  public ShutdownResponse shutdown(RpcController controller, ShutdownRequest request)"
ca8882e804d,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-24,00:33:48,2470,  throws ServiceException {
3babc19ae12,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-22,15:07:37,2471,"    LOG.info(getClientIdAuditPrefix() + "" shutdown"");"
5c585457877,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2013-05-07,16:10:07,2472,    shutdown();
ca8882e804d,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-24,00:33:48,2473,    return ShutdownResponse.newBuilder().build();
ca8882e804d,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-24,00:33:48,2474,  }
ca8882e804d,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-24,00:33:48,2475,
5c585457877,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2013-05-07,16:10:07,2476,  public void stopMaster() {
1229397a95c,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Gary Helmling,2010-12-21,20:39:26,2477,    if (cpHost != null) {
5c585457877,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2013-05-07,16:10:07,2478,      try {
5c585457877,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2013-05-07,16:10:07,2479,        cpHost.preStopMaster();
5c585457877,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2013-05-07,16:10:07,2480,      } catch (IOException ioe) {
5c585457877,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2013-05-07,16:10:07,2481,"        LOG.error(""Error call master coprocessor preStopMaster()"", ioe);"
5c585457877,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2013-05-07,16:10:07,2482,      }
1229397a95c,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Gary Helmling,2010-12-21,20:39:26,2483,    }
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,2484,"    stop(""Stopped by "" + Thread.currentThread().getName());"
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,2485,  }
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,2486,
ca8882e804d,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-24,00:33:48,2487,  @Override
ca8882e804d,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-24,00:33:48,2488,"  public StopMasterResponse stopMaster(RpcController controller, StopMasterRequest request)"
ca8882e804d,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-24,00:33:48,2489,  throws ServiceException {
3babc19ae12,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-22,15:07:37,2490,"    LOG.info(getClientIdAuditPrefix() + "" stop"");"
5c585457877,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2013-05-07,16:10:07,2491,    stopMaster();
ca8882e804d,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-24,00:33:48,2492,    return StopMasterResponse.newBuilder().build();
ca8882e804d,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-24,00:33:48,2493,  }
ca8882e804d,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-24,00:33:48,2494,
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,2495,  @Override
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,2496,  public void stop(final String why) {
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,2497,    LOG.info(why);
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,2498,    this.stopped = true;
23532b3538c,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-11-22,01:04:40,2499,    // We wake up the stopSleeper to stop immediately
23532b3538c,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-11-22,01:04:40,2500,    stopSleeper.skipSleepCycle();
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,2501,"    // If we are a backup master, we need to interrupt wait"
7052e59b388,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-11-05,18:45:24,2502,    if (this.activeMasterManager != null) {
7052e59b388,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-11-05,18:45:24,2503,      synchronized (this.activeMasterManager.clusterHasActiveMaster) {
7052e59b388,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-11-05,18:45:24,2504,        this.activeMasterManager.clusterHasActiveMaster.notifyAll();
7052e59b388,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-11-05,18:45:24,2505,      }
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,2506,    }
df49eca1eb0,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-06,00:29:48,2507,    // If no region server is online then master may stuck waiting on hbase:meta to come on line.
c0046ba4817,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-04-25,22:13:26,2508,    // See HBASE-8422.
c0046ba4817,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-04-25,22:13:26,2509,    if (this.catalogTracker != null && this.serverManager.getOnlineServers().isEmpty()) {
c0046ba4817,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-04-25,22:13:26,2510,      this.catalogTracker.stop();
c0046ba4817,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-04-25,22:13:26,2511,    }
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,2512,  }
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,2513,
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,2514,  @Override
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,2515,  public boolean isStopped() {
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,2516,    return this.stopped;
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,2517,  }
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,2518,
040b53e09aa,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-17,05:43:06,2519,  @Override
f70dd57e1eb,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-09-17,18:26:03,2520,  public boolean isAborted() {
3910bd4b6de,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-08-19,03:37:41,2521,    return this.abort;
3910bd4b6de,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-08-19,03:37:41,2522,  }
c9b028862a6,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-08-28,03:40:47,2523,
324a2cfeb4e,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-03-01,06:59:51,2524,  void checkInitialized() throws PleaseHoldException {
324a2cfeb4e,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-03-01,06:59:51,2525,    if (!this.initialized) {
324a2cfeb4e,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-03-01,06:59:51,2526,"      throw new PleaseHoldException(""Master is initializing"");"
324a2cfeb4e,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-03-01,06:59:51,2527,    }
324a2cfeb4e,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-03-01,06:59:51,2528,  }
c9b028862a6,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-08-28,03:40:47,2529,
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,2530,  /**
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,2531,   * Report whether this master is currently the active master or not.
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,2532,"   * If not active master, we are parked on ZK waiting to become active."
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,2533,   *
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,2534,   * This method is used for testing.
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,2535,   *
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,2536,"   * @return true if active master, false if not."
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,2537,   */
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,2538,  public boolean isActiveMaster() {
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,2539,    return isActiveMaster;
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,2540,  }
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,2541,
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,2542,  /**
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,2543,   * Report whether this master has completed with its initialization and is
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,2544,"   * ready.  If ready, the master is also the active master.  A standby master"
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,2545,   * is never ready.
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,2546,   *
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,2547,   * This method is used for testing.
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,2548,   *
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,2549,"   * @return true if master is ready to go, false if not."
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,2550,   */
040b53e09aa,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-17,05:43:06,2551,  @Override
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,2552,  public boolean isInitialized() {
5441eaa83dc,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-12-05,04:49:43,2553,    return initialized;
b2bff276abe,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-10-06,21:39:11,2554,  }
05423b150bd,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-03-13,15:35:54,2555,
05423b150bd,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-03-13,15:35:54,2556,  /**
05423b150bd,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-03-13,15:35:54,2557,   * ServerShutdownHandlerEnabled is set false before completing
3a23adf5aba,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-03-08,22:37:19,2558,   * assignMeta to prevent processing of ServerShutdownHandler.
3a23adf5aba,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-03-08,22:37:19,2559,   * @return true if assignMeta has completed;
05423b150bd,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-03-13,15:35:54,2560,   */
040b53e09aa,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-17,05:43:06,2561,  @Override
05423b150bd,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-03-13,15:35:54,2562,  public boolean isServerShutdownHandlerEnabled() {
05423b150bd,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-03-13,15:35:54,2563,    return this.serverShutdownHandlerEnabled;
05423b150bd,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-03-13,15:35:54,2564,  }
05423b150bd,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-03-13,15:35:54,2565,
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-15,04:24:02,2566,  /**
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-15,04:24:02,2567,   * Report whether this master has started initialization and is about to do meta region assignment
df49eca1eb0,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-06,00:29:48,2568,   * @return true if master is in initialization & about to assign hbase:meta regions
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-15,04:24:02,2569,   */
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-15,04:24:02,2570,  public boolean isInitializationStartsMetaRegionAssignment() {
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-15,04:24:02,2571,    return this.initializationBeforeMetaAssignment;
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-15,04:24:02,2572,  }
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-15,04:24:02,2573,
db102ed307e,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2011-09-16,17:59:02,2574,  @Override
c18eebd8a61,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-17,05:06:15,2575,"  public AssignRegionResponse assignRegion(RpcController controller, AssignRegionRequest req)"
c18eebd8a61,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-17,05:06:15,2576,  throws ServiceException {
c18eebd8a61,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-17,05:06:15,2577,    try {
c18eebd8a61,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-17,05:06:15,2578,      final byte [] regionName = req.getRegion().getValue().toByteArray();
c18eebd8a61,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-17,05:06:15,2579,      RegionSpecifierType type = req.getRegion().getType();
c18eebd8a61,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-17,05:06:15,2580,      AssignRegionResponse arr = AssignRegionResponse.newBuilder().build();
c18eebd8a61,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-17,05:06:15,2581,
c18eebd8a61,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-17,05:06:15,2582,      checkInitialized();
c18eebd8a61,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-17,05:06:15,2583,      if (type != RegionSpecifierType.REGION_NAME) {
c18eebd8a61,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-17,05:06:15,2584,"        LOG.warn(""assignRegion specifier type: expected: "" + RegionSpecifierType.REGION_NAME"
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,2585,"          + "" actual: "" + type);"
1229397a95c,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Gary Helmling,2010-12-21,20:39:26,2586,      }
e4635cedad7,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2012-08-17,21:54:14,2587,      HRegionInfo regionInfo = assignmentManager.getRegionStates().getRegionInfo(regionName);
57afee6a6bb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2012-07-27,16:34:32,2588,      if (regionInfo == null) throw new UnknownRegionException(Bytes.toString(regionName));
c18eebd8a61,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-17,05:06:15,2589,      if (cpHost != null) {
57afee6a6bb,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2012-07-27,16:34:32,2590,        if (cpHost.preAssign(regionInfo)) {
c18eebd8a61,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-17,05:06:15,2591,          return arr;
c18eebd8a61,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-17,05:06:15,2592,        }
c18eebd8a61,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-17,05:06:15,2593,      }
3babc19ae12,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-22,15:07:37,2594,"      LOG.info(getClientIdAuditPrefix() + "" assign "" + regionInfo.getRegionNameAsString());"
a5bd102cd8b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2012-10-20,03:57:49,2595,"      assignmentManager.assign(regionInfo, true, true);"
a5bd102cd8b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2012-10-20,03:57:49,2596,      if (cpHost != null) {
a5bd102cd8b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2012-10-20,03:57:49,2597,        cpHost.postAssign(regionInfo);
a5bd102cd8b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2012-10-20,03:57:49,2598,      }
c18eebd8a61,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-17,05:06:15,2599,
a5bd102cd8b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2012-10-20,03:57:49,2600,      return arr;
c18eebd8a61,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-17,05:06:15,2601,    } catch (IOException ioe) {
c18eebd8a61,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-17,05:06:15,2602,      throw new ServiceException(ioe);
1229397a95c,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Gary Helmling,2010-12-21,20:39:26,2603,    }
2149277bf36,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-11-29,19:41:02,2604,  }
2149277bf36,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-11-29,19:41:02,2605,
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,2606,  public void assignRegion(HRegionInfo hri) {
8387a5b18fb,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Gray,2010-11-02,02:04:09,2607,"    assignmentManager.assign(hri, true);"
ec9a568764e,src/java/org/apache/hadoop/hbase/HMaster.java,Doug Cutting,2007-04-24,21:13:08,2608,  }
931d452cb2c,src/java/org/apache/hadoop/hbase/HMaster.java,Jim Kellerman,2007-08-10,22:11:05,2609,
2149277bf36,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-11-29,19:41:02,2610,  @Override
c18eebd8a61,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-17,05:06:15,2611,"  public UnassignRegionResponse unassignRegion(RpcController controller, UnassignRegionRequest req)"
c18eebd8a61,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-17,05:06:15,2612,  throws ServiceException {
c18eebd8a61,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-17,05:06:15,2613,    try {
c18eebd8a61,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-17,05:06:15,2614,      final byte [] regionName = req.getRegion().getValue().toByteArray();
c18eebd8a61,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-17,05:06:15,2615,      RegionSpecifierType type = req.getRegion().getType();
c18eebd8a61,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-17,05:06:15,2616,      final boolean force = req.getForce();
c18eebd8a61,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-17,05:06:15,2617,      UnassignRegionResponse urr = UnassignRegionResponse.newBuilder().build();
c18eebd8a61,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-17,05:06:15,2618,
c18eebd8a61,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-17,05:06:15,2619,      checkInitialized();
c18eebd8a61,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-17,05:06:15,2620,      if (type != RegionSpecifierType.REGION_NAME) {
c18eebd8a61,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-17,05:06:15,2621,"        LOG.warn(""unassignRegion specifier type: expected: "" + RegionSpecifierType.REGION_NAME"
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,2622,"          + "" actual: "" + type);"
1193bc1df07,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Gary Helmling,2011-09-08,06:49:35,2623,      }
c18eebd8a61,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-17,05:06:15,2624,"      Pair<HRegionInfo, ServerName> pair ="
c18eebd8a61,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-17,05:06:15,2625,"        MetaReader.getRegion(this.catalogTracker, regionName);"
c18eebd8a61,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-17,05:06:15,2626,      if (pair == null) throw new UnknownRegionException(Bytes.toString(regionName));
c18eebd8a61,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-17,05:06:15,2627,      HRegionInfo hri = pair.getFirst();
c18eebd8a61,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-17,05:06:15,2628,      if (cpHost != null) {
c18eebd8a61,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-17,05:06:15,2629,"        if (cpHost.preUnassign(hri, force)) {"
c18eebd8a61,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-17,05:06:15,2630,          return urr;
c18eebd8a61,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-17,05:06:15,2631,        }
c18eebd8a61,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-17,05:06:15,2632,      }
3babc19ae12,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-22,15:07:37,2633,"      LOG.debug(getClientIdAuditPrefix() + "" unassign "" + hri.getRegionNameAsString()"
3babc19ae12,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-22,15:07:37,2634,"          + "" in current location if it is online and reassign.force="" + force);"
a62eecc95a1,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-04-03,23:16:44,2635,"      this.assignmentManager.unassign(hri, force);"
3d525b08e01,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-10-01,22:02:01,2636,      if (this.assignmentManager.getRegionStates().isRegionOffline(hri)) {
a62eecc95a1,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-04-03,23:16:44,2637,"        LOG.debug(""Region "" + hri.getRegionNameAsString()"
a62eecc95a1,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-04-03,23:16:44,2638,"            + "" is not online on any region server, reassigning it."");"
c18eebd8a61,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-17,05:06:15,2639,        assignRegion(hri);
c18eebd8a61,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-17,05:06:15,2640,      }
c18eebd8a61,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-17,05:06:15,2641,      if (cpHost != null) {
c18eebd8a61,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-17,05:06:15,2642,"        cpHost.postUnassign(hri, force);"
c18eebd8a61,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-17,05:06:15,2643,      }
c18eebd8a61,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-17,05:06:15,2644,
c18eebd8a61,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-17,05:06:15,2645,      return urr;
c18eebd8a61,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-17,05:06:15,2646,    } catch (IOException ioe) {
c18eebd8a61,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-05-17,05:06:15,2647,      throw new ServiceException(ioe);
1229397a95c,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Gary Helmling,2010-12-21,20:39:26,2648,    }
2149277bf36,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-11-29,19:41:02,2649,  }
2149277bf36,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-11-29,19:41:02,2650,
d8f5be74d76,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-06-14,05:40:32,2651,  /**
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,2652,   * Get list of TableDescriptors for requested tables.
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,2653,   * @param controller Unused (set to null).
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,2654,   * @param req GetTableDescriptorsRequest that contains:
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,2655,"   * - tableNames: requested tables, or if empty, all are requested"
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,2656,   * @return GetTableDescriptorsResponse
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,2657,   * @throws ServiceException
d8f5be74d76,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-06-14,05:40:32,2658,   */
040b53e09aa,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-17,05:43:06,2659,  @Override
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,2660,  public GetTableDescriptorsResponse getTableDescriptors(
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,2661,"\t      RpcController controller, GetTableDescriptorsRequest req) throws ServiceException {"
49627667a0d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-06-24,22:21:33,2662,    List<HTableDescriptor> descriptors = new ArrayList<HTableDescriptor>();
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,2663,    List<TableName> tableNameList = new ArrayList<TableName>();
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,2664,    for(HBaseProtos.TableName tableNamePB: req.getTableNamesList()) {
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,2665,      tableNameList.add(ProtobufUtil.toTableName(tableNamePB));
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,2666,    }
49627667a0d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-06-24,22:21:33,2667,    boolean bypass = false;
49627667a0d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-06-24,22:21:33,2668,    if (this.cpHost != null) {
b0439269fe7,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-06-21,18:31:26,2669,      try {
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,2670,"        bypass = this.cpHost.preGetTableDescriptors(tableNameList, descriptors);"
49627667a0d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-06-24,22:21:33,2671,      } catch (IOException ioe) {
49627667a0d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-06-24,22:21:33,2672,        throw new ServiceException(ioe);
b0439269fe7,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-06-21,18:31:26,2673,      }
b0439269fe7,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-06-21,18:31:26,2674,    }
49627667a0d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-06-24,22:21:33,2675,
49627667a0d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-06-24,22:21:33,2676,    if (!bypass) {
49627667a0d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-06-24,22:21:33,2677,      if (req.getTableNamesCount() == 0) {
49627667a0d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-06-24,22:21:33,2678,        // request for all TableDescriptors
49627667a0d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-06-24,22:21:33,2679,"        Map<String, HTableDescriptor> descriptorMap = null;"
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,2680,        try {
49627667a0d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-06-24,22:21:33,2681,          descriptorMap = this.tableDescriptors.getAll();
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,2682,        } catch (IOException e) {
49627667a0d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-06-24,22:21:33,2683,"          LOG.warn(""Failed getting all descriptors"", e);"
49627667a0d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-06-24,22:21:33,2684,        }
49627667a0d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-06-24,22:21:33,2685,        if (descriptorMap != null) {
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,2686,          for(HTableDescriptor desc: descriptorMap.values()) {
f034a249f28,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-08-20,23:53:11,2687,            if(!desc.getTableName().isSystemTable()) {
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,2688,              descriptors.add(desc);
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,2689,            }
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,2690,          }
49627667a0d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-06-24,22:21:33,2691,        }
49627667a0d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-06-24,22:21:33,2692,      } else {
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,2693,        for (TableName s: tableNameList) {
49627667a0d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-06-24,22:21:33,2694,          try {
49627667a0d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-06-24,22:21:33,2695,            HTableDescriptor desc = this.tableDescriptors.get(s);
49627667a0d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-06-24,22:21:33,2696,            if (desc != null) {
49627667a0d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-06-24,22:21:33,2697,              descriptors.add(desc);
49627667a0d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-06-24,22:21:33,2698,            }
49627667a0d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-06-24,22:21:33,2699,          } catch (IOException e) {
49627667a0d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-06-24,22:21:33,2700,"            LOG.warn(""Failed getting descriptor for "" + s, e);"
49627667a0d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-06-24,22:21:33,2701,          }
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,2702,        }
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,2703,      }
49627667a0d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-06-24,22:21:33,2704,
49627667a0d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-06-24,22:21:33,2705,      if (this.cpHost != null) {
49627667a0d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-06-24,22:21:33,2706,        try {
49627667a0d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-06-24,22:21:33,2707,          this.cpHost.postGetTableDescriptors(descriptors);
49627667a0d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-06-24,22:21:33,2708,        } catch (IOException ioe) {
49627667a0d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-06-24,22:21:33,2709,          throw new ServiceException(ioe);
49627667a0d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-06-24,22:21:33,2710,        }
49627667a0d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-06-24,22:21:33,2711,      }
49627667a0d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-06-24,22:21:33,2712,    }
49627667a0d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-06-24,22:21:33,2713,
49627667a0d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-06-24,22:21:33,2714,    GetTableDescriptorsResponse.Builder builder = GetTableDescriptorsResponse.newBuilder();
49627667a0d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-06-24,22:21:33,2715,    for (HTableDescriptor htd: descriptors) {
49627667a0d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-06-24,22:21:33,2716,      builder.addTableSchema(htd.convert());
d8f5be74d76,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-06-14,05:40:32,2717,    }
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,2718,    return builder.build();
d8f5be74d76,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-06-14,05:40:32,2719,  }
d8f5be74d76,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-06-14,05:40:32,2720,
6d7fdfd1082,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-08-14,00:34:30,2721,  /**
e79dea8fb42,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-14,15:03:35,2722,   * Get list of userspace table names
6d7fdfd1082,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-08-14,00:34:30,2723,   * @param controller Unused (set to null).
6d7fdfd1082,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-08-14,00:34:30,2724,   * @param req GetTableNamesRequest
6d7fdfd1082,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-08-14,00:34:30,2725,   * @return GetTableNamesResponse
6d7fdfd1082,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-08-14,00:34:30,2726,   * @throws ServiceException
6d7fdfd1082,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-08-14,00:34:30,2727,   */
040b53e09aa,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-17,05:43:06,2728,  @Override
6d7fdfd1082,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-08-14,00:34:30,2729,  public GetTableNamesResponse getTableNames(
6d7fdfd1082,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-08-14,00:34:30,2730,"        RpcController controller, GetTableNamesRequest req) throws ServiceException {"
6d7fdfd1082,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-08-14,00:34:30,2731,    try {
6d7fdfd1082,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-08-14,00:34:30,2732,      Collection<HTableDescriptor> descriptors = this.tableDescriptors.getAll().values();
6d7fdfd1082,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-08-14,00:34:30,2733,      GetTableNamesResponse.Builder builder = GetTableNamesResponse.newBuilder();
6d7fdfd1082,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-08-14,00:34:30,2734,      for (HTableDescriptor descriptor: descriptors) {
327edc6b1d7,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-21,00:42:16,2735,        if (descriptor.getTableName().isSystemTable()) {
e79dea8fb42,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-14,15:03:35,2736,          continue;
e79dea8fb42,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-14,15:03:35,2737,        }
6d7fdfd1082,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-08-14,00:34:30,2738,        builder.addTableNames(ProtobufUtil.toProtoTableName(descriptor.getTableName()));
6d7fdfd1082,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-08-14,00:34:30,2739,      }
6d7fdfd1082,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-08-14,00:34:30,2740,      return builder.build();
6d7fdfd1082,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-08-14,00:34:30,2741,    } catch (IOException e) {
6d7fdfd1082,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-08-14,00:34:30,2742,      throw new ServiceException(e);
6d7fdfd1082,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-08-14,00:34:30,2743,    }
6d7fdfd1082,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-08-14,00:34:30,2744,  }
6d7fdfd1082,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-08-14,00:34:30,2745,
529223130ab,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,23:12:42,2746,  /**
529223130ab,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,23:12:42,2747,   * Compute the average load across all region servers.
529223130ab,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,23:12:42,2748,"   * Currently, this uses a very naive computation - just uses the number of"
529223130ab,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,23:12:42,2749,"   * regions being served, ignoring stats about number of requests."
529223130ab,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,23:12:42,2750,   * @return the average load
529223130ab,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,23:12:42,2751,   */
529223130ab,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,23:12:42,2752,  public double getAverageLoad() {
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,eclark,2012-11-06,23:22:01,2753,    if (this.assignmentManager == null) {
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,eclark,2012-11-06,23:22:01,2754,      return 0;
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,eclark,2012-11-06,23:22:01,2755,    }
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,eclark,2012-11-06,23:22:01,2756,
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,eclark,2012-11-06,23:22:01,2757,    RegionStates regionStates = this.assignmentManager.getRegionStates();
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,eclark,2012-11-06,23:22:01,2758,    if (regionStates == null) {
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,eclark,2012-11-06,23:22:01,2759,      return 0;
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,eclark,2012-11-06,23:22:01,2760,    }
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,eclark,2012-11-06,23:22:01,2761,    return regionStates.getAverageLoad();
529223130ab,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,23:12:42,2762,  }
f2d637ffa5f,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2012-03-23,23:53:55,2763,
865b14133b8,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2012-03-21,19:30:54,2764,  /**
a832f774c4b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2013-03-18,16:44:04,2765,   * Offline specified region from master\'s in-memory state. It will not attempt to
a832f774c4b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2013-03-18,16:44:04,2766,   * reassign the region as in unassign.
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-03,03:52:15,2767,   *
a832f774c4b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2013-03-18,16:44:04,2768,   * This is a special method that should be used by experts or hbck.
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-03,03:52:15,2769,   *
865b14133b8,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2012-03-21,19:30:54,2770,   */
865b14133b8,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2012-03-21,19:30:54,2771,  @Override
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,2772,"  public OfflineRegionResponse offlineRegion(RpcController controller, OfflineRegionRequest request)"
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,2773,  throws ServiceException {
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,2774,    final byte [] regionName = request.getRegion().getValue().toByteArray();
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,2775,    RegionSpecifierType type = request.getRegion().getType();
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,2776,    if (type != RegionSpecifierType.REGION_NAME) {
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,2777,"      LOG.warn(""moveRegion specifier type: expected: "" + RegionSpecifierType.REGION_NAME"
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,2778,"        + "" actual: "" + type);"
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,2779,    }
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,2780,
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,2781,    try {
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,2782,"      Pair<HRegionInfo, ServerName> pair ="
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,2783,"        MetaReader.getRegion(this.catalogTracker, regionName);"
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,2784,      if (pair == null) throw new UnknownRegionException(Bytes.toStringBinary(regionName));
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,2785,      HRegionInfo hri = pair.getFirst();
a832f774c4b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2013-03-18,16:44:04,2786,      if (cpHost != null) {
a832f774c4b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2013-03-18,16:44:04,2787,        cpHost.preRegionOffline(hri);
a832f774c4b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2013-03-18,16:44:04,2788,      }
3babc19ae12,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-22,15:07:37,2789,"      LOG.info(getClientIdAuditPrefix() + "" offline "" + hri.getRegionNameAsString());"
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,2790,      this.assignmentManager.regionOffline(hri);
a832f774c4b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2013-03-18,16:44:04,2791,      if (cpHost != null) {
a832f774c4b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2013-03-18,16:44:04,2792,        cpHost.postRegionOffline(hri);
a832f774c4b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2013-03-18,16:44:04,2793,      }
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,2794,    } catch (IOException ioe) {
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,2795,      throw new ServiceException(ioe);
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,2796,    }
06618e66232,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-06-01,23:18:20,2797,    return OfflineRegionResponse.newBuilder().build();
865b14133b8,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2012-03-21,19:30:54,2798,  }
529223130ab,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2011-04-27,23:12:42,2799,
4c5928faf9f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-11-14,17:03:06,2800,  @Override
4c5928faf9f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-11-14,17:03:06,2801,  public boolean registerService(Service instance) {
4c5928faf9f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-11-14,17:03:06,2802,    /*
4c5928faf9f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-11-14,17:03:06,2803,     * No stacking of instances is allowed for a single service name
4c5928faf9f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-11-14,17:03:06,2804,     */
4c5928faf9f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-11-14,17:03:06,2805,    Descriptors.ServiceDescriptor serviceDesc = instance.getDescriptorForType();
4c5928faf9f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-11-14,17:03:06,2806,    if (coprocessorServiceHandlers.containsKey(serviceDesc.getFullName())) {
4c5928faf9f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-11-14,17:03:06,2807,"      LOG.error(""Coprocessor service ""+serviceDesc.getFullName()+"
4c5928faf9f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-11-14,17:03:06,2808,"          "" already registered, rejecting request from ""+instance"
4c5928faf9f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-11-14,17:03:06,2809,      );
4c5928faf9f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-11-14,17:03:06,2810,      return false;
4c5928faf9f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-11-14,17:03:06,2811,    }
4c5928faf9f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-11-14,17:03:06,2812,
4c5928faf9f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-11-14,17:03:06,2813,"    coprocessorServiceHandlers.put(serviceDesc.getFullName(), instance);"
4c5928faf9f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-11-14,17:03:06,2814,    if (LOG.isDebugEnabled()) {
4c5928faf9f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-11-14,17:03:06,2815,"      LOG.debug(""Registered master coprocessor service: service=""+serviceDesc.getFullName());"
4c5928faf9f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-11-14,17:03:06,2816,    }
4c5928faf9f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-11-14,17:03:06,2817,    return true;
4c5928faf9f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-11-14,17:03:06,2818,  }
4c5928faf9f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-11-14,17:03:06,2819,
4c5928faf9f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-11-14,17:03:06,2820,  @Override
4c5928faf9f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-11-14,17:03:06,2821,"  public ClientProtos.CoprocessorServiceResponse execMasterService(final RpcController controller,"
4c5928faf9f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-11-14,17:03:06,2822,      final ClientProtos.CoprocessorServiceRequest request) throws ServiceException {
4c5928faf9f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-11-14,17:03:06,2823,    try {
4c5928faf9f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-11-14,17:03:06,2824,      ServerRpcController execController = new ServerRpcController();
4c5928faf9f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-11-14,17:03:06,2825,
4c5928faf9f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-11-14,17:03:06,2826,      ClientProtos.CoprocessorServiceCall call = request.getCall();
4c5928faf9f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-11-14,17:03:06,2827,      String serviceName = call.getServiceName();
4c5928faf9f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-11-14,17:03:06,2828,      String methodName = call.getMethodName();
4c5928faf9f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-11-14,17:03:06,2829,      if (!coprocessorServiceHandlers.containsKey(serviceName)) {
08671a41297,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,eclark,2012-12-21,23:39:30,2830,"        throw new UnknownProtocolException(null,"
4c5928faf9f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-11-14,17:03:06,2831,"            ""No registered master coprocessor service found for name ""+serviceName);"
4c5928faf9f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-11-14,17:03:06,2832,      }
4c5928faf9f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-11-14,17:03:06,2833,
4c5928faf9f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-11-14,17:03:06,2834,      Service service = coprocessorServiceHandlers.get(serviceName);
4c5928faf9f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-11-14,17:03:06,2835,      Descriptors.ServiceDescriptor serviceDesc = service.getDescriptorForType();
4c5928faf9f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-11-14,17:03:06,2836,      Descriptors.MethodDescriptor methodDesc = serviceDesc.findMethodByName(methodName);
4c5928faf9f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-11-14,17:03:06,2837,      if (methodDesc == null) {
08671a41297,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,eclark,2012-12-21,23:39:30,2838,"        throw new UnknownProtocolException(service.getClass(),"
4c5928faf9f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-11-14,17:03:06,2839,"            ""Unknown method ""+methodName+"" called on master service ""+serviceName);"
4c5928faf9f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-11-14,17:03:06,2840,      }
4c5928faf9f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-11-14,17:03:06,2841,
4c5928faf9f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-11-14,17:03:06,2842,      //invoke the method
4c5928faf9f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-11-14,17:03:06,2843,      Message execRequest = service.getRequestPrototype(methodDesc).newBuilderForType()
4c5928faf9f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-11-14,17:03:06,2844,          .mergeFrom(call.getRequest()).build();
4c5928faf9f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-11-14,17:03:06,2845,      final Message.Builder responseBuilder =
4c5928faf9f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-11-14,17:03:06,2846,          service.getResponsePrototype(methodDesc).newBuilderForType();
c2272d7f222,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-01-28,23:25:57,2847,"      service.callMethod(methodDesc, execController, execRequest, new RpcCallback<Message>() {"
4c5928faf9f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-11-14,17:03:06,2848,        @Override
4c5928faf9f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-11-14,17:03:06,2849,        public void run(Message message) {
4c5928faf9f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-11-14,17:03:06,2850,          if (message != null) {
4c5928faf9f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-11-14,17:03:06,2851,            responseBuilder.mergeFrom(message);
4c5928faf9f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-11-14,17:03:06,2852,          }
4c5928faf9f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-11-14,17:03:06,2853,        }
4c5928faf9f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-11-14,17:03:06,2854,      });
4c5928faf9f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-11-14,17:03:06,2855,      Message execResult = responseBuilder.build();
4c5928faf9f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-11-14,17:03:06,2856,
4c5928faf9f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-11-14,17:03:06,2857,      if (execController.getFailedOn() != null) {
4c5928faf9f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-11-14,17:03:06,2858,        throw execController.getFailedOn();
4c5928faf9f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-11-14,17:03:06,2859,      }
4c5928faf9f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-11-14,17:03:06,2860,      ClientProtos.CoprocessorServiceResponse.Builder builder =
4c5928faf9f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-11-14,17:03:06,2861,          ClientProtos.CoprocessorServiceResponse.newBuilder();
4c5928faf9f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-11-14,17:03:06,2862,      builder.setRegion(RequestConverter.buildRegionSpecifier(
4c5928faf9f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-11-14,17:03:06,2863,"          RegionSpecifierType.REGION_NAME, HConstants.EMPTY_BYTE_ARRAY));"
4c5928faf9f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-11-14,17:03:06,2864,      builder.setValue(
4c5928faf9f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-11-14,17:03:06,2865,          builder.getValueBuilder().setName(execResult.getClass().getName())
4c5928faf9f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-11-14,17:03:06,2866,              .setValue(execResult.toByteString()));
4c5928faf9f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-11-14,17:03:06,2867,      return builder.build();
4c5928faf9f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-11-14,17:03:06,2868,    } catch (IOException ie) {
4c5928faf9f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-11-14,17:03:06,2869,      throw new ServiceException(ie);
4c5928faf9f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-11-14,17:03:06,2870,    }
4c5928faf9f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-11-14,17:03:06,2871,  }
4c5928faf9f,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-11-14,17:03:06,2872,
19b01d968d3,core/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-04-30,06:52:27,2873,  /**
19b01d968d3,core/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-04-30,06:52:27,2874,   * Utility for constructing an instance of the passed HMaster class.
19b01d968d3,core/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-04-30,06:52:27,2875,   * @param masterClass
19b01d968d3,core/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-04-30,06:52:27,2876,   * @param conf
19b01d968d3,core/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-04-30,06:52:27,2877,   * @return HMaster instance.
19b01d968d3,core/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-04-30,06:52:27,2878,   */
19b01d968d3,core/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-04-30,06:52:27,2879,"  public static HMaster constructMaster(Class<? extends HMaster> masterClass,"
19b01d968d3,core/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-04-30,06:52:27,2880,      final Configuration conf)  {
19b01d968d3,core/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-04-30,06:52:27,2881,    try {
19b01d968d3,core/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-04-30,06:52:27,2882,      Constructor<? extends HMaster> c =
19b01d968d3,core/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-04-30,06:52:27,2883,        masterClass.getConstructor(Configuration.class);
19b01d968d3,core/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-04-30,06:52:27,2884,      return c.newInstance(conf);
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,2885,    } catch (InvocationTargetException ite) {
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,2886,      Throwable target = ite.getTargetException() != null?
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,2887,        ite.getTargetException(): ite;
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,2888,      if (target.getCause() != null) target = target.getCause();
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,2889,"      throw new RuntimeException(""Failed construction of Master: "" +"
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,2890,"        masterClass.toString(), target);"
19b01d968d3,core/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-04-30,06:52:27,2891,    } catch (Exception e) {
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,2892,"      throw new RuntimeException(""Failed construction of Master: "" +"
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,2893,        masterClass.toString() + ((e.getCause() != null)?
f5213095324,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-08-31,23:51:44,2894,"          e.getCause().getMessage(): """"), e);"
19b01d968d3,core/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-04-30,06:52:27,2895,    }
19b01d968d3,core/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-04-30,06:52:27,2896,  }
19b01d968d3,core/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-04-30,06:52:27,2897,
83298b47216,src/java/org/apache/hadoop/hbase/HMaster.java,Michael Stack,2007-09-15,15:14:53,2898,  /**
02cd4a9b019,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Todd Lipcon,2010-09-13,18:37:11,2899,   * @see org.apache.hadoop.hbase.master.HMasterCommandLine
83298b47216,src/java/org/apache/hadoop/hbase/HMaster.java,Michael Stack,2007-09-15,15:14:53,2900,   */
b27d0319c04,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2012-10-22,16:27:16,2901,  public static void main(String [] args) {
b5cf8748198,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-09-27,05:40:09,2902,    VersionInfo.logVersion();
02cd4a9b019,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Todd Lipcon,2010-09-13,18:37:11,2903,    new HMasterCommandLine(HMaster.class).doMain(args);
83298b47216,src/java/org/apache/hadoop/hbase/HMaster.java,Michael Stack,2007-09-15,15:14:53,2904,  }
d7050d3541d,src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2012-02-24,21:06:12,2905,
ab96788641a,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,larsh,2012-07-22,01:11:36,2906,  public HFileCleaner getHFileCleaner() {
ab96788641a,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,larsh,2012-07-22,01:11:36,2907,    return this.hfileCleaner;
ab96788641a,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,larsh,2012-07-22,01:11:36,2908,  }
b251b573905,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,17:53:26,2909,
cb6f2868583,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:05:53,2910,  /**
cb6f2868583,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:05:53,2911,   * Exposed for TESTING!
cb6f2868583,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:05:53,2912,   * @return the underlying snapshot manager
cb6f2868583,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:05:53,2913,   */
77ef4a85d2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:07:16,2914,  public SnapshotManager getSnapshotManagerForTesting() {
cb6f2868583,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:05:53,2915,    return this.snapshotManager;
cb6f2868583,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:05:53,2916,  }
cb6f2868583,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:05:53,2917,
bb5c15894e3,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:36:03,2918,  /**
bb5c15894e3,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:36:03,2919,   * Triggers an asynchronous attempt to take a snapshot.
bb5c15894e3,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:36:03,2920,   * {@inheritDoc}
bb5c15894e3,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:36:03,2921,   */
b251b573905,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,17:53:26,2922,  @Override
7fb94c126af,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-11,21:07:33,2923,"  public SnapshotResponse snapshot(RpcController controller, SnapshotRequest request)"
b251b573905,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,17:53:26,2924,      throws ServiceException {
55a44243a93,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:42:03,2925,    try {
55a44243a93,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:42:03,2926,      this.snapshotManager.checkSnapshotSupport();
55a44243a93,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:42:03,2927,    } catch (UnsupportedOperationException e) {
55a44243a93,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:42:03,2928,      throw new ServiceException(e);
55a44243a93,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:42:03,2929,    }
55a44243a93,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:42:03,2930,
3babc19ae12,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-22,15:07:37,2931,"    LOG.info(getClientIdAuditPrefix() + "" snapshot request for:"" +"
24ebbcabc39,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,eclark,2013-02-25,22:50:17,2932,        ClientSnapshotDescriptionUtils.toString(request.getSnapshot()));
cb6f2868583,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:05:53,2933,    // get the snapshot information
cb6f2868583,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:05:53,2934,"    SnapshotDescription snapshot = SnapshotDescriptionUtils.validate(request.getSnapshot(),"
cb6f2868583,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:05:53,2935,      this.conf);
71b0e2c0a8e,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:15:04,2936,    try {
bb5c15894e3,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:36:03,2937,      snapshotManager.takeSnapshot(snapshot);
71b0e2c0a8e,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:15:04,2938,    } catch (IOException e) {
71b0e2c0a8e,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:15:04,2939,      throw new ServiceException(e);
71b0e2c0a8e,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:15:04,2940,    }
71b0e2c0a8e,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:15:04,2941,
cb6f2868583,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:05:53,2942,    // send back the max amount of time the client should wait for the snapshot to complete
cb6f2868583,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:05:53,2943,"    long waitTime = SnapshotDescriptionUtils.getMaxMasterTimeout(conf, snapshot.getType(),"
cb6f2868583,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:05:53,2944,      SnapshotDescriptionUtils.DEFAULT_MAX_WAIT_TIME);
7fb94c126af,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-11,21:07:33,2945,    return SnapshotResponse.newBuilder().setExpectedTimeout(waitTime).build();
b251b573905,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,17:53:26,2946,  }
b251b573905,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,17:53:26,2947,
cb6f2868583,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:05:53,2948,  /**
cb6f2868583,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:05:53,2949,   * List the currently available/stored snapshots. Any in-progress snapshots are ignored
cb6f2868583,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:05:53,2950,   */
b251b573905,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,17:53:26,2951,  @Override
7fb94c126af,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-11,21:07:33,2952,"  public GetCompletedSnapshotsResponse getCompletedSnapshots(RpcController controller,"
7fb94c126af,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-11,21:07:33,2953,      GetCompletedSnapshotsRequest request) throws ServiceException {
cb6f2868583,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:05:53,2954,    try {
7fb94c126af,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-11,21:07:33,2955,      GetCompletedSnapshotsResponse.Builder builder = GetCompletedSnapshotsResponse.newBuilder();
bb5c15894e3,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:36:03,2956,      List<SnapshotDescription> snapshots = snapshotManager.getCompletedSnapshots();
cb6f2868583,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:05:53,2957,
bb5c15894e3,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:36:03,2958,      // convert to protobuf
bb5c15894e3,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:36:03,2959,      for (SnapshotDescription snapshot : snapshots) {
bb5c15894e3,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:36:03,2960,        builder.addSnapshots(snapshot);
cb6f2868583,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:05:53,2961,      }
cb6f2868583,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:05:53,2962,      return builder.build();
cb6f2868583,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:05:53,2963,    } catch (IOException e) {
cb6f2868583,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:05:53,2964,      throw new ServiceException(e);
cb6f2868583,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:05:53,2965,    }
b251b573905,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,17:53:26,2966,  }
b251b573905,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,17:53:26,2967,
bb5c15894e3,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:36:03,2968,  /**
bb5c15894e3,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:36:03,2969,   * Execute Delete Snapshot operation.
0edd9e13d9a,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:56:44,2970,   * @return DeleteSnapshotResponse (a protobuf wrapped void) if the snapshot existed and was
bb5c15894e3,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:36:03,2971,   *    deleted properly.
bb5c15894e3,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:36:03,2972,   * @throws ServiceException wrapping SnapshotDoesNotExistException if specified snapshot did not
bb5c15894e3,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:36:03,2973,   *    exist.
bb5c15894e3,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:36:03,2974,   */
b251b573905,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,17:53:26,2975,  @Override
b251b573905,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,17:53:26,2976,"  public DeleteSnapshotResponse deleteSnapshot(RpcController controller,"
b251b573905,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,17:53:26,2977,      DeleteSnapshotRequest request) throws ServiceException {
55a44243a93,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:42:03,2978,    try {
55a44243a93,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:42:03,2979,      this.snapshotManager.checkSnapshotSupport();
55a44243a93,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:42:03,2980,    } catch (UnsupportedOperationException e) {
55a44243a93,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:42:03,2981,      throw new ServiceException(e);
55a44243a93,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:42:03,2982,    }
55a44243a93,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:42:03,2983,
cb6f2868583,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:05:53,2984,    try {
3babc19ae12,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-22,15:07:37,2985,"      LOG.info(getClientIdAuditPrefix() + "" delete "" + request.getSnapshot());"
bb5c15894e3,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:36:03,2986,      snapshotManager.deleteSnapshot(request.getSnapshot());
cb6f2868583,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:05:53,2987,      return DeleteSnapshotResponse.newBuilder().build();
cb6f2868583,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:05:53,2988,    } catch (IOException e) {
cb6f2868583,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:05:53,2989,      throw new ServiceException(e);
cb6f2868583,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:05:53,2990,    }
b251b573905,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,17:53:26,2991,  }
b251b573905,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,17:53:26,2992,
bb5c15894e3,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:36:03,2993,  /**
bb5c15894e3,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:36:03,2994,   * Checks if the specified snapshot is done.
0edd9e13d9a,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:56:44,2995,"   * @return true if the snapshot is in file system ready to use,"
bb5c15894e3,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:36:03,2996,   *   false if the snapshot is in the process of completing
bb5c15894e3,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:36:03,2997,"   * @throws ServiceException wrapping UnknownSnapshotException if invalid snapshot, or"
bb5c15894e3,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:36:03,2998,   *  a wrapped HBaseSnapshotException with progress failure reason.
bb5c15894e3,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:36:03,2999,   */
b251b573905,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,17:53:26,3000,  @Override
b251b573905,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,17:53:26,3001,"  public IsSnapshotDoneResponse isSnapshotDone(RpcController controller,"
b251b573905,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,17:53:26,3002,      IsSnapshotDoneRequest request) throws ServiceException {
6c8228e18b8,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:58:18,3003,"    LOG.debug(""Checking to see if snapshot from request:"" +"
24ebbcabc39,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,eclark,2013-02-25,22:50:17,3004,"        ClientSnapshotDescriptionUtils.toString(request.getSnapshot()) + "" is done"");"
cb6f2868583,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:05:53,3005,    try {
cb6f2868583,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:05:53,3006,      IsSnapshotDoneResponse.Builder builder = IsSnapshotDoneResponse.newBuilder();
bb5c15894e3,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:36:03,3007,      boolean done = snapshotManager.isSnapshotDone(request.getSnapshot());
bb5c15894e3,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:36:03,3008,      builder.setDone(done);
cb6f2868583,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:05:53,3009,      return builder.build();
cb6f2868583,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:05:53,3010,    } catch (IOException e) {
cb6f2868583,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:05:53,3011,      throw new ServiceException(e);
cb6f2868583,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:05:53,3012,    }
b251b573905,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,17:53:26,3013,  }
eb4346f1446,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:07:57,3014,
0bcb524581b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:10:58,3015,  /**
0bcb524581b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:10:58,3016,   * Execute Restore/Clone snapshot operation.
0bcb524581b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:10:58,3017,   *
0bcb524581b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:10:58,3018,"   * <p>If the specified table exists a ""Restore"" is executed, replacing the table"
0bcb524581b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:10:58,3019,   * schema and directory data with the content of the snapshot.
0bcb524581b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:10:58,3020,"   * The table must be disabled, or a UnsupportedOperationException will be thrown."
0bcb524581b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:10:58,3021,   *
0bcb524581b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:10:58,3022,"   * <p>If the table doesn\'t exist a ""Clone"" is executed, a new table is created"
0bcb524581b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:10:58,3023,"   * using the schema at the time of the snapshot, and the content of the snapshot."
0bcb524581b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:10:58,3024,   *
0bcb524581b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:10:58,3025,   * <p>The restore/clone operation does not require copying HFiles. Since HFiles
0bcb524581b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:10:58,3026,   * are immutable the table can point to and use the same files as the original one.
0bcb524581b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:10:58,3027,   */
eb4346f1446,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:07:57,3028,  @Override
eb4346f1446,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:07:57,3029,"  public RestoreSnapshotResponse restoreSnapshot(RpcController controller,"
eb4346f1446,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:07:57,3030,      RestoreSnapshotRequest request) throws ServiceException {
55a44243a93,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:42:03,3031,    try {
55a44243a93,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:42:03,3032,      this.snapshotManager.checkSnapshotSupport();
55a44243a93,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:42:03,3033,    } catch (UnsupportedOperationException e) {
55a44243a93,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:42:03,3034,      throw new ServiceException(e);
55a44243a93,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:42:03,3035,    }
55a44243a93,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:42:03,3036,
26f20dca6a7,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2014-03-15,23:43:55,3037,    // ensure namespace exists
26f20dca6a7,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2014-03-15,23:43:55,3038,    try {
26f20dca6a7,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2014-03-15,23:43:55,3039,      TableName dstTable = TableName.valueOf(request.getSnapshot().getTable());
26f20dca6a7,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2014-03-15,23:43:55,3040,      getNamespaceDescriptor(dstTable.getNamespaceAsString());
26f20dca6a7,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2014-03-15,23:43:55,3041,    } catch (IOException ioe) {
26f20dca6a7,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2014-03-15,23:43:55,3042,      throw new ServiceException(ioe);
26f20dca6a7,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2014-03-15,23:43:55,3043,    }
26f20dca6a7,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2014-03-15,23:43:55,3044,
0bcb524581b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:10:58,3045,    try {
bb5c15894e3,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:36:03,3046,      SnapshotDescription reqSnapshot = request.getSnapshot();
bb5c15894e3,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:36:03,3047,      snapshotManager.restoreSnapshot(reqSnapshot);
0bcb524581b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:10:58,3048,      return RestoreSnapshotResponse.newBuilder().build();
0bcb524581b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:10:58,3049,    } catch (IOException e) {
0bcb524581b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:10:58,3050,      throw new ServiceException(e);
0bcb524581b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:10:58,3051,    }
eb4346f1446,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:07:57,3052,  }
eb4346f1446,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:07:57,3053,
0bcb524581b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:10:58,3054,  /**
0bcb524581b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:10:58,3055,   * Returns the status of the requested snapshot restore/clone operation.
0bcb524581b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:10:58,3056,"   * This method is not exposed to the user, it is just used internally by HBaseAdmin"
0bcb524581b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:10:58,3057,   * to verify if the restore is completed.
0bcb524581b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:10:58,3058,   *
0bcb524581b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:10:58,3059,"   * No exceptions are thrown if the restore is not running, the result will be ""done""."
0bcb524581b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:10:58,3060,   *
0bcb524581b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:10:58,3061,   * @return done <tt>true</tt> if the restore/clone operation is completed.
17e604efbf7,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,nkeywal,2013-03-19,09:24:01,3062,   * @throws ServiceException if the operation failed.
0bcb524581b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:10:58,3063,   */
eb4346f1446,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:07:57,3064,  @Override
eb4346f1446,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:07:57,3065,"  public IsRestoreSnapshotDoneResponse isRestoreSnapshotDone(RpcController controller,"
eb4346f1446,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:07:57,3066,      IsRestoreSnapshotDoneRequest request) throws ServiceException {
0bcb524581b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:10:58,3067,    try {
0bcb524581b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:10:58,3068,      SnapshotDescription snapshot = request.getSnapshot();
0bcb524581b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:10:58,3069,      IsRestoreSnapshotDoneResponse.Builder builder = IsRestoreSnapshotDoneResponse.newBuilder();
47f4477f79a,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,jxiang,2013-05-14,22:55:11,3070,      boolean done = snapshotManager.isRestoreDone(snapshot);
832a6efa171,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,mbertozzi,2013-05-09,10:45:20,3071,      builder.setDone(done);
0bcb524581b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:10:58,3072,      return builder.build();
0bcb524581b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:10:58,3073,    } catch (IOException e) {
0bcb524581b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:10:58,3074,      throw new ServiceException(e);
0bcb524581b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:10:58,3075,    }
eb4346f1446,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-13,18:07:57,3076,  }
1d2180687a0,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2013-02-14,12:58:12,3077,
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2014-01-22,01:42:49,3078,  /**
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2014-01-22,01:42:49,3079,   * Triggers an asynchronous attempt to run a distributed procedure.
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2014-01-22,01:42:49,3080,   * {@inheritDoc}
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2014-01-22,01:42:49,3081,   */
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2014-01-22,01:42:49,3082,  @Override
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2014-01-22,01:42:49,3083,"  public ExecProcedureResponse execProcedure(RpcController controller,"
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2014-01-22,01:42:49,3084,      ExecProcedureRequest request) throws ServiceException {
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2014-01-22,01:42:49,3085,    ProcedureDescription desc = request.getProcedure();
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2014-01-22,01:42:49,3086,    MasterProcedureManager mpm = this.mpmHost.getProcedureManager(desc
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2014-01-22,01:42:49,3087,        .getSignature());
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2014-01-22,01:42:49,3088,    if (mpm == null) {
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2014-01-22,01:42:49,3089,"      throw new ServiceException(""The procedure is not registered: """
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2014-01-22,01:42:49,3090,          + desc.getSignature());
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2014-01-22,01:42:49,3091,    }
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2014-01-22,01:42:49,3092,
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2014-01-22,01:42:49,3093,"    LOG.info(getClientIdAuditPrefix() + "" procedure request for: """
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2014-01-22,01:42:49,3094,        + desc.getSignature());
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2014-01-22,01:42:49,3095,
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2014-01-22,01:42:49,3096,    try {
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2014-01-22,01:42:49,3097,      mpm.execProcedure(desc);
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2014-01-22,01:42:49,3098,    } catch (IOException e) {
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2014-01-22,01:42:49,3099,      throw new ServiceException(e);
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2014-01-22,01:42:49,3100,    }
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2014-01-22,01:42:49,3101,
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2014-01-22,01:42:49,3102,    // send back the max amount of time the client should wait for the procedure
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2014-01-22,01:42:49,3103,    // to complete
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2014-01-22,01:42:49,3104,    long waitTime = SnapshotDescriptionUtils.DEFAULT_MAX_WAIT_TIME;
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2014-01-22,01:42:49,3105,    return ExecProcedureResponse.newBuilder().setExpectedTimeout(waitTime)
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2014-01-22,01:42:49,3106,        .build();
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2014-01-22,01:42:49,3107,  }
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2014-01-22,01:42:49,3108,
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2014-01-22,01:42:49,3109,  /**
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2014-01-22,01:42:49,3110,   * Checks if the specified procedure is done.
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2014-01-22,01:42:49,3111,"   * @return true if the procedure is done,"
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2014-01-22,01:42:49,3112,   *   false if the procedure is in the process of completing
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2014-01-22,01:42:49,3113,"   * @throws ServiceException if invalid procedure, or"
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2014-01-22,01:42:49,3114,   *  a failed procedure with progress failure reason.
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2014-01-22,01:42:49,3115,   */
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2014-01-22,01:42:49,3116,  @Override
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2014-01-22,01:42:49,3117,"  public IsProcedureDoneResponse isProcedureDone(RpcController controller,"
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2014-01-22,01:42:49,3118,      IsProcedureDoneRequest request) throws ServiceException {
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2014-01-22,01:42:49,3119,    ProcedureDescription desc = request.getProcedure();
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2014-01-22,01:42:49,3120,    MasterProcedureManager mpm = this.mpmHost.getProcedureManager(desc
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2014-01-22,01:42:49,3121,        .getSignature());
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2014-01-22,01:42:49,3122,    if (mpm == null) {
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2014-01-22,01:42:49,3123,"      throw new ServiceException(""The procedure is not registered: """
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2014-01-22,01:42:49,3124,          + desc.getSignature());
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2014-01-22,01:42:49,3125,    }
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2014-01-22,01:42:49,3126,"    LOG.debug(""Checking to see if procedure from request:"""
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2014-01-22,01:42:49,3127,"        + desc.getSignature() + "" is done"");"
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2014-01-22,01:42:49,3128,
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2014-01-22,01:42:49,3129,    try {
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2014-01-22,01:42:49,3130,      IsProcedureDoneResponse.Builder builder = IsProcedureDoneResponse
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2014-01-22,01:42:49,3131,          .newBuilder();
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2014-01-22,01:42:49,3132,      boolean done = mpm.isProcedureDone(desc);
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2014-01-22,01:42:49,3133,      builder.setDone(done);
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2014-01-22,01:42:49,3134,      return builder.build();
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2014-01-22,01:42:49,3135,    } catch (IOException e) {
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2014-01-22,01:42:49,3136,      throw new ServiceException(e);
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2014-01-22,01:42:49,3137,    }
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2014-01-22,01:42:49,3138,  }
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jonathan Hsieh,2014-01-22,01:42:49,3139,
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3140,  @Override
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,3141,"  public ModifyNamespaceResponse modifyNamespace(RpcController controller,"
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,3142,      ModifyNamespaceRequest request) throws ServiceException {
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3143,    try {
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3144,      modifyNamespace(ProtobufUtil.toNamespaceDescriptor(request.getNamespaceDescriptor()));
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,3145,      return ModifyNamespaceResponse.getDefaultInstance();
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3146,    } catch (IOException e) {
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3147,      throw new ServiceException(e);
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3148,    }
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3149,  }
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3150,
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3151,  @Override
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,3152,"  public CreateNamespaceResponse createNamespace(RpcController controller,"
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,3153,     CreateNamespaceRequest request) throws ServiceException {
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3154,    try {
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3155,      createNamespace(ProtobufUtil.toNamespaceDescriptor(request.getNamespaceDescriptor()));
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,3156,      return CreateNamespaceResponse.getDefaultInstance();
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3157,    } catch (IOException e) {
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3158,      throw new ServiceException(e);
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3159,    }
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3160,  }
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3161,
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3162,  @Override
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,3163,"  public DeleteNamespaceResponse deleteNamespace(RpcController controller,"
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,3164,      DeleteNamespaceRequest request) throws ServiceException {
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3165,    try {
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3166,      deleteNamespace(request.getNamespaceName());
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,3167,      return DeleteNamespaceResponse.getDefaultInstance();
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3168,    } catch (IOException e) {
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3169,      throw new ServiceException(e);
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3170,    }
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3171,  }
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3172,
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3173,  @Override
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,3174,  public GetNamespaceDescriptorResponse getNamespaceDescriptor(
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,3175,"      RpcController controller, GetNamespaceDescriptorRequest request)"
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3176,      throws ServiceException {
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3177,    try {
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,3178,      return GetNamespaceDescriptorResponse.newBuilder()
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3179,          .setNamespaceDescriptor(
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3180,              ProtobufUtil.toProtoNamespaceDescriptor(getNamespaceDescriptor(request.getNamespaceName())))
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3181,          .build();
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3182,    } catch (IOException e) {
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3183,      throw new ServiceException(e);
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3184,    }
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3185,  }
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3186,
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3187,  @Override
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,3188,  public ListNamespaceDescriptorsResponse listNamespaceDescriptors(
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,3189,"      RpcController controller, ListNamespaceDescriptorsRequest request)"
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3190,      throws ServiceException {
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3191,    try {
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,3192,      ListNamespaceDescriptorsResponse.Builder response =
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,3193,          ListNamespaceDescriptorsResponse.newBuilder();
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3194,      for(NamespaceDescriptor ns: listNamespaceDescriptors()) {
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3195,        response.addNamespaceDescriptor(ProtobufUtil.toProtoNamespaceDescriptor(ns));
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3196,      }
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3197,      return response.build();
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3198,    } catch (IOException e) {
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3199,      throw new ServiceException(e);
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3200,    }
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3201,  }
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3202,
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3203,  @Override
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,3204,  public ListTableDescriptorsByNamespaceResponse listTableDescriptorsByNamespace(
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,3205,"      RpcController controller, ListTableDescriptorsByNamespaceRequest request)"
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3206,      throws ServiceException {
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3207,    try {
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,3208,      ListTableDescriptorsByNamespaceResponse.Builder b =
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,3209,          ListTableDescriptorsByNamespaceResponse.newBuilder();
6d7fdfd1082,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-08-14,00:34:30,3210,      for(HTableDescriptor htd: listTableDescriptorsByNamespace(request.getNamespaceName())) {
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3211,        b.addTableSchema(htd.convert());
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3212,      }
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3213,      return b.build();
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3214,    } catch (IOException e) {
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3215,      throw new ServiceException(e);
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3216,    }
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3217,  }
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3218,
6d7fdfd1082,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-08-14,00:34:30,3219,  @Override
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,3220,  public ListTableNamesByNamespaceResponse listTableNamesByNamespace(
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,3221,"      RpcController controller, ListTableNamesByNamespaceRequest request)"
6d7fdfd1082,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-08-14,00:34:30,3222,      throws ServiceException {
6d7fdfd1082,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-08-14,00:34:30,3223,    try {
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,3224,      ListTableNamesByNamespaceResponse.Builder b =
dc959eadc2d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-30,19:05:58,3225,          ListTableNamesByNamespaceResponse.newBuilder();
6d7fdfd1082,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-08-14,00:34:30,3226,      for (TableName tableName: listTableNamesByNamespace(request.getNamespaceName())) {
6d7fdfd1082,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-08-14,00:34:30,3227,        b.addTableName(ProtobufUtil.toProtoTableName(tableName));
6d7fdfd1082,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-08-14,00:34:30,3228,      }
6d7fdfd1082,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-08-14,00:34:30,3229,      return b.build();
6d7fdfd1082,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-08-14,00:34:30,3230,    } catch (IOException e) {
6d7fdfd1082,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-08-14,00:34:30,3231,      throw new ServiceException(e);
6d7fdfd1082,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-08-14,00:34:30,3232,    }
6d7fdfd1082,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-08-14,00:34:30,3233,  }
6d7fdfd1082,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-08-14,00:34:30,3234,
a1079157eca,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-01-03,02:12:24,3235,  private boolean isHealthCheckerConfigured() {
a1079157eca,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-01-03,02:12:24,3236,    String healthScriptLocation = this.conf.get(HConstants.HEALTH_SCRIPT_LOC);
a1079157eca,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-01-03,02:12:24,3237,    return org.apache.commons.lang.StringUtils.isNotBlank(healthScriptLocation);
a1079157eca,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-01-03,02:12:24,3238,  }
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-05-15,04:24:02,3239,
040b53e09aa,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-17,05:43:06,3240,  @Override
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3241,  public void createNamespace(NamespaceDescriptor descriptor) throws IOException {
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3242,    TableName.isLegalNamespaceName(Bytes.toBytes(descriptor.getName()));
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3243,    if (cpHost != null) {
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3244,      if (cpHost.preCreateNamespace(descriptor)) {
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3245,        return;
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3246,      }
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3247,    }
3babc19ae12,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-22,15:07:37,3248,"    LOG.info(getClientIdAuditPrefix() + "" creating "" + descriptor);"
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3249,    tableNamespaceManager.create(descriptor);
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3250,    if (cpHost != null) {
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3251,      cpHost.postCreateNamespace(descriptor);
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3252,    }
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3253,  }
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3254,
040b53e09aa,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-17,05:43:06,3255,  @Override
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3256,  public void modifyNamespace(NamespaceDescriptor descriptor) throws IOException {
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3257,    TableName.isLegalNamespaceName(Bytes.toBytes(descriptor.getName()));
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3258,    if (cpHost != null) {
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3259,      if (cpHost.preModifyNamespace(descriptor)) {
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3260,        return;
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3261,      }
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3262,    }
3babc19ae12,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-22,15:07:37,3263,"    LOG.info(getClientIdAuditPrefix() + "" modify "" + descriptor);"
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3264,    tableNamespaceManager.update(descriptor);
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3265,    if (cpHost != null) {
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3266,      cpHost.postModifyNamespace(descriptor);
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3267,    }
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3268,  }
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3269,
040b53e09aa,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-17,05:43:06,3270,  @Override
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3271,  public void deleteNamespace(String name) throws IOException {
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3272,    if (cpHost != null) {
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3273,      if (cpHost.preDeleteNamespace(name)) {
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3274,        return;
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3275,      }
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3276,    }
3babc19ae12,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-22,15:07:37,3277,"    LOG.info(getClientIdAuditPrefix() + "" delete "" + name);"
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3278,    tableNamespaceManager.remove(name);
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3279,    if (cpHost != null) {
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3280,      cpHost.postDeleteNamespace(name);
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3281,    }
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3282,  }
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3283,
040b53e09aa,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-17,05:43:06,3284,  @Override
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3285,  public NamespaceDescriptor getNamespaceDescriptor(String name) throws IOException {
940f4a43c00,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2013-11-05,20:56:10,3286,    boolean ready = tableNamespaceManager != null &&
940f4a43c00,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2013-11-05,20:56:10,3287,        tableNamespaceManager.isTableAvailableAndInitialized();
940f4a43c00,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Zhihong Yu,2013-11-05,20:56:10,3288,    if (!ready) {
88d236d364d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jean-Daniel Cryans,2013-10-02,17:25:45,3289,"      throw new IOException(""Table Namespace Manager not ready yet, try again later"");"
88d236d364d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jean-Daniel Cryans,2013-10-02,17:25:45,3290,    }
040b53e09aa,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-17,05:43:06,3291,    NamespaceDescriptor nsd = tableNamespaceManager.get(name);
040b53e09aa,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-17,05:43:06,3292,    if (nsd == null) {
040b53e09aa,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-17,05:43:06,3293,      throw new NamespaceNotFoundException(name);
040b53e09aa,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-17,05:43:06,3294,    }
040b53e09aa,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-17,05:43:06,3295,    return nsd;
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3296,  }
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3297,
040b53e09aa,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-17,05:43:06,3298,  @Override
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3299,  public List<NamespaceDescriptor> listNamespaceDescriptors() throws IOException {
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3300,    return Lists.newArrayList(tableNamespaceManager.list());
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3301,  }
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3302,
040b53e09aa,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-17,05:43:06,3303,  @Override
6d7fdfd1082,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-08-14,00:34:30,3304,  public List<HTableDescriptor> listTableDescriptorsByNamespace(String name) throws IOException {
040b53e09aa,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-17,05:43:06,3305,    getNamespaceDescriptor(name); // check that namespace exists
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3306,    return Lists.newArrayList(tableDescriptors.getByNamespace(name).values());
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-08-08,04:19:49,3307,  }
6d7fdfd1082,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-08-14,00:34:30,3308,
040b53e09aa,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2013-09-17,05:43:06,3309,  @Override
6d7fdfd1082,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-08-14,00:34:30,3310,  public List<TableName> listTableNamesByNamespace(String name) throws IOException {
6d7fdfd1082,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-08-14,00:34:30,3311,    List<TableName> tableNames = Lists.newArrayList();
88d236d364d,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Jean-Daniel Cryans,2013-10-02,17:25:45,3312,    getNamespaceDescriptor(name); // check that namespace exists
6d7fdfd1082,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-08-14,00:34:30,3313,    for (HTableDescriptor descriptor: tableDescriptors.getByNamespace(name).values()) {
dec9876d5fa,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-08-18,17:55:07,3314,      tableNames.add(descriptor.getTableName());
6d7fdfd1082,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-08-14,00:34:30,3315,    }
6d7fdfd1082,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-08-14,00:34:30,3316,    return tableNames;
6d7fdfd1082,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-08-14,00:34:30,3317,  }
6d7fdfd1082,hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java,Andrew Kyle Purtell,2013-08-14,00:34:30,3318,
9cacb67b699,src/java/org/apache/hadoop/hbase/master/HMaster.java,Michael Stack,2010-01-05,06:02:52,3319,}
