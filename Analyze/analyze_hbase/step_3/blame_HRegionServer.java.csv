commit_id,filename,committer,date,time,line_number,code
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,1,/**
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,2, *
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,3, * Licensed to the Apache Software Foundation (ASF) under one
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,4, * or more contributor license agreements.  See the NOTICE file
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,5, * distributed with this work for additional information
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,6, * regarding copyright ownership.  The ASF licenses this file
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,7," * to you under the Apache License, Version 2.0 (the"
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,8," * ""License""); you may not use this file except in compliance"
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,9, * with the License.  You may obtain a copy of the License at
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,10, *
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,11, *     http://www.apache.org/licenses/LICENSE-2.0
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,12, *
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,13," * Unless required by applicable law or agreed to in writing, software"
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,14," * distributed under the License is distributed on an ""AS IS"" BASIS,"
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,15," * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,16, * See the License for the specific language governing permissions and
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,17, * limitations under the License.
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,18, */
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,19,package org.apache.hadoop.hbase.regionserver;
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,20,
53b32742517,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-06-11,18:09:48,21,import java.io.IOException;
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,22,import java.io.InterruptedIOException;
53b32742517,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-06-11,18:09:48,23,import java.lang.Thread.UncaughtExceptionHandler;
7a678034af9,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Todd Lipcon,2011-01-06,19:49:28,24,import java.lang.annotation.Retention;
7a678034af9,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Todd Lipcon,2011-01-06,19:49:28,25,import java.lang.annotation.RetentionPolicy;
53b32742517,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-06-11,18:09:48,26,import java.lang.management.ManagementFactory;
53b32742517,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-06-11,18:09:48,27,import java.lang.management.MemoryUsage;
53b32742517,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-06-11,18:09:48,28,import java.lang.reflect.Constructor;
53b32742517,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-06-11,18:09:48,29,import java.net.BindException;
53b32742517,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-06-11,18:09:48,30,import java.net.InetSocketAddress;
53b32742517,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-06-11,18:09:48,31,import java.util.ArrayList;
53b32742517,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-06-11,18:09:48,32,import java.util.Collection;
53b32742517,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-06-11,18:09:48,33,import java.util.Collections;
53b32742517,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-06-11,18:09:48,34,import java.util.Comparator;
1955d5dfe45,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-12-02,00:00:30,35,import java.util.HashMap;
30f21c3ef44,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-02-23,05:05:30,36,import java.util.HashSet;
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,37,import java.util.Iterator;
53b32742517,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-06-11,18:09:48,38,import java.util.List;
53b32742517,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-06-11,18:09:48,39,import java.util.Map;
307ca7c68b1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-12-09,05:59:34,40,import java.util.Map.Entry;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,41,import java.util.Random;
53b32742517,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-06-11,18:09:48,42,import java.util.Set;
53b32742517,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-06-11,18:09:48,43,import java.util.SortedMap;
53b32742517,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-06-11,18:09:48,44,import java.util.TreeMap;
2c4a2a6c516,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-12-12,04:39:06,45,import java.util.TreeSet;
d8ce8d05063,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2014-03-12,21:33:55,46,import java.util.concurrent.atomic.AtomicLong;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,47,import java.util.concurrent.ConcurrentHashMap;
bbe297121d1,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-08-23,13:48:39,48,import java.util.concurrent.ConcurrentMap;
7e6a6538b4e,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2011-09-21,17:14:32,49,import java.util.concurrent.ConcurrentSkipListMap;
53b32742517,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-06-11,18:09:48,50,import java.util.concurrent.locks.ReentrantReadWriteLock;
53b32742517,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-06-11,18:09:48,51,
04de6764ac1,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-10-03,17:02:23,52,import javax.management.ObjectName;
04de6764ac1,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-10-03,17:02:23,53,
78b7dad2c84,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2014-03-06,01:26:25,54,import com.google.common.annotations.VisibleForTesting;
e0c10338912,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-01-29,20:31:31,55,import com.google.protobuf.HBaseZeroCopyByteString;
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,56,import org.apache.commons.logging.Log;
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,57,import org.apache.commons.logging.LogFactory;
dace419238e,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-03-01,17:53:03,58,import org.apache.hadoop.classification.InterfaceAudience;
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,59,import org.apache.hadoop.conf.Configuration;
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,60,import org.apache.hadoop.fs.FileSystem;
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,61,import org.apache.hadoop.fs.Path;
5a3060ee37c,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Hsieh,2013-08-30,20:31:47,62,import org.apache.hadoop.hbase.Cell;
5fde90f68f2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-03-20,19:36:46,63,import org.apache.hadoop.hbase.CellScannable;
5fde90f68f2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-03-20,19:36:46,64,import org.apache.hadoop.hbase.CellScanner;
5fde90f68f2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-03-20,19:36:46,65,import org.apache.hadoop.hbase.CellUtil;
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,zjushch,2013-03-24,10:26:21,66,import org.apache.hadoop.hbase.Chore;
5a3060ee37c,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Hsieh,2013-08-30,20:31:47,67,import org.apache.hadoop.hbase.ClockOutOfSyncException;
5a3060ee37c,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Hsieh,2013-08-30,20:31:47,68,import org.apache.hadoop.hbase.DoNotRetryIOException;
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,69,import org.apache.hadoop.hbase.HBaseConfiguration;
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,70,import org.apache.hadoop.hbase.HBaseIOException;
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,71,import org.apache.hadoop.hbase.HConstants;
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,72,import org.apache.hadoop.hbase.HRegionInfo;
b0439269fe7,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-06-21,18:31:26,73,import org.apache.hadoop.hbase.HTableDescriptor;
1d2180687a0,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Hsieh,2013-02-14,12:58:12,74,import org.apache.hadoop.hbase.HealthCheckChore;
5a3060ee37c,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Hsieh,2013-08-30,20:31:47,75,import org.apache.hadoop.hbase.KeyValueUtil;
3daea02e860,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-07-30,05:14:32,76,import org.apache.hadoop.hbase.NotServingRegionException;
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,77,import org.apache.hadoop.hbase.RemoteExceptionHandler;
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,78,import org.apache.hadoop.hbase.ServerName;
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,79,import org.apache.hadoop.hbase.Stoppable;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,80,import org.apache.hadoop.hbase.TableDescriptors;
5a3060ee37c,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Hsieh,2013-08-30,20:31:47,81,import org.apache.hadoop.hbase.TableName;
3daea02e860,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-07-30,05:14:32,82,import org.apache.hadoop.hbase.UnknownScannerException;
3daea02e860,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-07-30,05:14:32,83,import org.apache.hadoop.hbase.YouAreDeadException;
4c61d4a9651,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-18,17:44:04,84,import org.apache.hadoop.hbase.ZNodeClearer;
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,85,import org.apache.hadoop.hbase.catalog.CatalogTracker;
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,86,import org.apache.hadoop.hbase.catalog.MetaEditor;
ebc39454501,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,ramkrishna,2011-12-31,18:37:08,87,import org.apache.hadoop.hbase.catalog.MetaReader;
202118d3b50,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,larsh,2011-10-12,21:42:20,88,import org.apache.hadoop.hbase.client.Append;
74ab28497de,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2014-02-10,04:16:34,89,import org.apache.hadoop.hbase.client.ConnectionUtils;
9453a813d0d,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-09-10,00:03:57,90,import org.apache.hadoop.hbase.client.Delete;
6af4292630d,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Ryan Rawson,2009-06-06,01:26:21,91,import org.apache.hadoop.hbase.client.Get;
97f79767551,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Gray,2010-10-26,18:50:13,92,import org.apache.hadoop.hbase.client.Increment;
65059399704,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-07-03,03:53:11,93,import org.apache.hadoop.hbase.client.Mutation;
6af4292630d,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Ryan Rawson,2009-06-06,01:26:21,94,import org.apache.hadoop.hbase.client.Put;
6af4292630d,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Ryan Rawson,2009-06-06,01:26:21,95,import org.apache.hadoop.hbase.client.Result;
30f21c3ef44,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-02-23,05:05:30,96,import org.apache.hadoop.hbase.client.RowMutations;
6af4292630d,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Ryan Rawson,2009-06-06,01:26:21,97,import org.apache.hadoop.hbase.client.Scan;
581421a6b2e,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2011-09-25,03:46:53,98,import org.apache.hadoop.hbase.coprocessor.CoprocessorHost;
64740a5c076,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2014-02-25,00:58:56,99,import org.apache.hadoop.hbase.DroppedSnapshotException;
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,zjushch,2013-03-24,10:26:21,100,import org.apache.hadoop.hbase.exceptions.FailedSanityCheckException;
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,101,import org.apache.hadoop.hbase.exceptions.OperationConflictException;
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,zjushch,2013-03-24,10:26:21,102,import org.apache.hadoop.hbase.exceptions.OutOfOrderScannerNextException;
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,zjushch,2013-03-24,10:26:21,103,import org.apache.hadoop.hbase.exceptions.RegionMovedException;
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,zjushch,2013-03-24,10:26:21,104,import org.apache.hadoop.hbase.exceptions.RegionOpeningException;
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,105,import org.apache.hadoop.hbase.executor.ExecutorService;
24ebbcabc39,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2013-02-25,22:50:17,106,import org.apache.hadoop.hbase.executor.ExecutorType;
1a32bfed457,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-10-22,19:08:23,107,import org.apache.hadoop.hbase.filter.ByteArrayComparable;
82df28fffe7,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Hsieh,2013-02-13,18:43:44,108,import org.apache.hadoop.hbase.filter.CompareFilter.CompareOp;
961455cd9d5,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,mbautin,2012-03-08,22:55:49,109,import org.apache.hadoop.hbase.fs.HFileSystem;
52c4ce5cdd2,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Gray,2011-10-12,04:15:30,110,import org.apache.hadoop.hbase.io.hfile.CacheConfig;
7d411abdfb9,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-12-20,22:21:01,111,import org.apache.hadoop.hbase.io.hfile.HFile;
8ab928b4b3a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-11-29,22:26:40,112,import org.apache.hadoop.hbase.ipc.HBaseRPCErrorHandler;
7fa275407fd,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-07-15,21:38:37,113,import org.apache.hadoop.hbase.ipc.PayloadCarryingRpcController;
aaf04f7ea07,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-09-13,21:18:42,114,import org.apache.hadoop.hbase.ipc.PriorityFunction;
02de8c40d9b,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-08-28,19:59:09,115,import org.apache.hadoop.hbase.ipc.RpcCallContext;
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-03,03:52:15,116,import org.apache.hadoop.hbase.ipc.RpcClient;
8ab928b4b3a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-11-29,22:26:40,117,import org.apache.hadoop.hbase.ipc.RpcServer;
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-03,03:52:15,118,import org.apache.hadoop.hbase.ipc.RpcServer.BlockingServiceAndInterface;
7fa275407fd,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-07-15,21:38:37,119,import org.apache.hadoop.hbase.ipc.RpcServerInterface;
5a3060ee37c,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Hsieh,2013-08-30,20:31:47,120,import org.apache.hadoop.hbase.ipc.ServerNotRunningYetException;
fbfbad4e4d5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Gary Helmling,2012-09-18,06:32:57,121,import org.apache.hadoop.hbase.ipc.ServerRpcController;
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,122,import org.apache.hadoop.hbase.master.SplitLogManager;
5fce119685c,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-03-21,00:26:19,123,import org.apache.hadoop.hbase.master.TableLockManager;
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Hsieh,2014-01-22,01:42:49,124,import org.apache.hadoop.hbase.procedure.RegionServerProcedureManagerHost;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,125,import org.apache.hadoop.hbase.protobuf.ProtobufUtil;
c310653a19c,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-09-06,17:22:01,126,import org.apache.hadoop.hbase.protobuf.RequestConverter;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,127,import org.apache.hadoop.hbase.protobuf.ResponseConverter;
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-03,03:52:15,128,import org.apache.hadoop.hbase.protobuf.generated.AdminProtos;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,129,import org.apache.hadoop.hbase.protobuf.generated.AdminProtos.CloseRegionRequest;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,130,import org.apache.hadoop.hbase.protobuf.generated.AdminProtos.CloseRegionResponse;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,131,import org.apache.hadoop.hbase.protobuf.generated.AdminProtos.CompactRegionRequest;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,132,import org.apache.hadoop.hbase.protobuf.generated.AdminProtos.CompactRegionResponse;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,133,import org.apache.hadoop.hbase.protobuf.generated.AdminProtos.FlushRegionRequest;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,134,import org.apache.hadoop.hbase.protobuf.generated.AdminProtos.FlushRegionResponse;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,135,import org.apache.hadoop.hbase.protobuf.generated.AdminProtos.GetOnlineRegionRequest;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,136,import org.apache.hadoop.hbase.protobuf.generated.AdminProtos.GetOnlineRegionResponse;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,137,import org.apache.hadoop.hbase.protobuf.generated.AdminProtos.GetRegionInfoRequest;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,138,import org.apache.hadoop.hbase.protobuf.generated.AdminProtos.GetRegionInfoResponse;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,139,import org.apache.hadoop.hbase.protobuf.generated.AdminProtos.GetServerInfoRequest;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,140,import org.apache.hadoop.hbase.protobuf.generated.AdminProtos.GetServerInfoResponse;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,141,import org.apache.hadoop.hbase.protobuf.generated.AdminProtos.GetStoreFileRequest;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,142,import org.apache.hadoop.hbase.protobuf.generated.AdminProtos.GetStoreFileResponse;
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,zjushch,2013-03-24,10:26:21,143,import org.apache.hadoop.hbase.protobuf.generated.AdminProtos.MergeRegionsRequest;
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,zjushch,2013-03-24,10:26:21,144,import org.apache.hadoop.hbase.protobuf.generated.AdminProtos.MergeRegionsResponse;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,145,import org.apache.hadoop.hbase.protobuf.generated.AdminProtos.OpenRegionRequest;
a5bd102cd8b,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2012-10-20,03:57:49,146,import org.apache.hadoop.hbase.protobuf.generated.AdminProtos.OpenRegionRequest.RegionOpenInfo;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,147,import org.apache.hadoop.hbase.protobuf.generated.AdminProtos.OpenRegionResponse;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,148,import org.apache.hadoop.hbase.protobuf.generated.AdminProtos.OpenRegionResponse.RegionOpeningState;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,149,import org.apache.hadoop.hbase.protobuf.generated.AdminProtos.ReplicateWALEntryRequest;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,150,import org.apache.hadoop.hbase.protobuf.generated.AdminProtos.ReplicateWALEntryResponse;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,151,import org.apache.hadoop.hbase.protobuf.generated.AdminProtos.RollWALWriterRequest;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,152,import org.apache.hadoop.hbase.protobuf.generated.AdminProtos.RollWALWriterResponse;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,153,import org.apache.hadoop.hbase.protobuf.generated.AdminProtos.SplitRegionRequest;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,154,import org.apache.hadoop.hbase.protobuf.generated.AdminProtos.SplitRegionResponse;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,155,import org.apache.hadoop.hbase.protobuf.generated.AdminProtos.StopServerRequest;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,156,import org.apache.hadoop.hbase.protobuf.generated.AdminProtos.StopServerResponse;
b936444e348,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-08-27,22:12:21,157,import org.apache.hadoop.hbase.protobuf.generated.AdminProtos.UpdateFavoredNodesRequest;
b936444e348,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-08-27,22:12:21,158,import org.apache.hadoop.hbase.protobuf.generated.AdminProtos.UpdateFavoredNodesResponse;
04de6764ac1,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-10-03,17:02:23,159,import org.apache.hadoop.hbase.protobuf.generated.AdminProtos.WALEntry;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,160,import org.apache.hadoop.hbase.protobuf.generated.ClientProtos;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,161,import org.apache.hadoop.hbase.protobuf.generated.ClientProtos.BulkLoadHFileRequest;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,162,import org.apache.hadoop.hbase.protobuf.generated.ClientProtos.BulkLoadHFileRequest.FamilyPath;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,163,import org.apache.hadoop.hbase.protobuf.generated.ClientProtos.BulkLoadHFileResponse;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,164,import org.apache.hadoop.hbase.protobuf.generated.ClientProtos.Condition;
82df28fffe7,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Hsieh,2013-02-13,18:43:44,165,import org.apache.hadoop.hbase.protobuf.generated.ClientProtos.CoprocessorServiceRequest;
82df28fffe7,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Hsieh,2013-02-13,18:43:44,166,import org.apache.hadoop.hbase.protobuf.generated.ClientProtos.CoprocessorServiceResponse;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,167,import org.apache.hadoop.hbase.protobuf.generated.ClientProtos.GetRequest;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,168,import org.apache.hadoop.hbase.protobuf.generated.ClientProtos.GetResponse;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,169,import org.apache.hadoop.hbase.protobuf.generated.ClientProtos.MultiRequest;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,170,import org.apache.hadoop.hbase.protobuf.generated.ClientProtos.MultiResponse;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,171,import org.apache.hadoop.hbase.protobuf.generated.ClientProtos.MutateRequest;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,172,import org.apache.hadoop.hbase.protobuf.generated.ClientProtos.MutateResponse;
5fde90f68f2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-03-20,19:36:46,173,import org.apache.hadoop.hbase.protobuf.generated.ClientProtos.MutationProto;
d20edb96dc4,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2013-08-06,20:10:37,174,import org.apache.hadoop.hbase.protobuf.generated.ClientProtos.MutationProto.MutationType;
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,175,import org.apache.hadoop.hbase.protobuf.generated.ClientProtos.RegionAction;
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,176,import org.apache.hadoop.hbase.protobuf.generated.ClientProtos.RegionActionResult;
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,177,import org.apache.hadoop.hbase.protobuf.generated.ClientProtos.ResultOrException;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,178,import org.apache.hadoop.hbase.protobuf.generated.ClientProtos.ScanRequest;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,179,import org.apache.hadoop.hbase.protobuf.generated.ClientProtos.ScanResponse;
87812311328,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-06-22,00:15:11,180,import org.apache.hadoop.hbase.protobuf.generated.ClusterStatusProtos;
7fa275407fd,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-07-15,21:38:37,181,import org.apache.hadoop.hbase.protobuf.generated.ClusterStatusProtos.RegionLoad;
d9303244482,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2012-09-24,20:33:19,182,import org.apache.hadoop.hbase.protobuf.generated.HBaseProtos.Coprocessor;
d9303244482,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2012-09-24,20:33:19,183,import org.apache.hadoop.hbase.protobuf.generated.HBaseProtos.NameStringPair;
7ea071db1ff,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-12-17,04:35:59,184,import org.apache.hadoop.hbase.protobuf.generated.HBaseProtos.RegionServerInfo;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,185,import org.apache.hadoop.hbase.protobuf.generated.HBaseProtos.RegionSpecifier;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,186,import org.apache.hadoop.hbase.protobuf.generated.HBaseProtos.RegionSpecifier.RegionSpecifierType;
aaf04f7ea07,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-09-13,21:18:42,187,import org.apache.hadoop.hbase.protobuf.generated.RPCProtos.RequestHeader;
d9303244482,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2012-09-24,20:33:19,188,import org.apache.hadoop.hbase.protobuf.generated.RegionServerStatusProtos.GetLastFlushedSequenceIdRequest;
d9303244482,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2012-09-24,20:33:19,189,import org.apache.hadoop.hbase.protobuf.generated.RegionServerStatusProtos.RegionServerReportRequest;
d9303244482,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2012-09-24,20:33:19,190,import org.apache.hadoop.hbase.protobuf.generated.RegionServerStatusProtos.RegionServerStartupRequest;
d9303244482,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2012-09-24,20:33:19,191,import org.apache.hadoop.hbase.protobuf.generated.RegionServerStatusProtos.RegionServerStartupResponse;
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-03,03:52:15,192,import org.apache.hadoop.hbase.protobuf.generated.RegionServerStatusProtos.RegionServerStatusService;
d9303244482,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2012-09-24,20:33:19,193,import org.apache.hadoop.hbase.protobuf.generated.RegionServerStatusProtos.ReportRSFatalErrorRequest;
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,194,import org.apache.hadoop.hbase.regionserver.HRegion.Operation;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,195,import org.apache.hadoop.hbase.regionserver.Leases.LeaseStillHeldException;
5ccadb10ba8,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-08-27,04:26:03,196,import org.apache.hadoop.hbase.regionserver.compactions.CompactionProgress;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,197,import org.apache.hadoop.hbase.regionserver.handler.CloseMetaHandler;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,198,import org.apache.hadoop.hbase.regionserver.handler.CloseRegionHandler;
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,199,import org.apache.hadoop.hbase.regionserver.handler.OpenMetaHandler;
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,200,import org.apache.hadoop.hbase.regionserver.handler.OpenRegionHandler;
15fc0d66c6b,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jean-Daniel Cryans,2009-10-19,22:33:23,201,import org.apache.hadoop.hbase.regionserver.wal.HLog;
1a32bfed457,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-10-22,19:08:23,202,import org.apache.hadoop.hbase.regionserver.wal.HLogFactory;
f67903e4d6a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-09-26,21:16:33,203,import org.apache.hadoop.hbase.regionserver.wal.HLogKey;
266e1791d13,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-09-30,05:13:03,204,import org.apache.hadoop.hbase.regionserver.wal.HLogSplitter;
82df28fffe7,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Hsieh,2013-02-13,18:43:44,205,import org.apache.hadoop.hbase.regionserver.wal.HLogUtil;
1185c6c89c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2011-08-09,04:39:34,206,import org.apache.hadoop.hbase.regionserver.wal.WALActionsListener;
f67903e4d6a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-09-26,21:16:33,207,import org.apache.hadoop.hbase.regionserver.wal.WALEdit;
e5e5dac9a71,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jyates,2013-10-30,00:02:52,208,import org.apache.hadoop.hbase.security.UserProvider;
5c2a90aa28c,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2013-08-14,23:20:51,209,import org.apache.hadoop.hbase.trace.SpanReceiverHost;
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,210,import org.apache.hadoop.hbase.util.Bytes;
5deb69715c9,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Ryan Rawson,2010-10-23,00:39:14,211,import org.apache.hadoop.hbase.util.CompressionTest;
a1a5f57bffc,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2014-03-14,23:20:14,212,import org.apache.hadoop.hbase.util.Counter;
66ca4976a8a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Gray,2010-11-10,04:53:20,213,import org.apache.hadoop.hbase.util.EnvironmentEdgeManager;
b0439269fe7,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-06-21,18:31:26,214,import org.apache.hadoop.hbase.util.FSTableDescriptors;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,215,import org.apache.hadoop.hbase.util.FSUtils;
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,216,import org.apache.hadoop.hbase.util.InfoServer;
b6ad121cb9a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,ndimiduk,2013-09-24,22:11:09,217,import org.apache.hadoop.hbase.util.JvmPauseMonitor;
18a53dfd6b3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Todd Lipcon,2010-06-13,18:54:25,218,import org.apache.hadoop.hbase.util.Pair;
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,219,import org.apache.hadoop.hbase.util.Sleeper;
f4ea4f4f07d,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-04-10,16:14:18,220,import org.apache.hadoop.hbase.util.Strings;
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,221,import org.apache.hadoop.hbase.util.Threads;
74eb4dd8b38,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-06-14,21:20:14,222,import org.apache.hadoop.hbase.util.VersionInfo;
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,223,import org.apache.hadoop.hbase.zookeeper.ClusterStatusTracker;
4cc08fa5d61,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-04-06,19:05:42,224,import org.apache.hadoop.hbase.zookeeper.MasterAddressTracker;
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,zjushch,2013-03-24,10:26:21,225,import org.apache.hadoop.hbase.zookeeper.MetaRegionTracker;
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,226,import org.apache.hadoop.hbase.zookeeper.RecoveringRegionWatcher;
24fa6e4fbe1,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-09-07,06:47:34,227,import org.apache.hadoop.hbase.zookeeper.ZKClusterId;
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,228,import org.apache.hadoop.hbase.zookeeper.ZKUtil;
899b7093d68,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jean-Daniel Cryans,2010-11-23,21:31:18,229,import org.apache.hadoop.hbase.zookeeper.ZooKeeperNodeTracker;
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,230,import org.apache.hadoop.hbase.zookeeper.ZooKeeperWatcher;
66ca4976a8a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Gray,2010-11-10,04:53:20,231,import org.apache.hadoop.ipc.RemoteException;
d7050d3541d,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-02-24,21:06:12,232,import org.apache.hadoop.metrics.util.MBeanUtil;
3c35c00cf96,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jean-Daniel Cryans,2009-05-04,18:30:49,233,import org.apache.hadoop.net.DNS;
307ca7c68b1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-12-09,05:59:34,234,import org.apache.hadoop.util.ReflectionUtils;
19402cd8143,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-05-19,22:00:27,235,import org.apache.hadoop.util.StringUtils;
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,236,import org.apache.zookeeper.KeeperException;
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,237,import org.apache.zookeeper.data.Stat;
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,238,
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-03,03:52:15,239,import com.google.protobuf.BlockingRpcChannel;
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-03,06:20:26,240,import com.google.protobuf.ByteString;
82df28fffe7,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Hsieh,2013-02-13,18:43:44,241,import com.google.protobuf.Message;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,242,import com.google.protobuf.RpcController;
d9303244482,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2012-09-24,20:33:19,243,import com.google.protobuf.ServiceException;
5fde90f68f2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-03-20,19:36:46,244,import com.google.protobuf.TextFormat;
8ab928b4b3a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-11-29,22:26:40,245,
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,246,/**
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,247, * HRegionServer makes a set of HRegions available to clients. It checks in with
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,248, * the HMaster. There are many HRegionServers in a single HBase deployment.
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,249, */
dace419238e,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-03-01,17:53:03,250,@InterfaceAudience.Private
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,251,"@SuppressWarnings(""deprecation"")"
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-03,03:52:15,252,"public class HRegionServer implements ClientProtos.ClientService.BlockingInterface,"
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-03,03:52:15,253,"  AdminProtos.AdminService.BlockingInterface, Runnable, RegionServerServices,"
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-03,03:52:15,254,"  HBaseRPCErrorHandler, LastSequenceId {"
7e6a6538b4e,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2011-09-21,17:14:32,255,
8e95593f42c,core/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-05-14,22:35:48,256,  public static final Log LOG = LogFactory.getLog(HRegionServer.class);
19b01d968d3,core/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-04-30,06:52:27,257,
b65d39bc9dc,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-04-25,17:50:17,258,  private final Random rand;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,259,
d8ce8d05063,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2014-03-12,21:33:55,260,  private final AtomicLong scannerIdGen = new AtomicLong(0L);
d8ce8d05063,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2014-03-12,21:33:55,261,
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,262,  /*
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,263,   * Strings to be used in forming the exception message for
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,264,   * RegionsAlreadyInTransitionException.
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,265,   */
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,266,"  protected static final String OPEN = ""OPEN"";"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,267,"  protected static final String CLOSE = ""CLOSE"";"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,268,
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,269,  //RegionName vs current action in progress
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,270,  //true - if open region action in progress
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,271,  //false - if close region action in progress
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,272,"  protected final ConcurrentMap<byte[], Boolean> regionsInTransitionInRS ="
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,273,"    new ConcurrentSkipListMap<byte[], Boolean>(Bytes.BYTES_COMPARATOR);"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,274,
aaf04f7ea07,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-09-13,21:18:42,275,  /** RPC scheduler to use for the region server. */
aaf04f7ea07,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-09-13,21:18:42,276,  public static final String REGION_SERVER_RPC_SCHEDULER_FACTORY_CLASS =
aaf04f7ea07,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-09-13,21:18:42,277,"      ""hbase.region.server.rpc.scheduler.factory.class"";"
aaf04f7ea07,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-09-13,21:18:42,278,
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,279,  protected long maxScannerResultSize;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,280,
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,281,  // Cache flushing
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,282,  protected MemStoreFlusher cacheFlusher;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,283,
c56d41dc3d5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,anoopsamjohn,2013-12-11,07:03:40,284,  protected HeapMemoryManager hMemManager;
c56d41dc3d5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,anoopsamjohn,2013-12-11,07:03:40,285,
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,286,  // catalog tracker
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,287,  protected CatalogTracker catalogTracker;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,288,
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,289,  // Watch if a region is out of recovering state from ZooKeeper
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,290,"  @SuppressWarnings(""unused"")"
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,291,  private RecoveringRegionWatcher recoveringRegionWatcher;
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,292,
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,293,  /**
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,294,   * Go here to get table descriptors.
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,295,   */
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,296,  protected TableDescriptors tableDescriptors;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,297,
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,298,"  // Replication services. If no replication, this handler will be null."
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,299,  protected ReplicationSourceService replicationSourceHandler;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,300,  protected ReplicationSinkService replicationSinkHandler;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,301,
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,302,  // Compactions
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,303,  public CompactSplitThread compactSplitThread;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,304,
c9073c46319,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-10-25,16:43:22,305,"  final ConcurrentHashMap<String, RegionScannerHolder> scanners ="
c9073c46319,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-10-25,16:43:22,306,"      new ConcurrentHashMap<String, RegionScannerHolder>();"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,307,
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,308,  /**
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,309,   * Map of regions currently being served by this region server. Key is the
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,310,   * encoded region name.  All access should be synchronized.
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,311,   */
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,312,"  protected final Map<String, HRegion> onlineRegions ="
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,313,"    new ConcurrentHashMap<String, HRegion>();"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,314,
7a7ab8b8da7,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-05-12,06:47:39,315,  /**
7a7ab8b8da7,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-05-12,06:47:39,316,   * Map of encoded region names to the DataNode locations they should be hosted on
7a7ab8b8da7,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-05-12,06:47:39,317,   * We store the value as InetSocketAddress since this is used only in HDFS
7a7ab8b8da7,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-05-12,06:47:39,318,   * API (create() that takes favored nodes as hints for placing file blocks).
7a7ab8b8da7,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-05-12,06:47:39,319,"   * We could have used ServerName here as the value class, but we\'d need to"
7a7ab8b8da7,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-05-12,06:47:39,320,"   * convert it to InetSocketAddress at some point before the HDFS API call, and"
7a7ab8b8da7,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-05-12,06:47:39,321,   * it seems a bit weird to store ServerName since ServerName refers to RegionServers
7a7ab8b8da7,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-05-12,06:47:39,322,   * and here we really mean DataNode locations.
7a7ab8b8da7,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-05-12,06:47:39,323,   */
7a7ab8b8da7,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-05-12,06:47:39,324,"  protected final Map<String, InetSocketAddress[]> regionFavoredNodesMap ="
7a7ab8b8da7,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-05-12,06:47:39,325,"      new ConcurrentHashMap<String, InetSocketAddress[]>();"
93b92713e03,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-23,22:02:38,326,
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,327,  /**
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,328,   * Set of regions currently being in recovering state which means it can accept writes(edits from
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,329,   * previous failed region server) but not reads. A recovering region is also an online region.
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,330,   */
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,331,"  protected final Map<String, HRegion> recoveringRegions = Collections"
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,332,"      .synchronizedMap(new HashMap<String, HRegion>());"
7a7ab8b8da7,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-05-12,06:47:39,333,
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,334,  // Leases
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,335,  protected Leases leases;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,336,
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,337,  // Instance of the hbase executor service.
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,338,  protected ExecutorService service;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,339,
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2012-11-06,23:22:01,340,  // Request counter. (Includes requests that are not serviced by regions.)
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2012-11-06,23:22:01,341,  final Counter requestCount = new Counter();
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,342,
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,343,"  // If false, the file system has become unavailable"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,344,  protected volatile boolean fsOk;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,345,  protected HFileSystem fs;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,346,
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,347,  // Set when a report to the master comes back with a message asking us to
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,348,  // shutdown. Also set by call to stop when debugging or running unit tests
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,349,  // of HRegionServer in isolation.
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,350,  protected volatile boolean stopped = false;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,351,
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,352,  // Go down hard. Used if file system becomes unavailable and also in
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,353,  // debugging and unit tests.
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,354,  protected volatile boolean abortRequested;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,355,
7ea071db1ff,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-12-17,04:35:59,356,  // region server static info like info port
7ea071db1ff,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-12-17,04:35:59,357,  private RegionServerInfo.Builder rsInfo;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,358,
bbe297121d1,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-08-23,13:48:39,359,"  ConcurrentMap<String, Integer> rowlocks = new ConcurrentHashMap<String, Integer>();"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,360,
5f2c693b59c,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-11-05,22:59:49,361,  // A state before we go into stopped state.  At this stage we\'re closing user
5f2c693b59c,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-11-05,22:59:49,362,  // space regions.
5f2c693b59c,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-11-05,22:59:49,363,  private boolean stopping = false;
5f2c693b59c,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-11-05,22:59:49,364,
479c53423c9,core/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-05-08,06:27:15,365,  private volatile boolean killed = false;
479c53423c9,core/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-05-08,06:27:15,366,
3339e94e8d7,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2009-12-31,20:44:31,367,  protected final Configuration conf;
f5ded907808,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-10-16,19:45:17,368,
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,369,  private Path rootDir;
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,370,
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,371,  protected final ReentrantReadWriteLock lock = new ReentrantReadWriteLock();
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,372,
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,373,  final int numRetries;
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,374,  protected final int threadWakeFrequency;
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,375,  private final int msgInterval;
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,376,
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,377,  protected final int numRegionsToReport;
95ed506323a,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-01-04,23:05:13,378,
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-03,03:52:15,379,  // Stub to do region server status calls against the master.
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-03,03:52:15,380,  private RegionServerStatusService.BlockingInterface rssStub;
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-03,03:52:15,381,  // RPC client. Used to make the stub above that does region server status checking.
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-03,03:52:15,382,  RpcClient rpcClient;
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,383,
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,384,  // Server to handle client requests. Default access so can be accessed by
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,385,  // unit tests.
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-03,03:52:15,386,  RpcServerInterface rpcServer;
da18540ea37,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Gary Helmling,2013-01-18,23:32:39,387,
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,388,  private final InetSocketAddress isa;
9575f0f0a0a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-01-14,21:43:31,389,  private UncaughtExceptionHandler uncaughtExceptionHandler;
19b01d968d3,core/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-04-30,06:52:27,390,
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,391,  // Info server. Default access so can be used by unit tests. REGIONSERVER
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,392,  // is name of the webapp and the attribute name used stuffing this instance
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,393,  // into web context.
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,394,  InfoServer infoServer;
b6ad121cb9a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,ndimiduk,2013-09-24,22:11:09,395,  private JvmPauseMonitor pauseMonitor;
e06e00450ef,core/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-05-07,19:26:45,396,
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,397,  /** region server process name */
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,398,"  public static final String REGIONSERVER = ""regionserver"";"
1793a0bbcd5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-12-21,04:29:43,399,
2c6948780bb,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-07-11,14:06:20,400,  /** region server configuration name */
2c6948780bb,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-07-11,14:06:20,401,"  public static final String REGIONSERVER_CONF = ""regionserver_conf"";"
e06e00450ef,core/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-05-07,19:26:45,402,
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2012-11-06,23:22:01,403,  private MetricsRegionServer metricsRegionServer;
5c2a90aa28c,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2013-08-14,23:20:51,404,  private SpanReceiverHost spanReceiverHost;
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,405,
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,406,  /*
19402cd8143,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-05-19,22:00:27,407,   * Check for compactions requests.
79be2d87f7a,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2008-11-15,00:36:27,408,   */
19402cd8143,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-05-19,22:00:27,409,  Chore compactionChecker;
79be2d87f7a,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2008-11-15,00:36:27,410,
b65d39bc9dc,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-04-25,17:50:17,411,  /*
b65d39bc9dc,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-04-25,17:50:17,412,   * Check for flushes
b65d39bc9dc,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-04-25,17:50:17,413,   */
b65d39bc9dc,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-04-25,17:50:17,414,  Chore periodicFlusher;
b65d39bc9dc,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-04-25,17:50:17,415,
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,416,  // HLog and HLog roller. log is protected rather than private to avoid
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,417,  // eclipse warning when accessed by inner classes
cff0b8bb04d,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2009-05-16,06:10:44,418,  protected volatile HLog hlog;
9575f0f0a0a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-01-14,21:43:31,419,  // The meta updates are written to a different hlog. If this
9575f0f0a0a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-01-14,21:43:31,420,"  // regionserver holds meta regions, then this field will be non-null."
9575f0f0a0a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-01-14,21:43:31,421,  protected volatile HLog hlogForMeta;
9575f0f0a0a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-01-14,21:43:31,422,
cff0b8bb04d,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2009-05-16,06:10:44,423,  LogRoller hlogRoller;
9575f0f0a0a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-01-14,21:43:31,424,  LogRoller metaHLogRoller;
c4aa758efe2,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2008-12-26,23:23:04,425,
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,426,  // flag set after we\'re done setting up server threads (used for testing)
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,427,  protected volatile boolean isOnline;
19a798b8774,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2008-11-25,23:43:37,428,
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,429,  // zookeeper connection and watcher
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,430,  private ZooKeeperWatcher zooKeeper;
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,431,
6b2437de2cc,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2014-03-14,03:02:21,432,  // master address tracker
6b2437de2cc,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2014-03-14,03:02:21,433,  private MasterAddressTracker masterAddressTracker;
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,434,
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,435,  // Cluster Status Tracker
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,436,  private ClusterStatusTracker clusterStatusTracker;
f591f1dba61,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2009-01-30,01:20:05,437,
04ac5314bdb,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-18,17:16:15,438,  // Log Splitting Worker
04ac5314bdb,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-18,17:16:15,439,  private SplitLogWorker splitLogWorker;
04ac5314bdb,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-18,17:16:15,440,
398b5f20ab3,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2009-04-03,01:24:45,441,  // A sleeper that sleeps for msgInterval.
398b5f20ab3,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2009-04-03,01:24:45,442,  private final Sleeper sleeper;
398b5f20ab3,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2009-04-03,01:24:45,443,
21ddb60dc0a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-25,16:28:57,444,  private final int operationTimeout;
e0ac9731ca1,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2009-04-29,22:51:27,445,
ed64718369b,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-04,18:33:55,446,  private final RegionServerAccounting regionServerAccounting;
95dc02182e6,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-06-28,23:37:03,447,
52c4ce5cdd2,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Gray,2011-10-12,04:15:30,448,  // Cache configuration and block cache reference
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2012-11-06,23:22:01,449,  final CacheConfig cacheConfig;
52c4ce5cdd2,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Gray,2011-10-12,04:15:30,450,
a1079157eca,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2013-01-03,02:12:24,451,  /** The health check chore. */
a1079157eca,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2013-01-03,02:12:24,452,  private HealthCheckChore healthCheckChore;
a1079157eca,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2013-01-03,02:12:24,453,
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,454,  /** The nonce manager chore. */
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,455,  private Chore nonceManagerChore;
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,456,
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,457,  /**
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,458,   * The server name the Master sees us as.  Its made from the hostname the
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,459,"   * master passes us, port, and server startcode. Gets set after registration"
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,460,   * against  Master.  The hostname can differ from the hostname in {@link #isa}
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,461,   * but usually doesn\'t if both servers resolve .
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,462,   */
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,463,  private ServerName serverNameFromMasterPOV;
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,464,
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,465,  /**
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,466,   * This servers startcode.
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,467,   */
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,468,  private final long startcode;
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,469,
d45cbcac1af,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Gary Helmling,2013-03-13,00:38:19,470,  /**
d45cbcac1af,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Gary Helmling,2013-03-13,00:38:19,471,   * Unique identifier for the cluster we are a part of.
d45cbcac1af,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Gary Helmling,2013-03-13,00:38:19,472,   */
d45cbcac1af,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Gary Helmling,2013-03-13,00:38:19,473,  private String clusterId;
d45cbcac1af,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Gary Helmling,2013-03-13,00:38:19,474,
d7050d3541d,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-02-24,21:06:12,475,  /**
d7050d3541d,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-02-24,21:06:12,476,   * MX Bean for RegionServerInfo
d7050d3541d,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-02-24,21:06:12,477,   */
d7050d3541d,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-02-24,21:06:12,478,  private ObjectName mxBean = null;
d7050d3541d,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-02-24,21:06:12,479,
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,480,  /**
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,481,   * Chore to clean periodically the moved region list
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,482,   */
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,483,  private MovedRegionsCleaner movedRegionsCleaner;
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,484,
9214f95cf4e,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-06-27,04:59:27,485,  /**
9214f95cf4e,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-06-27,04:59:27,486,   * The lease timeout period for client scanners (milliseconds).
9214f95cf4e,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-06-27,04:59:27,487,   */
9214f95cf4e,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-06-27,04:59:27,488,  private final int scannerLeaseTimeoutPeriod;
9214f95cf4e,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-06-27,04:59:27,489,
3550392d4ef,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-08-19,21:47:21,490,  /**
aaf04f7ea07,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-09-13,21:18:42,491,   * The reference to the priority extraction function
3550392d4ef,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-08-19,21:47:21,492,   */
aaf04f7ea07,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-09-13,21:18:42,493,  private final PriorityFunction priority;
1793a0bbcd5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-12-21,04:29:43,494,
1ef06216950,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2012-12-14,21:12:36,495,  private RegionServerCoprocessorHost rsHost;
3550392d4ef,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-08-19,21:47:21,496,
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Hsieh,2014-01-22,01:42:49,497,  private RegionServerProcedureManagerHost rspmHost;
93b92713e03,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-23,22:02:38,498,
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,499,  // configuration setting on if replay WAL edits directly to another RS
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,500,  private final boolean distributedLogReplay;
82df28fffe7,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Hsieh,2013-02-13,18:43:44,501,
5fce119685c,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-03-21,00:26:19,502,  // Table level lock manager for locking for region operations
5fce119685c,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-03-21,00:26:19,503,  private TableLockManager tableLockManager;
5fce119685c,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-03-21,00:26:19,504,
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,505,  /**
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,506,   * Nonce manager. Nonces are used to make operations like increment and append idempotent
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,507,   * in the case where client doesn\'t receive the response from a successful operation and
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,508,   * retries. We track the successful ops for some time via a nonce sent by client and handle
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,509,"   * duplicate operations (currently, by failing them; in future we might use MVCC to return"
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,510,"   * result). Nonces are also recovered from WAL during, recovery; however, the caveats (from"
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,511,   * HBASE-3787) are:
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,512,"   * - WAL recovery is optimized, and under high load we won\'t read nearly nonce-timeout worth"
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,513,"   *   of past records. If we don\'t read the records, we don\'t read and recover the nonces."
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,514,   *   Some WALs within nonce-timeout at recovery may not even be present due to rolling/cleanup.
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,515,"   * - There\'s no WAL recovery during normal region move, so nonces will not be transfered."
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,516,"   * We can have separate additional ""Nonce WAL"". It will just contain bunch of numbers and"
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,517,"   * won\'t be flushed on main path - because WAL itself also contains nonces, if we only flush"
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,518,"   * it before memstore flush, for a given nonce we will either see it in the WAL (if it was"
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,519,"   * never flushed to disk, it will be part of recovery), or we\'ll see it as part of the nonce"
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,520,"   * log (or both occasionally, which doesn\'t matter). Nonce log file can be deleted after the"
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,521,   * latest nonce in it expired. It can also be recovered during move.
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,522,   */
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,523,  private final ServerNonceManager nonceManager;
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,524,
e5e5dac9a71,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jyates,2013-10-30,00:02:52,525,  private UserProvider userProvider;
e5e5dac9a71,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jyates,2013-10-30,00:02:52,526,
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,527,  /**
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,528,   * Starts a HRegionServer at the default location
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,529,   *
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,530,   * @param conf
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,531,   * @throws IOException
b2bff276abe,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Gray,2010-10-06,21:39:11,532,   * @throws InterruptedException
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,533,   */
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,534,  public HRegionServer(Configuration conf)
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,535,"  throws IOException, InterruptedException {"
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,536,    this.fsOk = true;
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,537,    this.conf = conf;
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,538,    this.isOnline = false;
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,539,    checkCodecs(this.conf);
e5e5dac9a71,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jyates,2013-10-30,00:02:52,540,    this.userProvider = UserProvider.instantiate(conf);
5deb69715c9,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Ryan Rawson,2010-10-23,00:39:14,541,
871792162eb,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-11-26,21:42:51,542,    FSUtils.setupShortCircuitRead(this.conf);
d88cfcae758,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jean-Daniel Cryans,2013-08-07,23:15:18,543,
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,544,    // Config\'ed params
a0e51bc4da6,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2013-06-28,14:59:51,545,"    this.numRetries = this.conf.getInt(HConstants.HBASE_CLIENT_RETRIES_NUMBER,"
a0e51bc4da6,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2013-06-28,14:59:51,546,        HConstants.DEFAULT_HBASE_CLIENT_RETRIES_NUMBER);
5fde90f68f2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-03-20,19:36:46,547,"    this.threadWakeFrequency = conf.getInt(HConstants.THREAD_WAKE_FREQUENCY, 10 * 1000);"
88d2b70c853,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-11-23,23:13:47,548,"    this.msgInterval = conf.getInt(""hbase.regionserver.msginterval"", 3 * 1000);"
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,549,
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,550,"    this.sleeper = new Sleeper(this.msgInterval, this);"
398b5f20ab3,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2009-04-03,01:24:45,551,
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,552,"    boolean isNoncesEnabled = conf.getBoolean(HConstants.HBASE_RS_NONCES_ENABLED, true);"
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,553,    this.nonceManager = isNoncesEnabled ? new ServerNonceManager(this.conf) : null;
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,554,
95ed506323a,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-01-04,23:05:13,555,    this.maxScannerResultSize = conf.getLong(
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,556,"      HConstants.HBASE_CLIENT_SCANNER_MAX_RESULT_SIZE_KEY,"
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,557,      HConstants.DEFAULT_HBASE_CLIENT_SCANNER_MAX_RESULT_SIZE);
135daf0c41d,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2009-05-11,20:21:59,558,
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,559,    this.numRegionsToReport = conf.getInt(
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,560,"      ""hbase.regionserver.numregionstoreport"", 10);"
135daf0c41d,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2009-05-11,20:21:59,561,
21ddb60dc0a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-25,16:28:57,562,    this.operationTimeout = conf.getInt(
41bf91e43d1,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,larsh,2013-08-13,04:06:21,563,"      HConstants.HBASE_RPC_SHORTOPERATION_TIMEOUT_KEY,"
41bf91e43d1,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,larsh,2013-08-13,04:06:21,564,      HConstants.DEFAULT_HBASE_RPC_SHORTOPERATION_TIMEOUT);
135daf0c41d,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2009-05-11,20:21:59,565,
b2bff276abe,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Gray,2010-10-06,21:39:11,566,    this.abortRequested = false;
b2bff276abe,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Gray,2010-10-06,21:39:11,567,    this.stopped = false;
b2bff276abe,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Gray,2010-10-06,21:39:11,568,
7fa275407fd,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-07-15,21:38:37,569,"    this.scannerLeaseTimeoutPeriod = HBaseConfiguration.getInt(conf,"
7fa275407fd,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-07-15,21:38:37,570,"      HConstants.HBASE_CLIENT_SCANNER_TIMEOUT_PERIOD,"
7fa275407fd,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-07-15,21:38:37,571,"      HConstants.HBASE_REGIONSERVER_LEASE_PERIOD_KEY,"
9214f95cf4e,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-06-27,04:59:27,572,      HConstants.DEFAULT_HBASE_CLIENT_SCANNER_TIMEOUT_PERIOD);
9214f95cf4e,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-06-27,04:59:27,573,
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,574,    // Server to handle client requests.
dccb58a92dc,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jean-Daniel Cryans,2013-03-21,23:51:50,575,"    String hostname = conf.get(""hbase.regionserver.ipc.address"","
dccb58a92dc,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jean-Daniel Cryans,2013-03-21,23:51:50,576,      Strings.domainNamePointerToHostName(DNS.getDefaultHost(
dccb58a92dc,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jean-Daniel Cryans,2013-03-21,23:51:50,577,"        conf.get(""hbase.regionserver.dns.interface"", ""default""),"
dccb58a92dc,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jean-Daniel Cryans,2013-03-21,23:51:50,578,"        conf.get(""hbase.regionserver.dns.nameserver"", ""default""))));"
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,579,"    int port = conf.getInt(HConstants.REGIONSERVER_PORT,"
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,580,      HConstants.DEFAULT_REGIONSERVER_PORT);
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,581,    // Creation of a HSA will force a resolve.
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,582,"    InetSocketAddress initialIsa = new InetSocketAddress(hostname, port);"
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,583,    if (initialIsa.getAddress() == null) {
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,584,"      throw new IllegalArgumentException(""Failed resolve of "" + initialIsa);"
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,585,    }
b65d39bc9dc,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-04-25,17:50:17,586,    this.rand = new Random(initialIsa.hashCode());
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-03,03:52:15,587,"    String name = ""regionserver/"" + initialIsa.toString();"
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-03,03:52:15,588,    // Set how many times to retry talking to another server over HConnection.
74ab28497de,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2014-02-10,04:16:34,589,"    ConnectionUtils.setServerSideHConnectionRetriesConfig(this.conf, name, LOG);"
aaf04f7ea07,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-09-13,21:18:42,590,    this.priority = new AnnotationReadingPriorityFunction(this);
aaf04f7ea07,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-09-13,21:18:42,591,    RpcSchedulerFactory rpcSchedulerFactory;
aaf04f7ea07,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-09-13,21:18:42,592,    try {
aaf04f7ea07,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-09-13,21:18:42,593,      Class<?> rpcSchedulerFactoryClass = conf.getClass(
aaf04f7ea07,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-09-13,21:18:42,594,"          REGION_SERVER_RPC_SCHEDULER_FACTORY_CLASS,"
aaf04f7ea07,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-09-13,21:18:42,595,          SimpleRpcSchedulerFactory.class);
aaf04f7ea07,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-09-13,21:18:42,596,      rpcSchedulerFactory = ((RpcSchedulerFactory) rpcSchedulerFactoryClass.newInstance());
aaf04f7ea07,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-09-13,21:18:42,597,    } catch (InstantiationException e) {
aaf04f7ea07,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-09-13,21:18:42,598,      throw new IllegalArgumentException(e);
aaf04f7ea07,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-09-13,21:18:42,599,    } catch (IllegalAccessException e) {
aaf04f7ea07,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-09-13,21:18:42,600,      throw new IllegalArgumentException(e);
aaf04f7ea07,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-09-13,21:18:42,601,    }
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-03,03:52:15,602,"    this.rpcServer = new RpcServer(this, name, getServices(),"
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-03,03:52:15,603,"      /*HBaseRPCErrorHandler.class, OnlineRegions.class},*/"
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-03,03:52:15,604,"      initialIsa, // BindAddress is IP we got for this server."
aaf04f7ea07,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-09-13,21:18:42,605,"      conf,"
aaf04f7ea07,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-09-13,21:18:42,606,"      rpcSchedulerFactory.create(conf, this));"
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-03,03:52:15,607,
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,608,    // Set our address.
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,609,    this.isa = this.rpcServer.getListenerAddress();
b2bff276abe,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Gray,2010-10-06,21:39:11,610,
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,611,    this.rpcServer.setErrorHandler(this);
c7781e9a37f,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-09-29,17:57:49,612,    this.startcode = System.currentTimeMillis();
4d28e95a618,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Gary Helmling,2011-03-05,01:10:07,613,
47775d321dc,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-12-18,00:55:03,614,    // login the zookeeper client principal (if using security)
47775d321dc,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-12-18,00:55:03,615,"    ZKUtil.loginClient(this.conf, ""hbase.zookeeper.client.keytab.file"","
47775d321dc,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-12-18,00:55:03,616,"      ""hbase.zookeeper.client.kerberos.principal"", this.isa.getHostName());"
47775d321dc,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-12-18,00:55:03,617,
4d28e95a618,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Gary Helmling,2011-03-05,01:10:07,618,    // login the server principal (if using secure Hadoop)
e5e5dac9a71,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jyates,2013-10-30,00:02:52,619,"    userProvider.login(""hbase.regionserver.keytab.file"","
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,620,"      ""hbase.regionserver.kerberos.principal"", this.isa.getHostName());"
ed64718369b,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-04,18:33:55,621,    regionServerAccounting = new RegionServerAccounting();
52c4ce5cdd2,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Gray,2011-10-12,04:15:30,622,    cacheConfig = new CacheConfig(conf);
9575f0f0a0a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-01-14,21:43:31,623,    uncaughtExceptionHandler = new UncaughtExceptionHandler() {
7fa275407fd,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-07-15,21:38:37,624,      @Override
9575f0f0a0a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-01-14,21:43:31,625,"      public void uncaughtException(Thread t, Throwable e) {"
9575f0f0a0a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-01-14,21:43:31,626,"        abort(""Uncaught exception in service thread "" + t.getName(), e);"
9575f0f0a0a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-01-14,21:43:31,627,      }
9575f0f0a0a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-01-14,21:43:31,628,    };
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,629,
7ea071db1ff,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-12-17,04:35:59,630,    this.rsInfo = RegionServerInfo.newBuilder();
7ea071db1ff,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-12-17,04:35:59,631,    // Put up the webui. Webui may come up on port other than configured if
7ea071db1ff,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-12-17,04:35:59,632,    // that port is occupied. Adjust serverInfo if this is the case.
7ea071db1ff,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-12-17,04:35:59,633,    this.rsInfo.setInfoPort(putUpWebUI());
7d411abdfb9,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-12-20,22:21:01,634,    this.distributedLogReplay = HLogSplitter.isDistributedLogReplay(this.conf);
135daf0c41d,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2009-05-11,20:21:59,635,  }
135daf0c41d,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2009-05-11,20:21:59,636,
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-03,03:52:15,637,  /**
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-03,03:52:15,638,   * @return list of blocking services and their security info classes that this server supports
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-03,03:52:15,639,   */
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-03,03:52:15,640,  private List<BlockingServiceAndInterface> getServices() {
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-03,03:52:15,641,    List<BlockingServiceAndInterface> bssi = new ArrayList<BlockingServiceAndInterface>(2);
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-03,03:52:15,642,    bssi.add(new BlockingServiceAndInterface(
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-03,03:52:15,643,"        ClientProtos.ClientService.newReflectiveBlockingService(this),"
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-03,03:52:15,644,        ClientProtos.ClientService.BlockingInterface.class));
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-03,03:52:15,645,    bssi.add(new BlockingServiceAndInterface(
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-03,03:52:15,646,"        AdminProtos.AdminService.newReflectiveBlockingService(this),"
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-03,03:52:15,647,        AdminProtos.AdminService.BlockingInterface.class));
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-03,03:52:15,648,    return bssi;
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-03,03:52:15,649,  }
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-03,03:52:15,650,
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,651,  /**
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,652,   * Run test on configured codecs to make sure supporting libs are in place.
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,653,   * @param c
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,654,   * @throws IOException
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,655,   */
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,656,  private static void checkCodecs(final Configuration c) throws IOException {
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,657,    // check to see if the codec list is available:
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,658,"    String [] codecs = c.getStrings(""hbase.regionserver.codecs"", (String[])null);"
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,659,    if (codecs == null) return;
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,660,    for (String codec : codecs) {
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,661,      if (!CompressionTest.testCompression(codec)) {
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,662,"        throw new IOException(""Compression codec "" + codec +"
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,663,"          "" not supported, aborting RS construction"");"
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,664,      }
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,665,    }
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,666,  }
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,667,
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2012-11-06,23:22:01,668,  String getClusterId() {
d45cbcac1af,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Gary Helmling,2013-03-13,00:38:19,669,    return this.clusterId;
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2012-11-06,23:22:01,670,  }
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2012-11-06,23:22:01,671,
aaf04f7ea07,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-09-13,21:18:42,672,  @Override
aaf04f7ea07,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-09-13,21:18:42,673,"  public int getPriority(RequestHeader header, Message param) {"
aaf04f7ea07,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-09-13,21:18:42,674,"    return priority.getPriority(header, param);"
aaf04f7ea07,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-09-13,21:18:42,675,  }
aaf04f7ea07,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-09-13,21:18:42,676,
7a678034af9,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Todd Lipcon,2011-01-06,19:49:28,677,  @Retention(RetentionPolicy.RUNTIME)
4d04f853083,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-04-13,20:28:21,678,  protected @interface QosPriority {
7a678034af9,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Todd Lipcon,2011-01-06,19:49:28,679,    int priority() default 0;
7a678034af9,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Todd Lipcon,2011-01-06,19:49:28,680,  }
7a678034af9,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Todd Lipcon,2011-01-06,19:49:28,681,
aaf04f7ea07,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-09-13,21:18:42,682,  PriorityFunction getPriority() {
aaf04f7ea07,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-09-13,21:18:42,683,    return priority;
3550392d4ef,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-08-19,21:47:21,684,  }
3550392d4ef,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-08-19,21:47:21,685,
3550392d4ef,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-08-19,21:47:21,686,  RegionScanner getScanner(long scannerId) {
d20edb96dc4,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2013-08-06,20:10:37,687,    String scannerIdString = Long.toString(scannerId);
d20edb96dc4,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2013-08-06,20:10:37,688,    RegionScannerHolder scannerHolder = scanners.get(scannerIdString);
c9073c46319,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-10-25,16:43:22,689,    if (scannerHolder != null) {
d20edb96dc4,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2013-08-06,20:10:37,690,      return scannerHolder.s;
c9073c46319,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-10-25,16:43:22,691,    }
c9073c46319,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-10-25,16:43:22,692,    return null;
3550392d4ef,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-08-19,21:47:21,693,  }
3550392d4ef,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-08-19,21:47:21,694,
135daf0c41d,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2009-05-11,20:21:59,695,  /**
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,696,   * All initialization needed before we go register with Master.
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,697,   *
135daf0c41d,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2009-05-11,20:21:59,698,   * @throws IOException
b2bff276abe,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Gray,2010-10-06,21:39:11,699,   * @throws InterruptedException
135daf0c41d,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2009-05-11,20:21:59,700,   */
996268c26ed,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2011-07-29,06:42:11,701,  private void preRegistrationInitialization(){
71d6b124dda,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-10-09,17:55:33,702,    try {
71d6b124dda,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-10-09,17:55:33,703,      initializeZooKeeper();
71d6b124dda,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-10-09,17:55:33,704,      initializeThreads();
71d6b124dda,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-10-09,17:55:33,705,    } catch (Throwable t) {
71d6b124dda,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-10-09,17:55:33,706,      // Call stop if error or process will stick around for ever since server
71d6b124dda,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-10-09,17:55:33,707,      // puts up non-daemon threads.
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,708,      this.rpcServer.stop();
996268c26ed,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2011-07-29,06:42:11,709,"      abort(""Initialization of RS failed.  Hence aborting RS."", t);"
135daf0c41d,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2009-05-11,20:21:59,710,    }
135daf0c41d,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2009-05-11,20:21:59,711,  }
135daf0c41d,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2009-05-11,20:21:59,712,
58c4f2df98f,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-09-29,22:37:50,713,  /**
58c4f2df98f,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-09-29,22:37:50,714,   * Bring up connection to zk ensemble and then wait until a master for this
58c4f2df98f,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-09-29,22:37:50,715,"   * cluster and then after that, wait until cluster \'up\' flag has been set."
58c4f2df98f,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-09-29,22:37:50,716,   * This is the order in which master does things.
58c4f2df98f,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-09-29,22:37:50,717,   * Finally put up a catalog tracker.
58c4f2df98f,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-09-29,22:37:50,718,   * @throws IOException
58c4f2df98f,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-09-29,22:37:50,719,   * @throws InterruptedException
58c4f2df98f,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-09-29,22:37:50,720,   */
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,721,"  private void initializeZooKeeper() throws IOException, InterruptedException {"
58c4f2df98f,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-09-29,22:37:50,722,    // Open connection to zookeeper and set primary watcher
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,723,"    this.zooKeeper = new ZooKeeperWatcher(conf, REGIONSERVER + "":"" +"
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,724,"      this.isa.getPort(), this);"
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,725,
6b2437de2cc,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2014-03-14,03:02:21,726,"    // Create the master address tracker, register with zk, and start it.  Then"
58c4f2df98f,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-09-29,22:37:50,727,    // block until a master is available.  No point in starting up if no master
58c4f2df98f,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-09-29,22:37:50,728,    // running.
6b2437de2cc,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2014-03-14,03:02:21,729,"    this.masterAddressTracker = new MasterAddressTracker(this.zooKeeper, this);"
6b2437de2cc,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2014-03-14,03:02:21,730,    this.masterAddressTracker.start();
6b2437de2cc,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2014-03-14,03:02:21,731,    blockAndCheckIfStopped(this.masterAddressTracker);
58c4f2df98f,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-09-29,22:37:50,732,
58c4f2df98f,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-09-29,22:37:50,733,    // Wait on cluster being up.  Master will set this flag up in zookeeper
58c4f2df98f,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-09-29,22:37:50,734,    // when ready.
d153ec95da6,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-09-18,00:51:05,735,"    this.clusterStatusTracker = new ClusterStatusTracker(this.zooKeeper, this);"
174248a26f4,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-01-17,17:15:23,736,    this.clusterStatusTracker.start();
899b7093d68,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jean-Daniel Cryans,2010-11-23,21:31:18,737,    blockAndCheckIfStopped(this.clusterStatusTracker);
d153ec95da6,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-09-18,00:51:05,738,
b2bff276abe,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Gray,2010-10-06,21:39:11,739,    // Create the catalog tracker and start it;
ec117ea67de,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,larsh,2013-01-16,22:10:46,740,"    this.catalogTracker = new CatalogTracker(this.zooKeeper, this.conf, this);"
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,741,    catalogTracker.start();
24fa6e4fbe1,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-09-07,06:47:34,742,
24fa6e4fbe1,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-09-07,06:47:34,743,    // Retrieve clusterId
24fa6e4fbe1,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-09-07,06:47:34,744,    // Since cluster status is now up
24fa6e4fbe1,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-09-07,06:47:34,745,    // ID should have already been set by HMaster
24fa6e4fbe1,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-09-07,06:47:34,746,    try {
d45cbcac1af,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Gary Helmling,2013-03-13,00:38:19,747,      clusterId = ZKClusterId.readClusterIdZNode(this.zooKeeper);
24fa6e4fbe1,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-09-07,06:47:34,748,      if (clusterId == null) {
24fa6e4fbe1,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-09-07,06:47:34,749,"        this.abort(""Cluster ID has not been set"");"
24fa6e4fbe1,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-09-07,06:47:34,750,      }
24fa6e4fbe1,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-09-07,06:47:34,751,"      LOG.info(""ClusterId : ""+clusterId);"
24fa6e4fbe1,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-09-07,06:47:34,752,    } catch (KeeperException e) {
24fa6e4fbe1,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-09-07,06:47:34,753,"      this.abort(""Failed to retrieve Cluster ID"",e);"
24fa6e4fbe1,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-09-07,06:47:34,754,    }
82df28fffe7,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Hsieh,2013-02-13,18:43:44,755,
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Hsieh,2014-01-22,01:42:49,756,    // watch for snapshots and other procedures
82df28fffe7,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Hsieh,2013-02-13,18:43:44,757,    try {
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Hsieh,2014-01-22,01:42:49,758,      rspmHost = new RegionServerProcedureManagerHost();
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Hsieh,2014-01-22,01:42:49,759,      rspmHost.loadProcedures(conf);
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Hsieh,2014-01-22,01:42:49,760,      rspmHost.initialize(this);
82df28fffe7,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Hsieh,2013-02-13,18:43:44,761,    } catch (KeeperException e) {
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Hsieh,2014-01-22,01:42:49,762,"      this.abort(""Failed to reach zk cluster when creating procedure handler."", e);"
82df28fffe7,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Hsieh,2013-02-13,18:43:44,763,    }
5fce119685c,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-03-21,00:26:19,764,"    this.tableLockManager = TableLockManager.createTableLockManager(conf, zooKeeper,"
bc7c3c7daaa,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2013-11-20,20:02:25,765,"        ServerName.valueOf(isa.getHostName(), isa.getPort(), startcode));"
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,766,
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,767,    // register watcher for recovering regions
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,768,    if(this.distributedLogReplay) {
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,769,"      this.recoveringRegionWatcher = new RecoveringRegionWatcher(this.zooKeeper, this);"
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,770,    }
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,771,  }
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,772,
899b7093d68,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jean-Daniel Cryans,2010-11-23,21:31:18,773,  /**
899b7093d68,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jean-Daniel Cryans,2010-11-23,21:31:18,774,   * Utilty method to wait indefinitely on a znode availability while checking
899b7093d68,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jean-Daniel Cryans,2010-11-23,21:31:18,775,   * if the region server is shut down
899b7093d68,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jean-Daniel Cryans,2010-11-23,21:31:18,776,   * @param tracker znode tracker to use
899b7093d68,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jean-Daniel Cryans,2010-11-23,21:31:18,777,"   * @throws IOException any IO exception, plus if the RS is stopped"
899b7093d68,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jean-Daniel Cryans,2010-11-23,21:31:18,778,   * @throws InterruptedException
899b7093d68,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jean-Daniel Cryans,2010-11-23,21:31:18,779,   */
899b7093d68,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jean-Daniel Cryans,2010-11-23,21:31:18,780,  private void blockAndCheckIfStopped(ZooKeeperNodeTracker tracker)
899b7093d68,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jean-Daniel Cryans,2010-11-23,21:31:18,781,"      throws IOException, InterruptedException {"
7416d6015be,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2011-09-27,20:49:04,782,"    while (tracker.blockUntilAvailable(this.msgInterval, false) == null) {"
899b7093d68,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jean-Daniel Cryans,2010-11-23,21:31:18,783,      if (this.stopped) {
899b7093d68,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jean-Daniel Cryans,2010-11-23,21:31:18,784,"        throw new IOException(""Received the shutdown message while waiting."");"
899b7093d68,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jean-Daniel Cryans,2010-11-23,21:31:18,785,      }
899b7093d68,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jean-Daniel Cryans,2010-11-23,21:31:18,786,    }
899b7093d68,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jean-Daniel Cryans,2010-11-23,21:31:18,787,  }
899b7093d68,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jean-Daniel Cryans,2010-11-23,21:31:18,788,
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,789,  /**
5f2c693b59c,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-11-05,22:59:49,790,   * @return False if cluster shutdown in progress
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,791,   */
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,792,  private boolean isClusterUp() {
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,793,    return this.clusterStatusTracker.isClusterUp();
135daf0c41d,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2009-05-11,20:21:59,794,  }
135daf0c41d,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2009-05-11,20:21:59,795,
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,796,  private void initializeThreads() throws IOException {
135daf0c41d,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2009-05-11,20:21:59,797,    // Cache flushing thread.
7886526f306,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2009-06-24,19:56:51,798,"    this.cacheFlusher = new MemStoreFlusher(conf, this);"
e06e00450ef,core/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-05-07,19:26:45,799,
135daf0c41d,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2009-05-11,20:21:59,800,    // Compaction thread
135daf0c41d,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2009-05-11,20:21:59,801,    this.compactSplitThread = new CompactSplitThread(this);
e06e00450ef,core/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-05-07,19:26:45,802,
0e9fbc727c8,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-04-30,00:32:31,803,    // Background thread to check for compactions; needed if region has not gotten updates
0e9fbc727c8,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-04-30,00:32:31,804,    // in a while. It will take care of not checking too frequently on store-by-store basis.
0e9fbc727c8,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-04-30,00:32:31,805,"    this.compactionChecker = new CompactionChecker(this, this.threadWakeFrequency, this);"
b65d39bc9dc,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-04-25,17:50:17,806,"    this.periodicFlusher = new PeriodicMemstoreFlusher(this.threadWakeFrequency, this);"
a1079157eca,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2013-01-03,02:12:24,807,    // Health checker thread.
a1079157eca,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2013-01-03,02:12:24,808,"    int sleepTime = this.conf.getInt(HConstants.HEALTH_CHORE_WAKE_FREQ,"
a1079157eca,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2013-01-03,02:12:24,809,      HConstants.DEFAULT_THREAD_WAKE_FREQUENCY);
a1079157eca,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2013-01-03,02:12:24,810,    if (isHealthCheckerConfigured()) {
a1079157eca,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2013-01-03,02:12:24,811,"      healthCheckChore = new HealthCheckChore(sleepTime, this, getConfiguration());"
a1079157eca,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2013-01-03,02:12:24,812,    }
135daf0c41d,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2009-05-11,20:21:59,813,
9214f95cf4e,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-06-27,04:59:27,814,    this.leases = new Leases(this.threadWakeFrequency);
a141ff2a797,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Gray,2011-10-20,00:42:57,815,
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,816,    // Create the thread to clean the moved regions list
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,817,    movedRegionsCleaner = MovedRegionsCleaner.createAndStart(this);
da18540ea37,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Gary Helmling,2013-01-18,23:32:39,818,
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,819,    if (this.nonceManager != null) {
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,820,      // Create the chore that cleans up nonces.
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,821,      nonceManagerChore = this.nonceManager.createCleanupChore(this);
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,822,    }
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,823,
da18540ea37,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Gary Helmling,2013-01-18,23:32:39,824,    // Setup RPC client for master communication
11b7da45ec3,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-08-15,18:25:58,825,"    rpcClient = new RpcClient(conf, clusterId, new InetSocketAddress("
11b7da45ec3,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-08-15,18:25:58,826,"        this.isa.getAddress(), 0));"
b6ad121cb9a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,ndimiduk,2013-09-24,22:11:09,827,    this.pauseMonitor = new JvmPauseMonitor(conf);
b6ad121cb9a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,ndimiduk,2013-09-24,22:11:09,828,    pauseMonitor.start();
398b5f20ab3,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2009-04-03,01:24:45,829,  }
398b5f20ab3,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2009-04-03,01:24:45,830,
398b5f20ab3,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2009-04-03,01:24:45,831,  /**
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,832,   * The HRegionServer sticks in this loop until closed.
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,833,   */
7fa275407fd,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-07-15,21:38:37,834,  @Override
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,835,  public void run() {
b2bff276abe,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Gray,2010-10-06,21:39:11,836,    try {
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,837,"      // Do pre-registration initializations; zookeeper, lease threads, etc."
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,838,      preRegistrationInitialization();
996268c26ed,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2011-07-29,06:42:11,839,    } catch (Throwable e) {
b2bff276abe,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Gray,2010-10-06,21:39:11,840,"      abort(""Fatal exception during initialization"", e);"
b2bff276abe,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Gray,2010-10-06,21:39:11,841,    }
b2bff276abe,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Gray,2010-10-06,21:39:11,842,
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,843,    try {
10d336a51d3,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,rajeshbabu,2013-10-24,18:26:42,844,      // Set our ephemeral znode up in zookeeper now we have a name.
10d336a51d3,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,rajeshbabu,2013-10-24,18:26:42,845,      createMyEphemeralNode();
10d336a51d3,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,rajeshbabu,2013-10-24,18:26:42,846,
279e890edd1,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2014-01-15,01:24:05,847,      // Initialize the RegionServerCoprocessorHost now that our ephemeral
279e890edd1,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2014-01-15,01:24:05,848,"      // node was created, in case any coprocessors want to use ZooKeeper"
279e890edd1,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2014-01-15,01:24:05,849,"      this.rsHost = new RegionServerCoprocessorHost(this, this.conf);"
279e890edd1,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2014-01-15,01:24:05,850,
7d42c217a9a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-29,03:33:27,851,      // Try and register with the Master; tell it we are here.  Break if
581421a6b2e,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2011-09-25,03:46:53,852,      // server is stopped or the clusterup flag is down or hdfs went wacky.
7d42c217a9a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-29,03:33:27,853,      while (keepLooping()) {
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-03,06:20:26,854,        RegionServerStartupResponse w = reportForDuty();
7d42c217a9a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-29,03:33:27,855,        if (w == null) {
7d42c217a9a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-29,03:33:27,856,"          LOG.warn(""reportForDuty failed; sleeping and then retrying."");"
7d42c217a9a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-29,03:33:27,857,          this.sleeper.sleep();
7d42c217a9a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-29,03:33:27,858,        } else {
7d42c217a9a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-29,03:33:27,859,          handleReportForDutyResponse(w);
7d42c217a9a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-29,03:33:27,860,          break;
7d42c217a9a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-29,03:33:27,861,        }
4267838a0cd,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2009-07-29,23:07:48,862,      }
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,863,
b12a1c3e1be,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2013-07-05,07:28:39,864,      if (!this.stopped && isHealthy()){
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Hsieh,2014-01-22,01:42:49,865,"        // start the snapshot handler and other procedure handlers,"
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Hsieh,2014-01-22,01:42:49,866,        // since the server is ready to run
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Hsieh,2014-01-22,01:42:49,867,        rspmHost.start();
b12a1c3e1be,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2013-07-05,07:28:39,868,      }
82df28fffe7,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Hsieh,2013-02-13,18:43:44,869,
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,870,      // We registered with the Master.  Go into run mode.
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,871,      long lastMsg = 0;
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,872,      long oldRequestCount = -1;
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,873,      // The main run loop.
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,874,      while (!this.stopped && isHealthy()) {
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,875,        if (!isClusterUp()) {
1955d5dfe45,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-12-02,00:00:30,876,          if (isOnlineRegionsEmpty()) {
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,877,"            stop(""Exiting; cluster shutdown set and not carrying any regions"");"
5f2c693b59c,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-11-05,22:59:49,878,          } else if (!this.stopping) {
5f2c693b59c,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-11-05,22:59:49,879,            this.stopping = true;
7d42c217a9a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-29,03:33:27,880,"            LOG.info(""Closing user regions"");"
1955d5dfe45,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-12-02,00:00:30,881,            closeUserRegions(this.abortRequested);
0b95330166d,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2011-06-25,11:19:51,882,          } else if (this.stopping) {
fb23289cd15,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-07-02,00:03:40,883,            boolean allUserRegionsOffline = areAllUserRegionsOffline();
fb23289cd15,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-07-02,00:03:40,884,            if (allUserRegionsOffline) {
f3072b07bfd,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2014-02-16,02:00:20,885,              // Set stopped if no more write requests tp meta tables
f3072b07bfd,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2014-02-16,02:00:20,886,              // since last time we went around the loop.  Any open
f3072b07bfd,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2014-02-16,02:00:20,887,              // meta regions will be closed on our way out.
f3072b07bfd,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2014-02-16,02:00:20,888,              if (oldRequestCount == getWriteRequestCount()) {
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,889,"                stop(""Stopped; only catalog regions remaining online"");"
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,890,                break;
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,891,              }
f3072b07bfd,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2014-02-16,02:00:20,892,              oldRequestCount = getWriteRequestCount();
b5f5e2aeeb9,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-11-18,20:01:30,893,            } else {
b5f5e2aeeb9,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-11-18,20:01:30,894,              // Make sure all regions have been closed -- some regions may
b5f5e2aeeb9,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-11-18,20:01:30,895,              // have not got it because we were splitting at the time of
b5f5e2aeeb9,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-11-18,20:01:30,896,              // the call to closeUserRegions.
b5f5e2aeeb9,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-11-18,20:01:30,897,              closeUserRegions(this.abortRequested);
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,898,            }
1eb39242c49,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-12-02,20:09:31,899,"            LOG.debug(""Waiting on "" + getOnlineRegionsAsPrintableString());"
1a0fc48508b,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-11-10,19:03:01,900,          }
69cbc5d27cd,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-11-21,15:15:20,901,        }
c7781e9a37f,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-09-29,17:57:49,902,        long now = System.currentTimeMillis();
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,903,        if ((now - lastMsg) >= msgInterval) {
28c9c4dd6eb,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-06-25,20:58:05,904,"          tryRegionServerReport(lastMsg, now);"
c7781e9a37f,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-09-29,17:57:49,905,          lastMsg = System.currentTimeMillis();
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,906,        }
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,907,        if (!this.stopped) this.sleeper.sleep();
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,908,      } // for
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,909,    } catch (Throwable t) {
977f3934d08,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2008-12-03,19:47:08,910,      if (!checkOOME(t)) {
6bf0abbec92,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:08:16,911,"        String prefix = t instanceof YouAreDeadException? """": ""Unhandled: "";"
6bf0abbec92,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:08:16,912,"        abort(prefix + t.getMessage(), t);"
977f3934d08,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2008-12-03,19:47:08,913,      }
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,914,    }
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,915,    // Run shutdown.
d7050d3541d,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-02-24,21:06:12,916,    if (mxBean != null) {
d7050d3541d,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-02-24,21:06:12,917,      MBeanUtil.unregisterMBean(mxBean);
d7050d3541d,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-02-24,21:06:12,918,      mxBean = null;
d7050d3541d,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-02-24,21:06:12,919,    }
10eec81e096,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-09-16,21:05:35,920,    if (this.leases != null) this.leases.closeAfterLeasesExpire();
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,921,    this.rpcServer.stop();
04ac5314bdb,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-18,17:16:15,922,    if (this.splitLogWorker != null) {
04ac5314bdb,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-18,17:16:15,923,      splitLogWorker.stop();
04ac5314bdb,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-18,17:16:15,924,    }
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,925,    if (this.infoServer != null) {
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,926,"      LOG.info(""Stopping infoServer"");"
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,927,      try {
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,928,        this.infoServer.stop();
e0ac9731ca1,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2009-04-29,22:51:27,929,      } catch (Exception e) {
e0ac9731ca1,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2009-04-29,22:51:27,930,        e.printStackTrace();
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,931,      }
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,932,    }
de1cc3ec7be,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2009-07-01,23:57:40,933,    // Send cache a shutdown.
52c4ce5cdd2,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Gray,2011-10-12,04:15:30,934,    if (cacheConfig.isBlockCacheEnabled()) {
52c4ce5cdd2,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Gray,2011-10-12,04:15:30,935,      cacheConfig.getBlockCache().shutdown();
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,936,    }
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,937,
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,938,"    movedRegionsCleaner.stop(""Region Server stopping"");"
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,939,
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,940,    // Send interrupts to wake up threads if sleeping so they notice shutdown.
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,941,    // TODO: Should we check they are alive? If OOME could have exited already
c56d41dc3d5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,anoopsamjohn,2013-12-11,07:03:40,942,    if(this.hMemManager != null) this.hMemManager.stop();
0bbfd1a3646,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jean-Daniel Cryans,2010-11-24,18:35:05,943,    if (this.cacheFlusher != null) this.cacheFlusher.interruptIfNecessary();
0bbfd1a3646,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jean-Daniel Cryans,2010-11-24,18:35:05,944,    if (this.compactSplitThread != null) this.compactSplitThread.interruptIfNecessary();
0bbfd1a3646,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jean-Daniel Cryans,2010-11-24,18:35:05,945,    if (this.hlogRoller != null) this.hlogRoller.interruptIfNecessary();
9575f0f0a0a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-01-14,21:43:31,946,    if (this.metaHLogRoller != null) this.metaHLogRoller.interruptIfNecessary();
19402cd8143,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-05-19,22:00:27,947,    if (this.compactionChecker != null)
19402cd8143,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-05-19,22:00:27,948,      this.compactionChecker.interrupt();
a1079157eca,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2013-01-03,02:12:24,949,    if (this.healthCheckChore != null) {
a1079157eca,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2013-01-03,02:12:24,950,      this.healthCheckChore.interrupt();
a1079157eca,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2013-01-03,02:12:24,951,    }
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,952,    if (this.nonceManagerChore != null) {
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,953,      this.nonceManagerChore.interrupt();
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,954,    }
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,955,
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Hsieh,2014-01-22,01:42:49,956,"    // Stop the snapshot and other procedure handlers, forcefully killing all running tasks"
c079ba4660b,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Hsieh,2014-01-22,01:42:49,957,    rspmHost.stop(this.abortRequested || this.killed);
82df28fffe7,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Hsieh,2013-02-13,18:43:44,958,
0bbfd1a3646,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jean-Daniel Cryans,2010-11-24,18:35:05,959,    if (this.killed) {
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,960,      // Just skip out w/o closing regions.  Used when testing.
479c53423c9,core/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-05-08,06:27:15,961,    } else if (abortRequested) {
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,962,      if (this.fsOk) {
2c270de8968,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-09-07,20:36:01,963,        closeUserRegions(abortRequested); // Don\'t leave any open file handles
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,964,      }
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,965,"      LOG.info(""aborting server "" + this.serverNameFromMasterPOV);"
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,966,    } else {
2c270de8968,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-09-07,20:36:01,967,      closeUserRegions(abortRequested);
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,968,      closeAllScanners();
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,969,"      LOG.info(""stopping server "" + this.serverNameFromMasterPOV);"
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,970,    }
924f28e5c30,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-10-10,06:04:59,971,    // Interrupt catalog tracker here in case any regions being opened out in
3a23adf5aba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-03-08,22:37:19,972,    // handlers are stuck waiting on meta.
0bbfd1a3646,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jean-Daniel Cryans,2010-11-24,18:35:05,973,    if (this.catalogTracker != null) this.catalogTracker.stop();
2c270de8968,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-09-07,20:36:01,974,
2c270de8968,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-09-07,20:36:01,975,    // Closing the compactSplit thread before closing meta regions
2c270de8968,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-09-07,20:36:01,976,    if (!this.killed && containsMetaTableRegions()) {
2c270de8968,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-09-07,20:36:01,977,      if (!abortRequested || this.fsOk) {
2c270de8968,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-09-07,20:36:01,978,        if (this.compactSplitThread != null) {
2c270de8968,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-09-07,20:36:01,979,          this.compactSplitThread.join();
2c270de8968,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-09-07,20:36:01,980,          this.compactSplitThread = null;
2c270de8968,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-09-07,20:36:01,981,        }
2c270de8968,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-09-07,20:36:01,982,        closeMetaTableRegions(abortRequested);
2c270de8968,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-09-07,20:36:01,983,      }
2c270de8968,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-09-07,20:36:01,984,    }
2c270de8968,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-09-07,20:36:01,985,
05423b150bd,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-03-13,15:35:54,986,    if (!this.killed && this.fsOk) {
7416d6015be,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2011-09-27,20:49:04,987,      waitOnAllRegionsToClose(abortRequested);
7416d6015be,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2011-09-27,20:49:04,988,"      LOG.info(""stopping server "" + this.serverNameFromMasterPOV +"
7416d6015be,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2011-09-27,20:49:04,989,"        ""; all regions closed."");"
7416d6015be,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2011-09-27,20:49:04,990,    }
77dae7ccb78,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-12-08,00:11:26,991,
77dae7ccb78,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-12-08,00:11:26,992,    //fsOk flag may be changed when closing regions throws exception.
c19b7ba9d96,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-25,00:09:52,993,    if (this.fsOk) {
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,994,      closeWAL(!abortRequested);
d5364c2bfd3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-11-01,19:12:11,995,    }
77dae7ccb78,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-12-08,00:11:26,996,
19b01d968d3,core/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-04-30,06:52:27,997,    // Make sure the proxy is down.
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-03,03:52:15,998,    if (this.rssStub != null) {
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-03,03:52:15,999,      this.rssStub = null;
bc577ede4a4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-30,01:32:09,1000,    }
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-03,03:52:15,1001,    this.rpcClient.stop();
9453a813d0d,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-09-10,00:03:57,1002,    this.leases.close();
b6ad121cb9a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,ndimiduk,2013-09-24,22:11:09,1003,    if (this.pauseMonitor != null) {
b6ad121cb9a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,ndimiduk,2013-09-24,22:11:09,1004,      this.pauseMonitor.stop();
b6ad121cb9a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,ndimiduk,2013-09-24,22:11:09,1005,    }
a7dcdedb865,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,larsh,2012-07-08,19:21:30,1006,
a7dcdedb865,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,larsh,2012-07-08,19:21:30,1007,    if (!killed) {
a7dcdedb865,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,larsh,2012-07-08,19:21:30,1008,      join();
a7dcdedb865,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,larsh,2012-07-08,19:21:30,1009,    }
a7dcdedb865,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,larsh,2012-07-08,19:21:30,1010,
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,1011,    try {
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,1012,      deleteMyEphemeralNode();
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,1013,    } catch (KeeperException e) {
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,1014,"      LOG.warn(""Failed deleting my ephemeral node"", e);"
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,1015,    }
49731c73dc2,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-04,15:19:47,1016,"    // We may have failed to delete the znode at the previous step, but"
49731c73dc2,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-04,15:19:47,1017,    //  we delete the file anyway: a second attempt to delete the znode is likely to fail again.
4c61d4a9651,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-18,17:44:04,1018,    ZNodeClearer.deleteMyEphemeralNodeOnDisk();
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1019,    this.zooKeeper.close();
7416d6015be,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2011-09-27,20:49:04,1020,"    LOG.info(""stopping server "" + this.serverNameFromMasterPOV +"
7416d6015be,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2011-09-27,20:49:04,1021,"      ""; zookeeper connection closed."");"
7416d6015be,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2011-09-27,20:49:04,1022,
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,1023,"    LOG.info(Thread.currentThread().getName() + "" exiting"");"
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,1024,  }
f5ded907808,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-10-16,19:45:17,1025,
2c270de8968,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-09-07,20:36:01,1026,  private boolean containsMetaTableRegions() {
3a23adf5aba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-03-08,22:37:19,1027,    return onlineRegions.containsKey(HRegionInfo.FIRST_META_REGIONINFO.getEncodedName());
2c270de8968,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-09-07,20:36:01,1028,  }
2c270de8968,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-09-07,20:36:01,1029,
fb23289cd15,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-07-02,00:03:40,1030,  private boolean areAllUserRegionsOffline() {
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,1031,    if (getNumberOfOnlineRegions() > 2) return false;
fb23289cd15,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-07-02,00:03:40,1032,    boolean allUserRegionsOffline = true;
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,1033,"    for (Map.Entry<String, HRegion> e: this.onlineRegions.entrySet()) {"
2c270de8968,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-09-07,20:36:01,1034,      if (!e.getValue().getRegionInfo().isMetaTable()) {
fb23289cd15,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-07-02,00:03:40,1035,        allUserRegionsOffline = false;
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,1036,        break;
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,1037,      }
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,1038,    }
fb23289cd15,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-07-02,00:03:40,1039,    return allUserRegionsOffline;
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,1040,  }
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,1041,
f3072b07bfd,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2014-02-16,02:00:20,1042,  /**
f3072b07bfd,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2014-02-16,02:00:20,1043,   * @return Current write count for all online regions.
f3072b07bfd,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2014-02-16,02:00:20,1044,   */
f3072b07bfd,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2014-02-16,02:00:20,1045,  private long getWriteRequestCount() {
f3072b07bfd,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2014-02-16,02:00:20,1046,    int writeCount = 0;
f3072b07bfd,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2014-02-16,02:00:20,1047,"    for (Map.Entry<String, HRegion> e: this.onlineRegions.entrySet()) {"
f3072b07bfd,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2014-02-16,02:00:20,1048,      writeCount += e.getValue().getWriteRequestsCount();
f3072b07bfd,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2014-02-16,02:00:20,1049,    }
f3072b07bfd,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2014-02-16,02:00:20,1050,    return writeCount;
f3072b07bfd,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2014-02-16,02:00:20,1051,  }
f3072b07bfd,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2014-02-16,02:00:20,1052,
78b7dad2c84,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2014-03-06,01:26:25,1053,  @VisibleForTesting
78b7dad2c84,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2014-03-06,01:26:25,1054,"  protected void tryRegionServerReport(long reportStartTime, long reportEndTime)"
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,1055,  throws IOException {
c5eea46314e,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-06-27,00:58:07,1056,    if (this.rssStub == null) {
c5eea46314e,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-06-27,00:58:07,1057,      // the current server is stopping.
c5eea46314e,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-06-27,00:58:07,1058,      return;
c5eea46314e,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-06-27,00:58:07,1059,    }
87812311328,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-06-22,00:15:11,1060,"    ClusterStatusProtos.ServerLoad sl = buildServerLoad(reportStartTime, reportEndTime);"
7d42c217a9a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-29,03:33:27,1061,    try {
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-03,06:20:26,1062,      RegionServerReportRequest.Builder request = RegionServerReportRequest.newBuilder();
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-03,06:20:26,1063,      ServerName sn = ServerName.parseVersionedServerName(
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-03,06:20:26,1064,        this.serverNameFromMasterPOV.getVersionedBytes());
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-03,06:20:26,1065,      request.setServer(ProtobufUtil.toServerName(sn));
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-03,06:20:26,1066,      request.setLoad(sl);
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-03,03:52:15,1067,"      this.rssStub.regionServerReport(null, request.build());"
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-03,06:20:26,1068,    } catch (ServiceException se) {
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-03,06:20:26,1069,      IOException ioe = ProtobufUtil.getRemoteException(se);
7d42c217a9a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-29,03:33:27,1070,      if (ioe instanceof YouAreDeadException) {
7d42c217a9a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-29,03:33:27,1071,        // This will be caught and handled as a fatal error in run()
7d42c217a9a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-29,03:33:27,1072,        throw ioe;
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,1073,      }
7d42c217a9a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-29,03:33:27,1074,"      // Couldn\'t connect to the master, get location from zk and reconnect"
7d42c217a9a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-29,03:33:27,1075,      // Method blocks until new master is found or we are stopped
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-03,03:52:15,1076,"      Pair<ServerName, RegionServerStatusService.BlockingInterface> p ="
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-03,03:52:15,1077,        createRegionServerStatusStub();
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-03,03:52:15,1078,      this.rssStub = p.getSecond();
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,1079,    }
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,1080,  }
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,1081,
87812311328,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-06-22,00:15:11,1082,"  ClusterStatusProtos.ServerLoad buildServerLoad(long reportStartTime, long reportEndTime) {"
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2012-11-06,23:22:01,1083,    // We\'re getting the MetricsRegionServerWrapper here because the wrapper computes requests
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2012-11-06,23:22:01,1084,"    // per second, and other metrics  As long as metrics are part of ServerLoad it\'s best to use"
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2012-11-06,23:22:01,1085,    // the wrapper to compute those numbers in one place.
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2012-11-06,23:22:01,1086,    // In the long term most of these should be moved off of ServerLoad and the heart beat.
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2012-11-06,23:22:01,1087,    // Instead they should be stored in an HBase table so that external visibility into HBase is
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2012-11-06,23:22:01,1088,    // improved; Additionally the load balancer will be able to take advantage of a more complete
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2012-11-06,23:22:01,1089,    // history.
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2012-11-06,23:22:01,1090,    MetricsRegionServerWrapper regionServerWrapper = this.metricsRegionServer.getRegionServerWrapper();
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,1091,    Collection<HRegion> regions = getOnlineRegionsLocalContext();
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,1092,    MemoryUsage memory =
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,1093,      ManagementFactory.getMemoryMXBean().getHeapMemoryUsage();
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-03,06:20:26,1094,
87812311328,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-06-22,00:15:11,1095,    ClusterStatusProtos.ServerLoad.Builder serverLoad =
87812311328,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-06-22,00:15:11,1096,      ClusterStatusProtos.ServerLoad.newBuilder();
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2012-11-06,23:22:01,1097,    serverLoad.setNumberOfRequests((int) regionServerWrapper.getRequestsPerSecond());
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2012-11-06,23:22:01,1098,    serverLoad.setTotalNumberOfRequests((int) regionServerWrapper.getTotalRequestCount());
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-03,06:20:26,1099,    serverLoad.setUsedHeapMB((int)(memory.getUsed() / 1024 / 1024));
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-03,06:20:26,1100,    serverLoad.setMaxHeapMB((int) (memory.getMax() / 1024 / 1024));
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-03,06:20:26,1101,    Set<String> coprocessors = this.hlog.getCoprocessorHost().getCoprocessors();
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-03,06:20:26,1102,    for (String coprocessor : coprocessors) {
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-03,06:20:26,1103,      serverLoad.addCoprocessors(
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-03,06:20:26,1104,        Coprocessor.newBuilder().setName(coprocessor).build());
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-03,06:20:26,1105,    }
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-03,06:20:26,1106,    for (HRegion region : regions) {
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-03,06:20:26,1107,      serverLoad.addRegionLoads(createRegionLoad(region));
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-03,06:20:26,1108,    }
28c9c4dd6eb,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-06-25,20:58:05,1109,    serverLoad.setReportStartTime(reportStartTime);
28c9c4dd6eb,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-06-25,20:58:05,1110,    serverLoad.setReportEndTime(reportEndTime);
65a7c129428,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2012-10-23,20:39:21,1111,    if (this.infoServer != null) {
65a7c129428,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2012-10-23,20:39:21,1112,      serverLoad.setInfoServerPort(this.infoServer.getPort());
65a7c129428,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2012-10-23,20:39:21,1113,    } else {
65a7c129428,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2012-10-23,20:39:21,1114,      serverLoad.setInfoServerPort(-1);
65a7c129428,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2012-10-23,20:39:21,1115,    }
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-03,06:20:26,1116,    return serverLoad.build();
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,1117,  }
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,1118,
1eb39242c49,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-12-02,20:09:31,1119,  String getOnlineRegionsAsPrintableString() {
1eb39242c49,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-12-02,20:09:31,1120,    StringBuilder sb = new StringBuilder();
b500e86e2d8,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-03-24,20:25:10,1121,    for (HRegion r: this.onlineRegions.values()) {
b500e86e2d8,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-03-24,20:25:10,1122,"      if (sb.length() > 0) sb.append("", "");"
b500e86e2d8,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-03-24,20:25:10,1123,      sb.append(r.getRegionInfo().getEncodedName());
1eb39242c49,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-12-02,20:09:31,1124,    }
1eb39242c49,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-12-02,20:09:31,1125,    return sb.toString();
1eb39242c49,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-12-02,20:09:31,1126,  }
1eb39242c49,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-12-02,20:09:31,1127,
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1128,  /**
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1129,   * Wait on regions close.
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1130,   */
52ccf8db351,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-09-08,15:38:04,1131,  private void waitOnAllRegionsToClose(final boolean abort) {
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1132,    // Wait till all regions are closed before going out.
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1133,    int lastCount = -1;
1c9f356fca7,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-11-14,22:50:10,1134,    long previousLogTime = 0;
30f21c3ef44,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-02-23,05:05:30,1135,    Set<String> closedRegions = new HashSet<String>();
b0c77d1d7e8,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-21,10:56:47,1136,    boolean interrupted = false;
b0c77d1d7e8,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-21,10:56:47,1137,    try {
b0c77d1d7e8,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-21,10:56:47,1138,      while (!isOnlineRegionsEmpty()) {
b0c77d1d7e8,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-21,10:56:47,1139,        int count = getNumberOfOnlineRegions();
b0c77d1d7e8,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-21,10:56:47,1140,        // Only print a message if the count of regions has changed.
b0c77d1d7e8,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-21,10:56:47,1141,        if (count != lastCount) {
b0c77d1d7e8,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-21,10:56:47,1142,          // Log every second at most
b0c77d1d7e8,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-21,10:56:47,1143,          if (System.currentTimeMillis() > (previousLogTime + 1000)) {
b0c77d1d7e8,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-21,10:56:47,1144,            previousLogTime = System.currentTimeMillis();
b0c77d1d7e8,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-21,10:56:47,1145,            lastCount = count;
b0c77d1d7e8,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-21,10:56:47,1146,"            LOG.info(""Waiting on "" + count + "" regions to close"");"
b0c77d1d7e8,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-21,10:56:47,1147,            // Only print out regions still closing if a small number else will
b0c77d1d7e8,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-21,10:56:47,1148,            // swamp the log.
b0c77d1d7e8,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-21,10:56:47,1149,            if (count < 10 && LOG.isDebugEnabled()) {
b0c77d1d7e8,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-21,10:56:47,1150,              LOG.debug(this.onlineRegions);
b0c77d1d7e8,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-21,10:56:47,1151,            }
1c9f356fca7,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-11-14,22:50:10,1152,          }
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1153,        }
b0c77d1d7e8,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-21,10:56:47,1154,        // Ensure all user regions have been sent a close. Use this to
b0c77d1d7e8,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-21,10:56:47,1155,        // protect against the case where an open comes in after we start the
b0c77d1d7e8,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-21,10:56:47,1156,        // iterator of onlineRegions to close all user regions.
b0c77d1d7e8,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-21,10:56:47,1157,"        for (Map.Entry<String, HRegion> e : this.onlineRegions.entrySet()) {"
b0c77d1d7e8,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-21,10:56:47,1158,          HRegionInfo hri = e.getValue().getRegionInfo();
b0c77d1d7e8,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-21,10:56:47,1159,          if (!this.regionsInTransitionInRS.containsKey(hri.getEncodedNameAsBytes())
b0c77d1d7e8,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-21,10:56:47,1160,              && !closedRegions.contains(hri.getEncodedName())) {
b0c77d1d7e8,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-21,10:56:47,1161,            closedRegions.add(hri.getEncodedName());
b0c77d1d7e8,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-21,10:56:47,1162,            // Don\'t update zk with this close transition; pass false.
b0c77d1d7e8,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-21,10:56:47,1163,"            closeRegionIgnoreErrors(hri, abort);"
b0c77d1d7e8,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-21,10:56:47,1164,              }
52ccf8db351,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-09-08,15:38:04,1165,        }
b0c77d1d7e8,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-21,10:56:47,1166,"        // No regions in RIT, we could stop waiting now."
b0c77d1d7e8,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-21,10:56:47,1167,        if (this.regionsInTransitionInRS.isEmpty()) {
b0c77d1d7e8,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-21,10:56:47,1168,          if (!isOnlineRegionsEmpty()) {
b0c77d1d7e8,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-21,10:56:47,1169,"            LOG.info(""We were exiting though online regions are not empty,"" +"
b0c77d1d7e8,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-21,10:56:47,1170,"                "" because some regions failed closing"");"
b0c77d1d7e8,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-21,10:56:47,1171,          }
b0c77d1d7e8,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-21,10:56:47,1172,          break;
30f21c3ef44,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-02-23,05:05:30,1173,        }
b0c77d1d7e8,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-21,10:56:47,1174,        try {
b0c77d1d7e8,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-21,10:56:47,1175,          Thread.sleep(200);
b0c77d1d7e8,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-21,10:56:47,1176,        } catch (InterruptedException e) {
b0c77d1d7e8,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-21,10:56:47,1177,          interrupted = true;
b0c77d1d7e8,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-21,10:56:47,1178,"          LOG.warn(""Interrupted while sleeping"");"
b0c77d1d7e8,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-21,10:56:47,1179,        }
b0c77d1d7e8,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-21,10:56:47,1180,      }
b0c77d1d7e8,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-21,10:56:47,1181,    } finally {
b0c77d1d7e8,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-21,10:56:47,1182,      if (interrupted) {
b0c77d1d7e8,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-21,10:56:47,1183,        Thread.currentThread().interrupt();
30f21c3ef44,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-02-23,05:05:30,1184,      }
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1185,    }
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1186,  }
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1187,
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1188,  private void closeWAL(final boolean delete) {
21ea0b5ecf8,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-03-07,07:01:54,1189,    if (this.hlogForMeta != null) {
21ea0b5ecf8,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-03-07,07:01:54,1190,      // All hlogs (meta and non-meta) are in the same directory. Don\'t call
21ea0b5ecf8,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-03-07,07:01:54,1191,      // closeAndDelete here since that would delete all hlogs not just the
21ea0b5ecf8,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-03-07,07:01:54,1192,"      // meta ones. We will just \'close\' the hlog for meta here, and leave"
21ea0b5ecf8,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-03-07,07:01:54,1193,      // the directory cleanup to the follow-on closeAndDelete call.
21ea0b5ecf8,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-03-07,07:01:54,1194,      try {
9575f0f0a0a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-01-14,21:43:31,1195,        this.hlogForMeta.close();
21ea0b5ecf8,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-03-07,07:01:54,1196,      } catch (Throwable e) {
21ea0b5ecf8,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-03-07,07:01:54,1197,"        LOG.error(""Metalog close and delete failed"", RemoteExceptionHandler.checkThrowable(e));"
9575f0f0a0a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-01-14,21:43:31,1198,      }
21ea0b5ecf8,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-03-07,07:01:54,1199,    }
21ea0b5ecf8,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-03-07,07:01:54,1200,    if (this.hlog != null) {
21ea0b5ecf8,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-03-07,07:01:54,1201,      try {
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1202,        if (delete) {
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1203,          hlog.closeAndDelete();
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1204,        } else {
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1205,          hlog.close();
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1206,        }
21ea0b5ecf8,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-03-07,07:01:54,1207,      } catch (Throwable e) {
21ea0b5ecf8,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-03-07,07:01:54,1208,"        LOG.error(""Close and delete failed"", RemoteExceptionHandler.checkThrowable(e));"
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1209,      }
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1210,    }
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1211,  }
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1212,
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1213,  private void closeAllScanners() {
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1214,    // Close any outstanding scanners. Means they\'ll get an UnknownScanner
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1215,    // exception next time they come in.
c9073c46319,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-10-25,16:43:22,1216,"    for (Map.Entry<String, RegionScannerHolder> e : this.scanners.entrySet()) {"
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1217,      try {
d20edb96dc4,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2013-08-06,20:10:37,1218,        e.getValue().s.close();
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1219,      } catch (IOException ioe) {
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1220,"        LOG.warn(""Closing scanner "" + e.getKey(), ioe);"
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1221,      }
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1222,    }
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1223,  }
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1224,
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,1225,  /*
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,1226,   * Run init. Sets up hlog and starts up all server threads.
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1227,   *
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,1228,   * @param c Extra configuration.
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,1229,   */
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-03,06:20:26,1230,  protected void handleReportForDutyResponse(final RegionServerStartupResponse c)
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,1231,  throws IOException {
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,1232,    try {
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-03,06:20:26,1233,      for (NameStringPair e : c.getMapEntriesList()) {
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-03,06:20:26,1234,        String key = e.getName();
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,1235,        // The hostname the master sees us as.
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,1236,        if (key.equals(HConstants.KEY_FOR_HOSTNAME_SEEN_BY_MASTER)) {
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-03,06:20:26,1237,          String hostnameFromMasterPOV = e.getValue();
bc7c3c7daaa,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2013-11-20,20:02:25,1238,"          this.serverNameFromMasterPOV = ServerName.valueOf(hostnameFromMasterPOV,"
bc7c3c7daaa,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2013-11-20,20:02:25,1239,"              this.isa.getPort(), this.startcode);"
a71464bf842,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-06-19,04:48:04,1240,          if (!hostnameFromMasterPOV.equals(this.isa.getHostName())) {
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-03,03:52:15,1241,"            LOG.info(""Master passed us a different hostname to use; was="" +"
a71464bf842,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-06-19,04:48:04,1242,"              this.isa.getHostName() + "", but now="" + hostnameFromMasterPOV);"
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-03,03:52:15,1243,          }
d4eeff6d35d,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jean-Daniel Cryans,2010-12-01,01:32:52,1244,          continue;
d4eeff6d35d,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jean-Daniel Cryans,2010-12-01,01:32:52,1245,        }
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,1246,        String value = e.getValue();
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,1247,        if (LOG.isDebugEnabled()) {
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,1248,"          LOG.debug(""Config from master: "" + key + ""="" + value);"
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,1249,        }
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,1250,"        this.conf.set(key, value);"
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,1251,      }
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,1252,
009f4617382,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Ryan Rawson,2010-09-15,21:48:04,1253,      // hack! Maps DFSClient => RegionServer for logs.  HDFS made this
4321ef55467,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-07-22,21:58:44,1254,"      // config param for task trackers, but we can piggyback off of it."
4321ef55467,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-07-22,21:58:44,1255,"      if (this.conf.get(""mapred.task.id"") == null) {"
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,1256,"        this.conf.set(""mapred.task.id"", ""hb_rs_"" +"
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,1257,          this.serverNameFromMasterPOV.toString());
4321ef55467,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-07-22,21:58:44,1258,      }
009f4617382,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Ryan Rawson,2010-09-15,21:48:04,1259,
49731c73dc2,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-04,15:19:47,1260,"      // Save it in a file, this will allow to see if we crash"
4c61d4a9651,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-18,17:44:04,1261,      ZNodeClearer.writeMyEphemeralNodeOnDisk(getMyEphemeralNodePath());
49731c73dc2,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-04,15:19:47,1262,
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,1263,      // Master sent us hbase.rootdir to use. Should be fully qualified
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1264,      // path with file system specification included. Set \'fs.defaultFS\'
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,1265,      // to match the filesystem on hbase.rootdir else underlying hadoop hdfs
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,1266,      // accessors will be going against wrong filesystem (unless all is set
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,1267,      // to defaults).
6ae6e5559bf,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,mbertozzi,2013-03-06,20:03:30,1268,"      FSUtils.setFsDefault(this.conf, FSUtils.getRootDir(this.conf));"
871792162eb,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-11-26,21:42:51,1269,      // Get fs instance used by this RS.  Do we use checksum verification in the hbase? If hbase
871792162eb,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-11-26,21:42:51,1270,"      // checksum verification enabled, then automatically switch off hdfs checksum verification."
871792162eb,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-11-26,21:42:51,1271,"      boolean useHBaseChecksum = conf.getBoolean(HConstants.HBASE_CHECKSUM_VERIFICATION, true);"
871792162eb,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-11-26,21:42:51,1272,"      this.fs = new HFileSystem(this.conf, useHBaseChecksum);"
6ae6e5559bf,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,mbertozzi,2013-03-06,20:03:30,1273,      this.rootDir = FSUtils.getRootDir(this.conf);
b0439269fe7,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-06-21,18:31:26,1274,"      this.tableDescriptors = new FSTableDescriptors(this.fs, this.rootDir, true);"
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1275,      this.hlog = setupWALAndReplication();
e95b049d337,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2008-10-29,21:06:29,1276,      // Init in here rather than in constructor after thread name has been set
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2012-11-06,23:22:01,1277,      this.metricsRegionServer = new MetricsRegionServer(new MetricsRegionServerWrapperImpl(this));
5c2a90aa28c,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2013-08-14,23:20:51,1278,
5c2a90aa28c,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2013-08-14,23:20:51,1279,      spanReceiverHost = SpanReceiverHost.getInstance(getConfiguration());
5c2a90aa28c,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2013-08-14,23:20:51,1280,
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,1281,      startServiceThreads();
c56d41dc3d5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,anoopsamjohn,2013-12-11,07:03:40,1282,      startHeapMemoryManager();
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,1283,"      LOG.info(""Serving as "" + this.serverNameFromMasterPOV +"
a71464bf842,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-06-19,04:48:04,1284,"        "", RpcServer on "" + this.isa +"
9453a813d0d,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-09-10,00:03:57,1285,"        "", sessionid=0x"" +"
b11659d6795,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-07-28,06:44:27,1286,        Long.toHexString(this.zooKeeper.getRecoverableZooKeeper().getSessionId()));
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,1287,      isOnline = true;
977f3934d08,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2008-12-03,19:47:08,1288,    } catch (Throwable e) {
977f3934d08,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2008-12-03,19:47:08,1289,      this.isOnline = false;
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1290,"      stop(""Failed initialization"");"
977f3934d08,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2008-12-03,19:47:08,1291,"      throw convertThrowableToIOE(cleanup(e, ""Failed init""),"
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1292,"          ""Region server startup failed"");"
23532b3538c,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-11-22,01:04:40,1293,    } finally {
23532b3538c,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-11-22,01:04:40,1294,      sleeper.skipSleepCycle();
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,1295,    }
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,1296,  }
9673c4ad757,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2008-12-01,23:30:04,1297,
c56d41dc3d5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,anoopsamjohn,2013-12-11,07:03:40,1298,  private void startHeapMemoryManager() {
c56d41dc3d5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,anoopsamjohn,2013-12-11,07:03:40,1299,"    this.hMemManager = HeapMemoryManager.create(this.conf, this.cacheFlusher, this);"
c56d41dc3d5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,anoopsamjohn,2013-12-11,07:03:40,1300,    if (this.hMemManager != null) {
c56d41dc3d5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,anoopsamjohn,2013-12-11,07:03:40,1301,      this.hMemManager.start();
c56d41dc3d5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,anoopsamjohn,2013-12-11,07:03:40,1302,    }
c56d41dc3d5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,anoopsamjohn,2013-12-11,07:03:40,1303,  }
c56d41dc3d5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,anoopsamjohn,2013-12-11,07:03:40,1304,
7ea071db1ff,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-12-17,04:35:59,1305,"  private void createMyEphemeralNode() throws KeeperException, IOException {"
7ea071db1ff,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-12-17,04:35:59,1306,    byte[] data = ProtobufUtil.prependPBMagic(rsInfo.build().toByteArray());
7ea071db1ff,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-12-17,04:35:59,1307,"    ZKUtil.createEphemeralNodeAndWatch(this.zooKeeper,"
7ea071db1ff,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-12-17,04:35:59,1308,"      getMyEphemeralNodePath(), data);"
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,1309,  }
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,1310,
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,1311,  private void deleteMyEphemeralNode() throws KeeperException {
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,1312,"    ZKUtil.deleteNode(this.zooKeeper, getMyEphemeralNodePath());"
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,1313,  }
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,1314,
7fa275407fd,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-07-15,21:38:37,1315,  @Override
ed64718369b,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-04,18:33:55,1316,  public RegionServerAccounting getRegionServerAccounting() {
ed64718369b,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-04,18:33:55,1317,    return regionServerAccounting;
ed64718369b,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-04,18:33:55,1318,  }
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,1319,
5fce119685c,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-03-21,00:26:19,1320,  @Override
5fce119685c,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-03-21,00:26:19,1321,  public TableLockManager getTableLockManager() {
5fce119685c,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-03-21,00:26:19,1322,    return tableLockManager;
5fce119685c,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-03-21,00:26:19,1323,  }
5fce119685c,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-03-21,00:26:19,1324,
9673c4ad757,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2008-12-01,23:30:04,1325,  /*
9673c4ad757,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2008-12-01,23:30:04,1326,   * @param r Region to get RegionLoad for.
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1327,   *
9673c4ad757,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2008-12-01,23:30:04,1328,   * @return RegionLoad instance.
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1329,   *
9673c4ad757,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2008-12-01,23:30:04,1330,   * @throws IOException
9673c4ad757,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2008-12-01,23:30:04,1331,   */
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-03,06:20:26,1332,  private RegionLoad createRegionLoad(final HRegion r) {
9673c4ad757,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2008-12-01,23:30:04,1333,    byte[] name = r.getRegionName();
9673c4ad757,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2008-12-01,23:30:04,1334,    int stores = 0;
9673c4ad757,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2008-12-01,23:30:04,1335,    int storefiles = 0;
ebb63ef44d4,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-06-16,21:18:08,1336,    int storeUncompressedSizeMB = 0;
53b3084c85d,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2009-07-16,23:13:41,1337,    int storefileSizeMB = 0;
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1338,    int memstoreSizeMB = (int) (r.memstoreSize.get() / 1024 / 1024);
9673c4ad757,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2008-12-01,23:30:04,1339,    int storefileIndexSizeMB = 0;
121c5b2e471,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2011-08-03,19:59:48,1340,    int rootIndexSizeKB = 0;
121c5b2e471,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2011-08-03,19:59:48,1341,    int totalStaticIndexSizeKB = 0;
121c5b2e471,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2011-08-03,19:59:48,1342,    int totalStaticBloomSizeKB = 0;
5ccadb10ba8,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-08-27,04:26:03,1343,    long totalCompactingKVs = 0;
5ccadb10ba8,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-08-27,04:26:03,1344,    long currentCompactedKVs = 0;
9673c4ad757,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2008-12-01,23:30:04,1345,    synchronized (r.stores) {
9673c4ad757,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2008-12-01,23:30:04,1346,      stores += r.stores.size();
093c6fa19c1,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-08-17,16:46:07,1347,      for (Store store : r.stores.values()) {
9673c4ad757,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2008-12-01,23:30:04,1348,        storefiles += store.getStorefilesCount();
ebb63ef44d4,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-06-16,21:18:08,1349,        storeUncompressedSizeMB += (int) (store.getStoreSizeUncompressed()
ebb63ef44d4,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-06-16,21:18:08,1350,            / 1024 / 1024);
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1351,        storefileSizeMB += (int) (store.getStorefilesSize() / 1024 / 1024);
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1352,        storefileIndexSizeMB += (int) (store.getStorefilesIndexSize() / 1024 / 1024);
5ccadb10ba8,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-08-27,04:26:03,1353,        CompactionProgress progress = store.getCompactionProgress();
5ccadb10ba8,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-08-27,04:26:03,1354,        if (progress != null) {
5ccadb10ba8,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-08-27,04:26:03,1355,          totalCompactingKVs += progress.totalCompactingKVs;
5ccadb10ba8,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-08-27,04:26:03,1356,          currentCompactedKVs += progress.currentCompactedKVs;
5ccadb10ba8,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-08-27,04:26:03,1357,        }
121c5b2e471,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2011-08-03,19:59:48,1358,
121c5b2e471,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2011-08-03,19:59:48,1359,        rootIndexSizeKB +=
121c5b2e471,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2011-08-03,19:59:48,1360,            (int) (store.getStorefilesIndexSize() / 1024);
121c5b2e471,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2011-08-03,19:59:48,1361,
121c5b2e471,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2011-08-03,19:59:48,1362,        totalStaticIndexSizeKB +=
121c5b2e471,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2011-08-03,19:59:48,1363,          (int) (store.getTotalStaticIndexSize() / 1024);
121c5b2e471,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2011-08-03,19:59:48,1364,
121c5b2e471,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2011-08-03,19:59:48,1365,        totalStaticBloomSizeKB +=
121c5b2e471,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2011-08-03,19:59:48,1366,          (int) (store.getTotalStaticBloomSize() / 1024);
9673c4ad757,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2008-12-01,23:30:04,1367,      }
9673c4ad757,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2008-12-01,23:30:04,1368,    }
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-03,06:20:26,1369,    RegionLoad.Builder regionLoad = RegionLoad.newBuilder();
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-03,06:20:26,1370,    RegionSpecifier.Builder regionSpecifier = RegionSpecifier.newBuilder();
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-03,06:20:26,1371,    regionSpecifier.setType(RegionSpecifierType.REGION_NAME);
e0c10338912,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-01-29,20:31:31,1372,    regionSpecifier.setValue(HBaseZeroCopyByteString.wrap(name));
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-03,06:20:26,1373,    regionLoad.setRegionSpecifier(regionSpecifier.build())
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-03,06:20:26,1374,      .setStores(stores)
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-03,06:20:26,1375,      .setStorefiles(storefiles)
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-03,06:20:26,1376,      .setStoreUncompressedSizeMB(storeUncompressedSizeMB)
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-03,06:20:26,1377,      .setStorefileSizeMB(storefileSizeMB)
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-03,06:20:26,1378,      .setMemstoreSizeMB(memstoreSizeMB)
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-03,06:20:26,1379,      .setStorefileIndexSizeMB(storefileIndexSizeMB)
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-03,06:20:26,1380,      .setRootIndexSizeKB(rootIndexSizeKB)
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-03,06:20:26,1381,      .setTotalStaticIndexSizeKB(totalStaticIndexSizeKB)
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-03,06:20:26,1382,      .setTotalStaticBloomSizeKB(totalStaticBloomSizeKB)
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-03,06:20:26,1383,      .setReadRequestsCount((int) r.readRequestsCount.get())
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-03,06:20:26,1384,      .setWriteRequestsCount((int) r.writeRequestsCount.get())
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-03,06:20:26,1385,      .setTotalCompactingKVs(totalCompactingKVs)
c310653a19c,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-09-06,17:22:01,1386,      .setCurrentCompactedKVs(currentCompactedKVs)
c310653a19c,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-09-06,17:22:01,1387,      .setCompleteSequenceId(r.completeSequenceId);
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-03,06:20:26,1388,
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-03,06:20:26,1389,    return regionLoad.build();
9673c4ad757,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2008-12-01,23:30:04,1390,  }
e06e00450ef,core/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-05-07,19:26:45,1391,
9673c4ad757,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2008-12-01,23:30:04,1392,  /**
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1393,   * @param encodedRegionName
9673c4ad757,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2008-12-01,23:30:04,1394,   * @return An instance of RegionLoad.
9673c4ad757,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2008-12-01,23:30:04,1395,   */
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-03,06:20:26,1396,  public RegionLoad createRegionLoad(final String encodedRegionName) {
1955d5dfe45,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-12-02,00:00:30,1397,    HRegion r = null;
b500e86e2d8,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-03-24,20:25:10,1398,    r = this.onlineRegions.get(encodedRegionName);
be4fbee16b3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-03-25,20:38:11,1399,    return r != null ? createRegionLoad(r) : null;
9673c4ad757,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2008-12-01,23:30:04,1400,  }
9673c4ad757,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2008-12-01,23:30:04,1401,
79be2d87f7a,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2008-11-15,00:36:27,1402,  /*
19402cd8143,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-05-19,22:00:27,1403,   * Inner class that runs on a long period checking if regions need compaction.
79be2d87f7a,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2008-11-15,00:36:27,1404,   */
19402cd8143,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-05-19,22:00:27,1405,  private static class CompactionChecker extends Chore {
79be2d87f7a,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2008-11-15,00:36:27,1406,    private final HRegionServer instance;
a8f9f4d751e,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-06-23,03:49:23,1407,    private final int majorCompactPriority;
a8f9f4d751e,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-06-23,03:49:23,1408,    private final static int DEFAULT_PRIORITY = Integer.MAX_VALUE;
0e9fbc727c8,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-04-30,00:32:31,1409,    private long iteration = 0;
baa1af5683c,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2008-11-25,21:50:19,1410,
19402cd8143,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-05-19,22:00:27,1411,"    CompactionChecker(final HRegionServer h, final int sleepTime,"
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1412,        final Stoppable stopper) {
19402cd8143,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-05-19,22:00:27,1413,"      super(""CompactionChecker"", sleepTime, h);"
79be2d87f7a,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2008-11-15,00:36:27,1414,      this.instance = h;
a71464bf842,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-06-19,04:48:04,1415,"      LOG.info(this.getName() + "" runs every "" + StringUtils.formatTime(sleepTime));"
2bcc605a3ff,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-08-26,18:53:00,1416,
a8f9f4d751e,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-06-23,03:49:23,1417,      /* MajorCompactPriority is configurable.
a8f9f4d751e,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-06-23,03:49:23,1418,"       * If not set, the compaction will use default priority."
a8f9f4d751e,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-06-23,03:49:23,1419,       */
a8f9f4d751e,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-06-23,03:49:23,1420,      this.majorCompactPriority = this.instance.conf.
a8f9f4d751e,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-06-23,03:49:23,1421,"        getInt(""hbase.regionserver.compactionChecker.majorCompactPriority"","
2bcc605a3ff,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-08-26,18:53:00,1422,        DEFAULT_PRIORITY);
79be2d87f7a,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2008-11-15,00:36:27,1423,    }
79be2d87f7a,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2008-11-15,00:36:27,1424,
79be2d87f7a,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2008-11-15,00:36:27,1425,    @Override
79be2d87f7a,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2008-11-15,00:36:27,1426,    protected void chore() {
b500e86e2d8,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-03-24,20:25:10,1427,      for (HRegion r : this.instance.onlineRegions.values()) {
1f4eb71478b,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Nicolas Spiegelberg,2011-05-10,23:20:45,1428,        if (r == null)
1f4eb71478b,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Nicolas Spiegelberg,2011-05-10,23:20:45,1429,          continue;
093c6fa19c1,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-08-17,16:46:07,1430,        for (Store s : r.getStores().values()) {
1f4eb71478b,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Nicolas Spiegelberg,2011-05-10,23:20:45,1431,          try {
0e9fbc727c8,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-04-30,00:32:31,1432,            long multiplier = s.getCompactionCheckMultiplier();
0e9fbc727c8,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-04-30,00:32:31,1433,            assert multiplier > 0;
0e9fbc727c8,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-04-30,00:32:31,1434,            if (iteration % multiplier != 0) continue;
a8f9f4d751e,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-06-23,03:49:23,1435,            if (s.needsCompaction()) {
1f4eb71478b,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Nicolas Spiegelberg,2011-05-10,23:20:45,1436,              // Queue a compaction. Will recognize if major is needed.
03dc97a1f41,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-06-11,00:24:21,1437,"              this.instance.compactSplitThread.requestSystemCompaction(r, s, getName()"
03dc97a1f41,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-06-11,00:24:21,1438,"                  + "" requests compaction"");"
a8f9f4d751e,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-06-23,03:49:23,1439,            } else if (s.isMajorCompaction()) {
1a766c42a18,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jyates,2013-02-20,22:40:55,1440,              if (majorCompactPriority == DEFAULT_PRIORITY
1a766c42a18,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jyates,2013-02-20,22:40:55,1441,                  || majorCompactPriority > r.getCompactPriority()) {
1a766c42a18,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jyates,2013-02-20,22:40:55,1442,"                this.instance.compactSplitThread.requestCompaction(r, s, getName()"
1a766c42a18,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jyates,2013-02-20,22:40:55,1443,"                    + "" requests major compaction; use default priority"", null);"
a8f9f4d751e,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-06-23,03:49:23,1444,              } else {
1a766c42a18,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jyates,2013-02-20,22:40:55,1445,"                this.instance.compactSplitThread.requestCompaction(r, s, getName()"
1a766c42a18,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jyates,2013-02-20,22:40:55,1446,"                    + "" requests major compaction; use configured priority"","
1a766c42a18,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jyates,2013-02-20,22:40:55,1447,"                  this.majorCompactPriority, null);"
a8f9f4d751e,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-06-23,03:49:23,1448,              }
1f4eb71478b,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Nicolas Spiegelberg,2011-05-10,23:20:45,1449,            }
1f4eb71478b,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Nicolas Spiegelberg,2011-05-10,23:20:45,1450,          } catch (IOException e) {
1f4eb71478b,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Nicolas Spiegelberg,2011-05-10,23:20:45,1451,"            LOG.warn(""Failed major compaction check on "" + r, e);"
79be2d87f7a,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2008-11-15,00:36:27,1452,          }
79be2d87f7a,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2008-11-15,00:36:27,1453,        }
79be2d87f7a,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2008-11-15,00:36:27,1454,      }
0e9fbc727c8,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-04-30,00:32:31,1455,      iteration = (iteration == Long.MAX_VALUE) ? 0 : (iteration + 1);
79be2d87f7a,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2008-11-15,00:36:27,1456,    }
400e183da5f,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-11-21,00:14:09,1457,  }
2ab4b145720,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-12-11,21:53:35,1458,
b65d39bc9dc,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-04-25,17:50:17,1459,  class PeriodicMemstoreFlusher extends Chore {
b65d39bc9dc,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-04-25,17:50:17,1460,    final HRegionServer server;
b65d39bc9dc,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-04-25,17:50:17,1461,    final static int RANGE_OF_DELAY = 20000; //millisec
b65d39bc9dc,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-04-25,17:50:17,1462,    final static int MIN_DELAY_TIME = 3000; //millisec
b65d39bc9dc,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-04-25,17:50:17,1463,"    public PeriodicMemstoreFlusher(int cacheFlushInterval, final HRegionServer server) {"
b65d39bc9dc,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-04-25,17:50:17,1464,"      super(server.getServerName() + ""-MemstoreFlusherChore"", cacheFlushInterval, server);"
b65d39bc9dc,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-04-25,17:50:17,1465,      this.server = server;
b65d39bc9dc,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-04-25,17:50:17,1466,    }
b65d39bc9dc,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-04-25,17:50:17,1467,
b65d39bc9dc,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-04-25,17:50:17,1468,    @Override
b65d39bc9dc,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-04-25,17:50:17,1469,    protected void chore() {
b65d39bc9dc,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-04-25,17:50:17,1470,      for (HRegion r : this.server.onlineRegions.values()) {
b65d39bc9dc,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-04-25,17:50:17,1471,        if (r == null)
b65d39bc9dc,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-04-25,17:50:17,1472,          continue;
b65d39bc9dc,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-04-25,17:50:17,1473,        if (r.shouldFlush()) {
b65d39bc9dc,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-04-25,17:50:17,1474,          FlushRequester requester = server.getFlushRequester();
b65d39bc9dc,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-04-25,17:50:17,1475,          if (requester != null) {
b65d39bc9dc,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-04-25,17:50:17,1476,            long randomDelay = rand.nextInt(RANGE_OF_DELAY) + MIN_DELAY_TIME;
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-03,03:52:15,1477,"            LOG.info(getName() + "" requesting flush for region "" + r.getRegionNameAsString() +"
b65d39bc9dc,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-04-25,17:50:17,1478,"                "" after a delay of "" + randomDelay);"
b65d39bc9dc,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-04-25,17:50:17,1479,"            //Throttle the flushes by putting a delay. If we don\'t throttle, and there"
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-03,03:52:15,1480,"            //is a balanced write-load on the regions in a table, we might end up"
b65d39bc9dc,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-04-25,17:50:17,1481,            //overwhelming the filesystem with too many flushes at once.
b65d39bc9dc,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-04-25,17:50:17,1482,"            requester.requestDelayedFlush(r, randomDelay);"
b65d39bc9dc,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-04-25,17:50:17,1483,          }
b65d39bc9dc,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-04-25,17:50:17,1484,        }
b65d39bc9dc,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-04-25,17:50:17,1485,      }
b65d39bc9dc,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-04-25,17:50:17,1486,    }
b65d39bc9dc,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-04-25,17:50:17,1487,  }
b65d39bc9dc,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-04-25,17:50:17,1488,
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,1489,  /**
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1490,   * Report the status of the server. A server is online once all the startup is
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1491,"   * completed (setting up filesystem, starting service threads, etc.). This"
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,1492,   * method is designed mostly to be useful in tests.
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1493,   *
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,1494,"   * @return true if online, false if not."
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,1495,   */
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,1496,  public boolean isOnline() {
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,1497,    return isOnline;
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,1498,  }
e06e00450ef,core/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-05-07,19:26:45,1499,
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1500,  /**
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1501,   * Setup WAL log and replication if enabled.
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1502,   * Replication setup is done in here because it wants to be hooked up to WAL.
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1503,   * @return A WAL instance.
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1504,   * @throws IOException
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1505,   */
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1506,  private HLog setupWALAndReplication() throws IOException {
41938755804,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-06-11,17:49:55,1507,"    final Path oldLogDir = new Path(rootDir, HConstants.HREGION_OLDLOGDIR_NAME);"
ac368c1ae8a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-10-02,19:29:19,1508,    final String logName
ac368c1ae8a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-10-02,19:29:19,1509,      = HLogUtil.getHLogDirectoryName(this.serverNameFromMasterPOV.toString());
ac368c1ae8a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-10-02,19:29:19,1510,
ac368c1ae8a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-10-02,19:29:19,1511,"    Path logdir = new Path(rootDir, logName);"
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,1512,"    if (LOG.isDebugEnabled()) LOG.debug(""logdir="" + logdir);"
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1513,    if (this.fs.exists(logdir)) {
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,1514,"      throw new RegionServerRunningException(""Region server has already "" +"
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,1515,"        ""created directory at "" + this.serverNameFromMasterPOV.toString());"
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,1516,    }
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1517,
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1518,    // Instantiate replication manager if replication enabled.  Pass it the
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1519,    // log directories.
2c988abf35a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Gray,2011-09-28,15:56:22,1520,"    createNewReplicationInstance(conf, this, this.fs, logdir, oldLogDir);"
1793a0bbcd5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-12-21,04:29:43,1521,
ac368c1ae8a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-10-02,19:29:19,1522,"    return instantiateHLog(rootDir, logName);"
61970dc11e1,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2009-06-28,05:47:35,1523,  }
61970dc11e1,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2009-06-28,05:47:35,1524,
9575f0f0a0a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-01-14,21:43:31,1525,  private HLog getMetaWAL() throws IOException {
549a152a383,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-07-17,05:36:42,1526,    if (this.hlogForMeta != null) return this.hlogForMeta;
549a152a383,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-07-17,05:36:42,1527,    final String logName = HLogUtil.getHLogDirectoryName(this.serverNameFromMasterPOV.toString());
549a152a383,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-07-17,05:36:42,1528,"    Path logdir = new Path(rootDir, logName);"
549a152a383,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-07-17,05:36:42,1529,"    if (LOG.isDebugEnabled()) LOG.debug(""logdir="" + logdir);"
549a152a383,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-07-17,05:36:42,1530,"    this.hlogForMeta = HLogFactory.createMetaHLog(this.fs.getBackingFs(), rootDir, logName,"
549a152a383,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-07-17,05:36:42,1531,"      this.conf, getMetaWALActionListeners(), this.serverNameFromMasterPOV.toString());"
9575f0f0a0a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-01-14,21:43:31,1532,    return this.hlogForMeta;
9575f0f0a0a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-01-14,21:43:31,1533,  }
9575f0f0a0a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-01-14,21:43:31,1534,
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1535,  /**
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1536,   * Called by {@link #setupWALAndReplication()} creating WAL instance.
e21c9fde832,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-12-18,19:07:34,1537,   * @param rootdir
e21c9fde832,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-12-18,19:07:34,1538,   * @param logName
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1539,   * @return WAL instance.
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1540,   * @throws IOException
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1541,   */
ac368c1ae8a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-10-02,19:29:19,1542,"  protected HLog instantiateHLog(Path rootdir, String logName) throws IOException {"
ac368c1ae8a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-10-02,19:29:19,1543,"    return HLogFactory.createHLog(this.fs.getBackingFs(), rootdir, logName, this.conf,"
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,1544,"      getWALActionListeners(), this.serverNameFromMasterPOV.toString());"
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,1545,  }
49599944be6,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2009-06-25,23:10:11,1546,
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1547,  /**
07d670920e2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-16,09:58:29,1548,"   * Called by {@link #instantiateHLog(Path, String)} setting up WAL instance."
1185c6c89c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2011-08-09,04:39:34,1549,   * Add any {@link WALActionsListener}s you want inserted before WAL startup.
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1550,   * @return List of WALActionsListener that will be passed in to
07d670920e2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-16,09:58:29,1551,   * {@link org.apache.hadoop.hbase.regionserver.wal.FSHLog} on construction.
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1552,   */
1185c6c89c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2011-08-09,04:39:34,1553,  protected List<WALActionsListener> getWALActionListeners() {
1185c6c89c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2011-08-09,04:39:34,1554,    List<WALActionsListener> listeners = new ArrayList<WALActionsListener>();
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1555,    // Log roller.
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1556,"    this.hlogRoller = new LogRoller(this, this);"
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1557,    listeners.add(this.hlogRoller);
2c988abf35a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Gray,2011-09-28,15:56:22,1558,    if (this.replicationSourceHandler != null &&
2c988abf35a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Gray,2011-09-28,15:56:22,1559,        this.replicationSourceHandler.getWALActionsListener() != null) {
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1560,      // Replication handler is an implementation of WALActionsListener.
2c988abf35a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Gray,2011-09-28,15:56:22,1561,      listeners.add(this.replicationSourceHandler.getWALActionsListener());
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1562,    }
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1563,    return listeners;
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1564,  }
e06e00450ef,core/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-05-07,19:26:45,1565,
9575f0f0a0a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-01-14,21:43:31,1566,  protected List<WALActionsListener> getMetaWALActionListeners() {
9575f0f0a0a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-01-14,21:43:31,1567,    List<WALActionsListener> listeners = new ArrayList<WALActionsListener>();
a06597e34ac,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-01-16,05:45:13,1568,    // Using a tmp log roller to ensure metaLogRoller is alive once it is not
a06597e34ac,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-01-16,05:45:13,1569,    // null
a06597e34ac,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-01-16,05:45:13,1570,"    MetaLogRoller tmpLogRoller = new MetaLogRoller(this, this);"
9575f0f0a0a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-01-14,21:43:31,1571,    String n = Thread.currentThread().getName();
a06597e34ac,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-01-16,05:45:13,1572,"    Threads.setDaemonThreadRunning(tmpLogRoller.getThread(),"
549a152a383,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-07-17,05:36:42,1573,"        n + ""-MetaLogRoller"", uncaughtExceptionHandler);"
a06597e34ac,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-01-16,05:45:13,1574,    this.metaHLogRoller = tmpLogRoller;
a06597e34ac,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-01-16,05:45:13,1575,    tmpLogRoller = null;
9575f0f0a0a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-01-14,21:43:31,1576,    listeners.add(this.metaHLogRoller);
9575f0f0a0a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-01-14,21:43:31,1577,    return listeners;
9575f0f0a0a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-01-14,21:43:31,1578,  }
9575f0f0a0a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-01-14,21:43:31,1579,
61970dc11e1,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2009-06-28,05:47:35,1580,  protected LogRoller getLogRoller() {
61970dc11e1,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2009-06-28,05:47:35,1581,    return hlogRoller;
e06e00450ef,core/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-05-07,19:26:45,1582,  }
e06e00450ef,core/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-05-07,19:26:45,1583,
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2012-11-06,23:22:01,1584,  public MetricsRegionServer getMetrics() {
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2012-11-06,23:22:01,1585,    return this.metricsRegionServer;
e95b049d337,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2008-10-29,21:06:29,1586,  }
e95b049d337,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2008-10-29,21:06:29,1587,
8c2a573d487,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Todd Lipcon,2012-01-09,05:43:40,1588,  /**
8c2a573d487,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Todd Lipcon,2012-01-09,05:43:40,1589,   * @return Master address tracker instance.
8c2a573d487,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Todd Lipcon,2012-01-09,05:43:40,1590,   */
6b2437de2cc,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2014-03-14,03:02:21,1591,  public MasterAddressTracker getMasterAddressTracker() {
6b2437de2cc,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2014-03-14,03:02:21,1592,    return this.masterAddressTracker;
8c2a573d487,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Todd Lipcon,2012-01-09,05:43:40,1593,  }
8c2a573d487,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Todd Lipcon,2012-01-09,05:43:40,1594,
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,1595,  /*
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,1596,"   * Start maintenance Threads, Server, Worker and lease checker threads."
cf7ae9adcb6,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-10-27,21:25:35,1597,   * Install an UncaughtExceptionHandler that calls abort of RegionServer if we
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1598,   * get an unhandled exception. We cannot set the handler on all threads.
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1599,"   * Server\'s internal Listener thread is off limits. For Server, if an OOME, it"
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1600,"   * waits a while then retries. Meantime, a flush or a compaction that tries to"
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1601,   * run should trigger same critical condition and the shutdown will run. On
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1602,"   * its way out, this server will shut down Server. Leases are sort of"
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1603,"   * inbetween. It has an internal thread that while it inherits from Chore, it"
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1604,   * keeps its own internal stop mechanism so needs to be stopped by this
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1605,   * hosting server. Worker logs the exception and exits.
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,1606,   */
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,1607,  private void startServiceThreads() throws IOException {
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,1608,    String n = Thread.currentThread().getName();
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1609,    // Start executor services
b5bdfb6f3f2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-06-05,23:16:20,1610,    this.service = new ExecutorService(getServerName().toShortString());
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1611,"    this.service.startExecutorService(ExecutorType.RS_OPEN_REGION,"
1d6743ae7fa,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-10-23,06:32:02,1612,"      conf.getInt(""hbase.regionserver.executor.openregion.threads"", 3));"
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1613,"    this.service.startExecutorService(ExecutorType.RS_OPEN_META,"
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1614,"      conf.getInt(""hbase.regionserver.executor.openmeta.threads"", 1));"
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1615,"    this.service.startExecutorService(ExecutorType.RS_CLOSE_REGION,"
1d6743ae7fa,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-10-23,06:32:02,1616,"      conf.getInt(""hbase.regionserver.executor.closeregion.threads"", 3));"
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1617,"    this.service.startExecutorService(ExecutorType.RS_CLOSE_META,"
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1618,"      conf.getInt(""hbase.regionserver.executor.closemeta.threads"", 1));"
e0e0c44e343,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-02-19,14:51:05,1619,"    if (conf.getBoolean(StoreScanner.STORESCANNER_PARALLEL_SEEK_ENABLE, false)) {"
e0e0c44e343,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-02-19,14:51:05,1620,"      this.service.startExecutorService(ExecutorType.RS_PARALLEL_SEEK,"
e0e0c44e343,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-02-19,14:51:05,1621,"        conf.getInt(""hbase.storescanner.parallel.seek.threads"", 10));"
e0e0c44e343,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-02-19,14:51:05,1622,    }
ad5436eaa17,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-11-24,19:21:54,1623,"    this.service.startExecutorService(ExecutorType.RS_LOG_REPLAY_OPS,"
ad5436eaa17,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-11-24,19:21:54,1624,"      conf.getInt(""hbase.regionserver.wal.max.splitters"", SplitLogWorker.DEFAULT_MAX_SPLITTERS));"
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1625,
9575f0f0a0a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-01-14,21:43:31,1626,"    Threads.setDaemonThreadRunning(this.hlogRoller.getThread(), n + "".logRoller"","
9575f0f0a0a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-01-14,21:43:31,1627,        uncaughtExceptionHandler);
6c1aac8f0ef,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-01-23,17:28:09,1628,    this.cacheFlusher.start(uncaughtExceptionHandler);
9570f3c9079,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-10-25,07:40:25,1629,"    Threads.setDaemonThreadRunning(this.compactionChecker.getThread(), n +"
9575f0f0a0a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-01-14,21:43:31,1630,"      "".compactionChecker"", uncaughtExceptionHandler);"
b65d39bc9dc,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-04-25,17:50:17,1631,"    Threads.setDaemonThreadRunning(this.periodicFlusher.getThread(), n +"
b65d39bc9dc,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-04-25,17:50:17,1632,"        "".periodicFlusher"", uncaughtExceptionHandler);"
a1079157eca,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2013-01-03,02:12:24,1633,    if (this.healthCheckChore != null) {
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,1634,"      Threads.setDaemonThreadRunning(this.healthCheckChore.getThread(), n + "".healthChecker"","
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,1635,            uncaughtExceptionHandler);
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,1636,    }
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,1637,    if (this.nonceManagerChore != null) {
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,1638,"      Threads.setDaemonThreadRunning(this.nonceManagerChore.getThread(), n + "".nonceCleaner"","
9575f0f0a0a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-01-14,21:43:31,1639,            uncaughtExceptionHandler);
a1079157eca,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2013-01-03,02:12:24,1640,    }
e06e00450ef,core/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-05-07,19:26:45,1641,
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1642,    // Leases is not a Thread. Internally it runs a daemon thread. If it gets
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,1643,"    // an unhandled exception, it will just exit."
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,1644,"    this.leases.setName(n + "".leaseChecker"");"
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,1645,    this.leases.start();
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,1646,
2c988abf35a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Gray,2011-09-28,15:56:22,1647,    if (this.replicationSourceHandler == this.replicationSinkHandler &&
2c988abf35a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Gray,2011-09-28,15:56:22,1648,        this.replicationSourceHandler != null) {
2c988abf35a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Gray,2011-09-28,15:56:22,1649,      this.replicationSourceHandler.startReplicationService();
b33e4daa2f9,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,anoopsamjohn,2013-11-16,07:40:51,1650,    } else {
b33e4daa2f9,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,anoopsamjohn,2013-11-16,07:40:51,1651,      if (this.replicationSourceHandler != null) {
b33e4daa2f9,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,anoopsamjohn,2013-11-16,07:40:51,1652,        this.replicationSourceHandler.startReplicationService();
b33e4daa2f9,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,anoopsamjohn,2013-11-16,07:40:51,1653,      }
b33e4daa2f9,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,anoopsamjohn,2013-11-16,07:40:51,1654,      if (this.replicationSinkHandler != null) {
b33e4daa2f9,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,anoopsamjohn,2013-11-16,07:40:51,1655,        this.replicationSinkHandler.startReplicationService();
b33e4daa2f9,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,anoopsamjohn,2013-11-16,07:40:51,1656,      }
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1657,    }
03933720fa4,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jean-Daniel Cryans,2010-07-01,00:25:50,1658,
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,1659,    // Start Server.  This service is like leases in that it internally runs
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,1660,    // a thread.
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,1661,    this.rpcServer.start();
659da04632b,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-05-02,18:04:19,1662,
659da04632b,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-05-02,18:04:19,1663,    // Create the log splitting worker and start it
f5ecf2c83c8,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-06-05,01:12:59,1664,    // set a smaller retries to fast fail otherwise splitlogworker could be blocked for
f5ecf2c83c8,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-06-05,01:12:59,1665,    // quite a while inside HConnection layer. The worker won\'t be available for other
f5ecf2c83c8,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-06-05,01:12:59,1666,    // tasks even after current task is preempted after a split task times out.
f5ecf2c83c8,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-06-05,01:12:59,1667,    Configuration sinkConf = HBaseConfiguration.create(conf);
7fa275407fd,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-07-15,21:38:37,1668,"    sinkConf.setInt(HConstants.HBASE_CLIENT_RETRIES_NUMBER,"
8e78536a3b6,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-07-05,07:44:00,1669,"      conf.getInt(""hbase.log.replay.retries.number"", 8)); // 8 retries take about 23 seconds"
8e78536a3b6,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-07-05,07:44:00,1670,"    sinkConf.setInt(HConstants.HBASE_RPC_TIMEOUT_KEY,"
8e78536a3b6,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-07-05,07:44:00,1671,"      conf.getInt(""hbase.log.replay.rpc.timeout"", 30000)); // default 30 seconds"
f5ecf2c83c8,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-06-05,01:12:59,1672,"    sinkConf.setInt(""hbase.client.serverside.retries.multiplier"", 1);"
f5ecf2c83c8,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-06-05,01:12:59,1673,"    this.splitLogWorker = new SplitLogWorker(this.zooKeeper, sinkConf, this, this);"
659da04632b,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-05-02,18:04:19,1674,    splitLogWorker.start();
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,1675,  }
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,1676,
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,1677,  /**
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,1678,   * Puts up the webui.
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,1679,   * @return Returns final port -- maybe different from what we started with.
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,1680,   * @throws IOException
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,1681,   */
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,1682,  private int putUpWebUI() throws IOException {
0e47eb67ffc,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Hsieh,2014-01-17,17:37:25,1683,"    int port = this.conf.getInt(HConstants.REGIONSERVER_INFO_PORT,"
0e47eb67ffc,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Hsieh,2014-01-17,17:37:25,1684,\t\t\t\tHConstants.DEFAULT_REGIONSERVER_INFOPORT);
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,1685,    // -1 is for disabling info server
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,1686,    if (port < 0) return port;
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,1687,"    String addr = this.conf.get(""hbase.regionserver.info.bindAddress"", ""0.0.0.0"");"
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,1688,    // check if auto port bind enabled
09d0aff149a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Nicolas Spiegelberg,2011-12-08,02:38:27,1689,"    boolean auto = this.conf.getBoolean(HConstants.REGIONSERVER_INFO_PORT_AUTO,"
09d0aff149a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Nicolas Spiegelberg,2011-12-08,02:38:27,1690,        false);
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,1691,    while (true) {
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,1692,      try {
7cd5403b30a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-06-09,21:27:41,1693,"        this.infoServer = new InfoServer(""regionserver"", addr, port, false, this.conf);"
2bcc605a3ff,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-08-26,18:53:00,1694,"        this.infoServer.addServlet(""status"", ""/rs-status"", RSStatusServlet.class);"
954b292bbfc,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Todd Lipcon,2011-08-30,21:08:04,1695,"        this.infoServer.addServlet(""dump"", ""/dump"", RSDumpServlet.class);"
46d64afcd9d,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Todd Lipcon,2011-05-03,19:07:00,1696,"        this.infoServer.setAttribute(REGIONSERVER, this);"
2c6948780bb,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-07-11,14:06:20,1697,"        this.infoServer.setAttribute(REGIONSERVER_CONF, conf);"
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,1698,        this.infoServer.start();
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,1699,        break;
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,1700,      } catch (BindException e) {
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,1701,        if (!auto) {
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,1702,          // auto bind disabled throw BindException
e849b9bfb9f,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-25,04:41:28,1703,"          LOG.error(""Failed binding http info server to port: "" + port);"
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,1704,          throw e;
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,1705,        }
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,1706,"        // auto bind enabled, try to use another port"
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,1707,"        LOG.info(""Failed binding http info server to port: "" + port);"
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,1708,        port++;
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,1709,      }
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,1710,    }
7ea071db1ff,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-12-17,04:35:59,1711,    return this.infoServer.getPort();
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,1712,  }
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,1713,
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,1714,  /*
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,1715,   * Verify that server is healthy
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,1716,   */
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,1717,  private boolean isHealthy() {
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,1718,    if (!fsOk) {
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,1719,      // File system problem
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,1720,      return false;
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,1721,    }
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,1722,    // Verify that all threads are alive
770b7458078,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Nicolas Spiegelberg,2011-05-10,23:21:04,1723,    if (!(leases.isAlive()
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1724,        && cacheFlusher.isAlive() && hlogRoller.isAlive()
80e007aa985,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2014-02-28,17:32:49,1725,        && this.compactionChecker.isAlive()
80e007aa985,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2014-02-28,17:32:49,1726,        && this.periodicFlusher.isAlive())) {
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1727,"      stop(""One or more threads are no longer alive -- stop"");"
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,1728,      return false;
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,1729,    }
9575f0f0a0a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-01-14,21:43:31,1730,    if (metaHLogRoller != null && !metaHLogRoller.isAlive()) {
9575f0f0a0a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-01-14,21:43:31,1731,"      stop(""Meta HLog roller thread is no longer alive -- stop"");"
9575f0f0a0a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-01-14,21:43:31,1732,      return false;
9575f0f0a0a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-01-14,21:43:31,1733,    }
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,1734,    return true;
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,1735,  }
bc6ad67d673,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2009-05-07,16:47:39,1736,
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1737,  public HLog getWAL() {
9575f0f0a0a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-01-14,21:43:31,1738,    try {
9575f0f0a0a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-01-14,21:43:31,1739,      return getWAL(null);
9575f0f0a0a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-01-14,21:43:31,1740,    } catch (IOException e) {
9575f0f0a0a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-01-14,21:43:31,1741,"      LOG.warn(""getWAL threw exception "" + e);"
5fde90f68f2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-03-20,19:36:46,1742,      return null;
9575f0f0a0a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-01-14,21:43:31,1743,    }
9575f0f0a0a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-01-14,21:43:31,1744,  }
9575f0f0a0a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-01-14,21:43:31,1745,
9575f0f0a0a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-01-14,21:43:31,1746,  @Override
9575f0f0a0a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-01-14,21:43:31,1747,  public HLog getWAL(HRegionInfo regionInfo) throws IOException {
9575f0f0a0a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-01-14,21:43:31,1748,    //TODO: at some point this should delegate to the HLogFactory
5fde90f68f2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-03-20,19:36:46,1749,"    //currently, we don\'t care about the region as much as we care about the"
9575f0f0a0a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-01-14,21:43:31,1750,    //table.. (hence checking the tablename below)
df49eca1eb0,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-09-06,00:29:48,1751,    //_ROOT_ and hbase:meta regions have separate WAL.
549a152a383,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-07-17,05:36:42,1752,    if (regionInfo != null && regionInfo.isMetaTable()) {
9575f0f0a0a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-01-14,21:43:31,1753,      return getMetaWAL();
9575f0f0a0a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-01-14,21:43:31,1754,    }
cff0b8bb04d,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2009-05-16,06:10:44,1755,    return this.hlog;
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,1756,  }
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,1757,
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1758,  @Override
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1759,  public CatalogTracker getCatalogTracker() {
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1760,    return this.catalogTracker;
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1761,  }
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1762,
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1763,  @Override
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1764,  public void stop(final String msg) {
1ef06216950,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2012-12-14,21:12:36,1765,    try {
6cc0c861336,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2014-01-22,20:17:43,1766,    \tif (this.rsHost != null) {
6cc0c861336,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2014-01-22,20:17:43,1767,    \t\tthis.rsHost.preStop(msg);
6cc0c861336,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2014-01-22,20:17:43,1768,    \t}
1ef06216950,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2012-12-14,21:12:36,1769,      this.stopped = true;
1ef06216950,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2012-12-14,21:12:36,1770,"      LOG.info(""STOPPED: "" + msg);"
1ef06216950,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2012-12-14,21:12:36,1771,      // Wakes run() if it is sleeping
1ef06216950,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2012-12-14,21:12:36,1772,      sleeper.skipSleepCycle();
1ef06216950,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2012-12-14,21:12:36,1773,    } catch (IOException exp) {
1ef06216950,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2012-12-14,21:12:36,1774,"      LOG.warn(""The region server did not stop"", exp);"
1ef06216950,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2012-12-14,21:12:36,1775,    }
23532b3538c,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-11-22,01:04:40,1776,  }
23532b3538c,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-11-22,01:04:40,1777,
23532b3538c,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-11-22,01:04:40,1778,  public void waitForServerOnline(){
23532b3538c,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-11-22,01:04:40,1779,    while (!isOnline() && !isStopped()){
23532b3538c,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-11-22,01:04:40,1780,       sleeper.sleep();
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,1781,    }
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,1782,  }
19b01d968d3,core/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-04-30,06:52:27,1783,
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1784,  @Override
2cfb9cae5d2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-03-08,19:10:32,1785,"  public void postOpenDeployTasks(final HRegion r, final CatalogTracker ct)"
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1786,"  throws KeeperException, IOException {"
a7dcdedb865,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,larsh,2012-07-08,19:21:30,1787,    checkOpen();
2cfb9cae5d2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-03-08,19:10:32,1788,"    LOG.info(""Post open deploy tasks for region="" + r.getRegionNameAsString());"
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1789,    // Do checks to see if we need to compact (references or too many files)
093c6fa19c1,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-08-17,16:46:07,1790,    for (Store s : r.getStores().values()) {
1f4eb71478b,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Nicolas Spiegelberg,2011-05-10,23:20:45,1791,      if (s.hasReferences() || s.needsCompaction()) {
03dc97a1f41,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-06-11,00:24:21,1792,"       this.compactSplitThread.requestSystemCompaction(r, s, ""Opening Region"");"
1f4eb71478b,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Nicolas Spiegelberg,2011-05-10,23:20:45,1793,      }
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1794,    }
f17016bd5b2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-01-21,20:07:25,1795,    long openSeqNum = r.getOpenSeqNum();
f17016bd5b2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-01-21,20:07:25,1796,    if (openSeqNum == HConstants.NO_SEQNUM) {
f17016bd5b2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-01-21,20:07:25,1797,"      // If we opened a region, we should have read some sequence number from it."
f17016bd5b2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-01-21,20:07:25,1798,"      LOG.error(""No sequence number found when opening "" + r.getRegionNameAsString());"
f17016bd5b2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-01-21,20:07:25,1799,      openSeqNum = 0;
f17016bd5b2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-01-21,20:07:25,1800,    }
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,1801,
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,1802,    // Update flushed sequence id of a recovering region in ZK
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,1803,    updateRecoveringRegionLastFlushedSequenceId(r);
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,1804,
3a23adf5aba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-03-08,22:37:19,1805,"    // Update ZK, or META"
3a23adf5aba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-03-08,22:37:19,1806,    if (r.getRegionInfo().isMetaRegion()) {
3a23adf5aba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-03-08,22:37:19,1807,"      MetaRegionTracker.setMetaLocation(getZooKeeper(),"
3a23adf5aba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-03-08,22:37:19,1808,          this.serverNameFromMasterPOV);
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1809,    } else {
2cfb9cae5d2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-03-08,19:10:32,1810,"      MetaEditor.updateRegionLocation(ct, r.getRegionInfo(),"
2cfb9cae5d2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-03-08,19:10:32,1811,"        this.serverNameFromMasterPOV, openSeqNum);"
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1812,    }
41db4e539f3,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-08-21,19:25:21,1813,"    LOG.info(""Finished post open deploy task for "" + r.getRegionNameAsString());"
d8f5be74d76,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-06-14,05:40:32,1814,
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1815,  }
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1816,
d70a6ec7168,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Gary Helmling,2011-09-16,23:59:56,1817,  @Override
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-03,03:52:15,1818,  public RpcServerInterface getRpcServer() {
d70a6ec7168,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Gary Helmling,2011-09-16,23:59:56,1819,    return rpcServer;
d70a6ec7168,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Gary Helmling,2011-09-16,23:59:56,1820,  }
d70a6ec7168,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Gary Helmling,2011-09-16,23:59:56,1821,
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,1822,  /**
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1823,"   * Cause the server to exit without closing the regions it is serving, the log"
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1824,   * it is using and without notifying the master. Used unit testing and on
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1825,   * catastrophic events such as HDFS is yanked out from under hbase or we OOME.
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1826,   *
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1827,   * @param reason
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1828,   *          the reason we are aborting
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1829,   * @param cause
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1830,"   *          the exception that caused the abort, or null"
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,1831,   */
7fa275407fd,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-07-15,21:38:37,1832,  @Override
43b0753558d,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Todd Lipcon,2010-06-15,05:04:42,1833,"  public void abort(String reason, Throwable cause) {"
48560e089c3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Todd Lipcon,2011-08-30,19:27:24,1834,"    String msg = ""ABORTING region server "" + this + "": "" + reason;"
43b0753558d,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Todd Lipcon,2010-06-15,05:04:42,1835,    if (cause != null) {
48560e089c3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Todd Lipcon,2011-08-30,19:27:24,1836,"      LOG.fatal(msg, cause);"
43b0753558d,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Todd Lipcon,2010-06-15,05:04:42,1837,    } else {
48560e089c3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Todd Lipcon,2011-08-30,19:27:24,1838,      LOG.fatal(msg);
43b0753558d,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Todd Lipcon,2010-06-15,05:04:42,1839,    }
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,1840,    this.abortRequested = true;
581421a6b2e,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2011-09-25,03:46:53,1841,    // HBASE-4014: show list of coprocessors that were loaded to help debug
581421a6b2e,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2011-09-25,03:46:53,1842,    // regionserver crashes.Note that we\'re implicitly using
581421a6b2e,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2011-09-25,03:46:53,1843,    // java.util.HashSet\'s toString() method to print the coprocessor names.
581421a6b2e,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2011-09-25,03:46:53,1844,"    LOG.fatal(""RegionServer abort: loaded coprocessors are: "" +"
581421a6b2e,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2011-09-25,03:46:53,1845,        CoprocessorHost.getLoadedCoprocessors());
48560e089c3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Todd Lipcon,2011-08-30,19:27:24,1846,"    // Do our best to report our abort to the master, but this may not work"
48560e089c3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Todd Lipcon,2011-08-30,19:27:24,1847,    try {
48560e089c3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Todd Lipcon,2011-08-30,19:27:24,1848,      if (cause != null) {
48560e089c3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Todd Lipcon,2011-08-30,19:27:24,1849,"        msg += ""\\nCause:\\n"" + StringUtils.stringifyException(cause);"
48560e089c3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Todd Lipcon,2011-08-30,19:27:24,1850,      }
5fde90f68f2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-03-20,19:36:46,1851,      // Report to the master but only if we have already registered with the master.
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-03,03:52:15,1852,      if (rssStub != null && this.serverNameFromMasterPOV != null) {
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-03,06:20:26,1853,        ReportRSFatalErrorRequest.Builder builder =
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-03,06:20:26,1854,          ReportRSFatalErrorRequest.newBuilder();
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-03,06:20:26,1855,        ServerName sn =
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-03,06:20:26,1856,          ServerName.parseVersionedServerName(this.serverNameFromMasterPOV.getVersionedBytes());
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-03,06:20:26,1857,        builder.setServer(ProtobufUtil.toServerName(sn));
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-03,06:20:26,1858,        builder.setErrorMessage(msg);
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-03,03:52:15,1859,"        rssStub.reportRSFatalError(null, builder.build());"
48560e089c3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Todd Lipcon,2011-08-30,19:27:24,1860,      }
48560e089c3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Todd Lipcon,2011-08-30,19:27:24,1861,    } catch (Throwable t) {
48560e089c3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Todd Lipcon,2011-08-30,19:27:24,1862,"      LOG.warn(""Unable to report fatal error to master"", t);"
48560e089c3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Todd Lipcon,2011-08-30,19:27:24,1863,    }
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1864,    stop(reason);
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,1865,  }
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1866,
43b0753558d,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Todd Lipcon,2010-06-15,05:04:42,1867,  /**
43b0753558d,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Todd Lipcon,2010-06-15,05:04:42,1868,"   * @see HRegionServer#abort(String, Throwable)"
43b0753558d,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Todd Lipcon,2010-06-15,05:04:42,1869,   */
43b0753558d,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Todd Lipcon,2010-06-15,05:04:42,1870,  public void abort(String reason) {
43b0753558d,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Todd Lipcon,2010-06-15,05:04:42,1871,"    abort(reason, null);"
43b0753558d,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Todd Lipcon,2010-06-15,05:04:42,1872,  }
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,1873,
7fa275407fd,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-07-15,21:38:37,1874,  @Override
f70dd57e1eb,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-09-17,18:26:03,1875,  public boolean isAborted() {
f70dd57e1eb,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-09-17,18:26:03,1876,    return this.abortRequested;
f70dd57e1eb,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-09-17,18:26:03,1877,  }
77dae7ccb78,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-12-08,00:11:26,1878,
479c53423c9,core/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-05-08,06:27:15,1879,  /*
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1880,   * Simulate a kill -9 of this server. Exits w/o closing regions or cleaninup
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1881,   * logs but it does close socket in case want to bring up server on old
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1882,   * hostname+port immediately.
479c53423c9,core/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-05-08,06:27:15,1883,   */
479c53423c9,core/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-05-08,06:27:15,1884,  protected void kill() {
479c53423c9,core/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-05-08,06:27:15,1885,    this.killed = true;
43b0753558d,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Todd Lipcon,2010-06-15,05:04:42,1886,"    abort(""Simulated kill"");"
479c53423c9,core/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-05-08,06:27:15,1887,  }
479c53423c9,core/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-05-08,06:27:15,1888,
e06e00450ef,core/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-05-07,19:26:45,1889,  /**
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1890,   * Wait on all threads to finish. Presumption is that all closes and stops
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1891,   * have already been called.
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,1892,   */
443686f1016,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jean-Daniel Cryans,2010-02-02,23:20:08,1893,  protected void join() {
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,1894,    if (this.nonceManagerChore != null) {
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,1895,      Threads.shutdown(this.nonceManagerChore.getThread());
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,1896,    }
9570f3c9079,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-10-25,07:40:25,1897,    Threads.shutdown(this.compactionChecker.getThread());
b65d39bc9dc,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-04-25,17:50:17,1898,    Threads.shutdown(this.periodicFlusher.getThread());
6c1aac8f0ef,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-01-23,17:28:09,1899,    this.cacheFlusher.join();
a1079157eca,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2013-01-03,02:12:24,1900,    if (this.healthCheckChore != null) {
a1079157eca,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2013-01-03,02:12:24,1901,      Threads.shutdown(this.healthCheckChore.getThread());
a1079157eca,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2013-01-03,02:12:24,1902,    }
5c2a90aa28c,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2013-08-14,23:20:51,1903,    if (this.spanReceiverHost != null) {
5c2a90aa28c,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2013-08-14,23:20:51,1904,      this.spanReceiverHost.closeReceivers();
5c2a90aa28c,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2013-08-14,23:20:51,1905,    }
7a8c36be23e,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2011-11-21,17:29:32,1906,    if (this.hlogRoller != null) {
7a8c36be23e,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2011-11-21,17:29:32,1907,      Threads.shutdown(this.hlogRoller.getThread());
7a8c36be23e,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2011-11-21,17:29:32,1908,    }
9575f0f0a0a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-01-14,21:43:31,1909,    if (this.metaHLogRoller != null) {
9575f0f0a0a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-01-14,21:43:31,1910,      Threads.shutdown(this.metaHLogRoller.getThread());
9575f0f0a0a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-01-14,21:43:31,1911,    }
770b7458078,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Nicolas Spiegelberg,2011-05-10,23:21:04,1912,    if (this.compactSplitThread != null) {
770b7458078,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Nicolas Spiegelberg,2011-05-10,23:21:04,1913,      this.compactSplitThread.join();
770b7458078,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Nicolas Spiegelberg,2011-05-10,23:21:04,1914,    }
7d42c217a9a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-29,03:33:27,1915,    if (this.service != null) this.service.shutdown();
2c988abf35a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Gray,2011-09-28,15:56:22,1916,    if (this.replicationSourceHandler != null &&
2c988abf35a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Gray,2011-09-28,15:56:22,1917,        this.replicationSourceHandler == this.replicationSinkHandler) {
2c988abf35a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Gray,2011-09-28,15:56:22,1918,      this.replicationSourceHandler.stopReplicationService();
335071f3422,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,anoopsamjohn,2013-11-19,17:10:32,1919,    } else {
335071f3422,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,anoopsamjohn,2013-11-19,17:10:32,1920,      if (this.replicationSourceHandler != null) {
335071f3422,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,anoopsamjohn,2013-11-19,17:10:32,1921,        this.replicationSourceHandler.stopReplicationService();
335071f3422,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,anoopsamjohn,2013-11-19,17:10:32,1922,      }
335071f3422,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,anoopsamjohn,2013-11-19,17:10:32,1923,      if (this.replicationSinkHandler != null) {
335071f3422,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,anoopsamjohn,2013-11-19,17:10:32,1924,        this.replicationSinkHandler.stopReplicationService();
335071f3422,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,anoopsamjohn,2013-11-19,17:10:32,1925,      }
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1926,    }
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,1927,  }
398b5f20ab3,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2009-04-03,01:24:45,1928,
2c988abf35a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Gray,2011-09-28,15:56:22,1929,  /**
2c988abf35a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Gray,2011-09-28,15:56:22,1930,   * @return Return the object that implements the replication
2c988abf35a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Gray,2011-09-28,15:56:22,1931,   * source service.
2c988abf35a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Gray,2011-09-28,15:56:22,1932,   */
2c988abf35a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Gray,2011-09-28,15:56:22,1933,  ReplicationSourceService getReplicationSourceService() {
2c988abf35a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Gray,2011-09-28,15:56:22,1934,    return replicationSourceHandler;
2c988abf35a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Gray,2011-09-28,15:56:22,1935,  }
2c988abf35a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Gray,2011-09-28,15:56:22,1936,
2c988abf35a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Gray,2011-09-28,15:56:22,1937,  /**
2c988abf35a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Gray,2011-09-28,15:56:22,1938,   * @return Return the object that implements the replication
2c988abf35a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Gray,2011-09-28,15:56:22,1939,   * sink service.
2c988abf35a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Gray,2011-09-28,15:56:22,1940,   */
2c988abf35a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Gray,2011-09-28,15:56:22,1941,  ReplicationSinkService getReplicationSinkService() {
2c988abf35a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Gray,2011-09-28,15:56:22,1942,    return replicationSinkHandler;
2c988abf35a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Gray,2011-09-28,15:56:22,1943,  }
2c988abf35a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Gray,2011-09-28,15:56:22,1944,
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1945,  /**
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1946,   * Get the current master from ZooKeeper and open the RPC connection to it.
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1947,   *
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1948,   * Method will block until a master is available. You can break from this
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1949,   * block by requesting the server stop.
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1950,   *
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,1951,"   * @return master + port, or null if server has been stopped"
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,1952,   */
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-03,03:52:15,1953,"  private Pair<ServerName, RegionServerStatusService.BlockingInterface>"
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-03,03:52:15,1954,  createRegionServerStatusStub() {
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-03,03:52:15,1955,    ServerName sn = null;
23532b3538c,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-11-22,01:04:40,1956,    long previousLogTime = 0;
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-03,03:52:15,1957,    RegionServerStatusService.BlockingInterface master = null;
814616687ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-04-10,18:29:31,1958,"    boolean refresh = false; // for the first time, use cached data"
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-03,03:52:15,1959,    RegionServerStatusService.BlockingInterface intf = null;
3f485568a92,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-20,15:16:46,1960,    boolean interrupted = false;
3f485568a92,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-20,15:16:46,1961,    try {
3f485568a92,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-20,15:16:46,1962,      while (keepLooping() && master == null) {
6b2437de2cc,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2014-03-14,03:02:21,1963,        sn = this.masterAddressTracker.getMasterAddress(refresh);
3f485568a92,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-20,15:16:46,1964,        if (sn == null) {
3f485568a92,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-20,15:16:46,1965,          if (!keepLooping()) {
3f485568a92,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-20,15:16:46,1966,            // give up with no connection.
3f485568a92,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-20,15:16:46,1967,"            LOG.debug(""No master found and cluster is stopped; bailing out"");"
3f485568a92,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-20,15:16:46,1968,            return null;
3f485568a92,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-20,15:16:46,1969,          }
3f485568a92,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-20,15:16:46,1970,"          LOG.debug(""No master found; retry"");"
3f485568a92,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-20,15:16:46,1971,          previousLogTime = System.currentTimeMillis();
3f485568a92,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-20,15:16:46,1972,          refresh = true; // let\'s try pull it from ZK directly
3f485568a92,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-20,15:16:46,1973,          sleeper.sleep();
3f485568a92,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-20,15:16:46,1974,          continue;
8fe40ce0e9c,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-12-20,06:46:17,1975,        }
8fe40ce0e9c,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-12-20,06:46:17,1976,
3f485568a92,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-20,15:16:46,1977,"        new InetSocketAddress(sn.getHostname(), sn.getPort());"
3f485568a92,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-20,15:16:46,1978,        try {
3f485568a92,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-20,15:16:46,1979,          BlockingRpcChannel channel =
21ddb60dc0a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-25,16:28:57,1980,"            this.rpcClient.createBlockingRpcChannel(sn, userProvider.getCurrent(), operationTimeout);"
3f485568a92,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-20,15:16:46,1981,          intf = RegionServerStatusService.newBlockingStub(channel);
3f485568a92,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-20,15:16:46,1982,          break;
3f485568a92,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-20,15:16:46,1983,        } catch (IOException e) {
3f485568a92,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-20,15:16:46,1984,          e = e instanceof RemoteException ?
ef96f378445,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jean-Daniel Cryans,2010-12-18,00:13:13,1985,            ((RemoteException)e).unwrapRemoteException() : e;
3f485568a92,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-20,15:16:46,1986,          if (e instanceof ServerNotRunningYetException) {
3f485568a92,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-20,15:16:46,1987,            if (System.currentTimeMillis() > (previousLogTime+1000)){
3f485568a92,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-20,15:16:46,1988,"              LOG.info(""Master isn\'t available yet, retrying"");"
3f485568a92,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-20,15:16:46,1989,              previousLogTime = System.currentTimeMillis();
3f485568a92,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-20,15:16:46,1990,            }
3f485568a92,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-20,15:16:46,1991,          } else {
3f485568a92,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-20,15:16:46,1992,            if (System.currentTimeMillis() > (previousLogTime + 1000)) {
3f485568a92,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-20,15:16:46,1993,"              LOG.warn(""Unable to connect to master. Retrying. Error was:"", e);"
3f485568a92,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-20,15:16:46,1994,              previousLogTime = System.currentTimeMillis();
3f485568a92,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-20,15:16:46,1995,            }
23532b3538c,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-11-22,01:04:40,1996,          }
3f485568a92,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-20,15:16:46,1997,          try {
3f485568a92,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-20,15:16:46,1998,            Thread.sleep(200);
3f485568a92,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-20,15:16:46,1999,          } catch (InterruptedException ex) {
3f485568a92,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-20,15:16:46,2000,            interrupted = true;
3f485568a92,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-20,15:16:46,2001,"            LOG.warn(""Interrupted while sleeping"");"
23532b3538c,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-11-22,01:04:40,2002,          }
23532b3538c,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-11-22,01:04:40,2003,        }
3f485568a92,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-20,15:16:46,2004,      }
3f485568a92,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-20,15:16:46,2005,    } finally {
3f485568a92,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-20,15:16:46,2006,      if (interrupted) {
3f485568a92,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-20,15:16:46,2007,        Thread.currentThread().interrupt();
a171d577659,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-10-16,19:28:17,2008,      }
a171d577659,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-10-16,19:28:17,2009,    }
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-03,03:52:15,2010,"    return new Pair<ServerName, RegionServerStatusService.BlockingInterface>(sn, intf);"
398b5f20ab3,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2009-04-03,01:24:45,2011,  }
398b5f20ab3,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2009-04-03,01:24:45,2012,
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,2013,  /**
7d42c217a9a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-29,03:33:27,2014,   * @return True if we should break loop because cluster is going down or
7d42c217a9a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-29,03:33:27,2015,   * this server has been stopped or hdfs has gone bad.
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,2016,   */
7d42c217a9a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-29,03:33:27,2017,  private boolean keepLooping() {
7d42c217a9a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-29,03:33:27,2018,    return !this.stopped && isClusterUp();
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,2019,  }
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,2020,
398b5f20ab3,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2009-04-03,01:24:45,2021,  /*
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,2022,   * Let the master know we\'re here Run initialization using parameters passed
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,2023,   * us by the master.
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,2024,   * @return A Map of key/value configurations we got from the Master else
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,2025,   * null if we failed to register.
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,2026,   * @throws IOException
398b5f20ab3,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2009-04-03,01:24:45,2027,   */
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-03,06:20:26,2028,  private RegionServerStartupResponse reportForDuty() throws IOException {
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-03,06:20:26,2029,    RegionServerStartupResponse result = null;
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-03,03:52:15,2030,"    Pair<ServerName, RegionServerStatusService.BlockingInterface> p ="
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-03,03:52:15,2031,      createRegionServerStatusStub();
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-03,03:52:15,2032,    this.rssStub = p.getSecond();
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-03,03:52:15,2033,    ServerName masterServerName = p.getFirst();
7d42c217a9a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-29,03:33:27,2034,    if (masterServerName == null) return result;
7d42c217a9a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-29,03:33:27,2035,    try {
7d42c217a9a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-29,03:33:27,2036,      this.requestCount.set(0);
a71464bf842,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-06-19,04:48:04,2037,"      LOG.info(""reportForDuty to master="" + masterServerName + "" with port="" + this.isa.getPort() +"
a71464bf842,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-06-19,04:48:04,2038,"        "", startcode="" + this.startcode);"
7d42c217a9a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-29,03:33:27,2039,      long now = EnvironmentEdgeManager.currentTimeMillis();
7d42c217a9a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-29,03:33:27,2040,      int port = this.isa.getPort();
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-03,06:20:26,2041,      RegionServerStartupRequest.Builder request = RegionServerStartupRequest.newBuilder();
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-03,06:20:26,2042,      request.setPort(port);
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-03,06:20:26,2043,      request.setServerStartCode(this.startcode);
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-03,06:20:26,2044,      request.setServerCurrentTime(now);
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-03,03:52:15,2045,"      result = this.rssStub.regionServerStartup(null, request.build());"
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-03,06:20:26,2046,    } catch (ServiceException se) {
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-03,06:20:26,2047,      IOException ioe = ProtobufUtil.getRemoteException(se);
7d42c217a9a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-29,03:33:27,2048,      if (ioe instanceof ClockOutOfSyncException) {
7d42c217a9a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-29,03:33:27,2049,"        LOG.fatal(""Master rejected startup because clock is out of sync"", ioe);"
7d42c217a9a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-29,03:33:27,2050,        // Re-throw IOE will cause RS to abort
7d42c217a9a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-29,03:33:27,2051,        throw ioe;
93b92713e03,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-23,22:02:38,2052,      } else if (ioe instanceof ServerNotRunningYetException) {
93b92713e03,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-23,22:02:38,2053,"        LOG.debug(""Master is not running yet"");"
7d42c217a9a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-29,03:33:27,2054,      } else {
f7c1418d4bb,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-03,06:20:26,2055,"        LOG.warn(""error telling master we are up"", se);"
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,2056,      }
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,2057,    }
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,2058,    return result;
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,2059,  }
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,2060,
c310653a19c,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-09-06,17:22:01,2061,  @Override
c310653a19c,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-09-06,17:22:01,2062,  public long getLastSequenceId(byte[] region) {
c310653a19c,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-09-06,17:22:01,2063,    Long lastFlushedSequenceId = -1l;
c310653a19c,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-09-06,17:22:01,2064,    try {
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,2065,      GetLastFlushedSequenceIdRequest req = RequestConverter
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,2066,          .buildGetLastFlushedSequenceIdRequest(region);
d668363c234,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-03,03:52:15,2067,"      lastFlushedSequenceId = rssStub.getLastFlushedSequenceId(null, req)"
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,2068,          .getLastFlushedSequenceId();
c310653a19c,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-09-06,17:22:01,2069,    } catch (ServiceException e) {
c310653a19c,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-09-06,17:22:01,2070,      lastFlushedSequenceId = -1l;
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,2071,"      LOG.warn(""Unable to connect to the master to check "" + ""the last flushed sequence id"", e);"
c310653a19c,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-09-06,17:22:01,2072,    }
c310653a19c,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-09-06,17:22:01,2073,    return lastFlushedSequenceId;
c310653a19c,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-09-06,17:22:01,2074,  }
c310653a19c,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-09-06,17:22:01,2075,
bfda6ae20e5,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2009-03-19,09:03:08,2076,  /**
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,2077,   * Closes all regions.  Called on our way out.
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,2078,   * Assumes that its not possible for new regions to be added to onlineRegions
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,2079,   * while this method runs.
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,2080,   */
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,2081,  protected void closeAllRegions(final boolean abort) {
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,2082,    closeUserRegions(abort);
2c270de8968,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-09-07,20:36:01,2083,    closeMetaTableRegions(abort);
2c270de8968,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-09-07,20:36:01,2084,  }
2c270de8968,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-09-07,20:36:01,2085,
2c270de8968,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-09-07,20:36:01,2086,  /**
3a23adf5aba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-03-08,22:37:19,2087,   * Close meta region if we carry it
2c270de8968,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-09-07,20:36:01,2088,   * @param abort Whether we\'re running an abort.
2c270de8968,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-09-07,20:36:01,2089,   */
2c270de8968,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-09-07,20:36:01,2090,  void closeMetaTableRegions(final boolean abort) {
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,2091,    HRegion meta = null;
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,2092,    this.lock.writeLock().lock();
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,2093,    try {
b500e86e2d8,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-03-24,20:25:10,2094,"      for (Map.Entry<String, HRegion> e: onlineRegions.entrySet()) {"
b500e86e2d8,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-03-24,20:25:10,2095,        HRegionInfo hri = e.getValue().getRegionInfo();
3a23adf5aba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-03-08,22:37:19,2096,        if (hri.isMetaRegion()) {
b500e86e2d8,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-03-24,20:25:10,2097,          meta = e.getValue();
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,2098,        }
3a23adf5aba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-03-08,22:37:19,2099,        if (meta != null) break;
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,2100,      }
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,2101,    } finally {
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,2102,      this.lock.writeLock().unlock();
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,2103,    }
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,2104,"    if (meta != null) closeRegionIgnoreErrors(meta.getRegionInfo(), abort);"
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,2105,  }
e06e00450ef,core/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-05-07,19:26:45,2106,
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,2107,  /**
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,2108,   * Schedule closes on all user regions.
b5f5e2aeeb9,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-11-18,20:01:30,2109,   * Should be safe calling multiple times because it wont\' close regions
b5f5e2aeeb9,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-11-18,20:01:30,2110,   * that are already closed or that are closing.
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,2111,   * @param abort Whether we\'re running an abort.
5ec924f50b0,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2008-11-10,18:56:05,2112,   */
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,2113,  void closeUserRegions(final boolean abort) {
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,2114,    this.lock.writeLock().lock();
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,2115,    try {
b500e86e2d8,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-03-24,20:25:10,2116,"      for (Map.Entry<String, HRegion> e: this.onlineRegions.entrySet()) {"
b500e86e2d8,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-03-24,20:25:10,2117,        HRegion r = e.getValue();
2c270de8968,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-09-07,20:36:01,2118,        if (!r.getRegionInfo().isMetaTable() && r.isAvailable()) {
b500e86e2d8,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-03-24,20:25:10,2119,          // Don\'t update zk with this close transition; pass false.
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,2120,"          closeRegionIgnoreErrors(r.getRegionInfo(), abort);"
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,2121,        }
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,2122,      }
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,2123,    } finally {
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,2124,      this.lock.writeLock().unlock();
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,2125,    }
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,2126,  }
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,2127,
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2128,  /** @return the info server */
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2129,  public InfoServer getInfoServer() {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2130,    return infoServer;
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,2131,  }
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,2132,
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2133,  /**
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2134,   * @return true if a stop has been requested.
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2135,   */
7fa275407fd,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-07-15,21:38:37,2136,  @Override
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2137,  public boolean isStopped() {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2138,    return this.stopped;
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,2139,  }
d65e0b2bd61,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jean-Daniel Cryans,2008-09-23,14:51:22,2140,
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2141,  @Override
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2142,  public boolean isStopping() {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2143,    return this.stopping;
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,2144,  }
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,2145,
7fa275407fd,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-07-15,21:38:37,2146,  @Override
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,2147,"  public Map<String, HRegion> getRecoveringRegions() {"
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,2148,    return this.recoveringRegions;
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,2149,  }
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,2150,
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2151,  /**
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2152,   *
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2153,   * @return the configuration
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2154,   */
7fa275407fd,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-07-15,21:38:37,2155,  @Override
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2156,  public Configuration getConfiguration() {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2157,    return conf;
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,2158,  }
dd2f3d46540,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2009-09-15,16:25:36,2159,
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2160,  /** @return the write lock for the server */
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2161,  ReentrantReadWriteLock.WriteLock getWriteLock() {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2162,    return lock.writeLock();
a3b452e9b07,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jean-Daniel Cryans,2008-10-17,22:03:29,2163,  }
6af4292630d,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Ryan Rawson,2009-06-06,01:26:21,2164,
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2165,  public int getNumberOfOnlineRegions() {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2166,    return this.onlineRegions.size();
94c6f4c1b84,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-06-02,20:05:27,2167,  }
94c6f4c1b84,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-06-02,20:05:27,2168,
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2169,  boolean isOnlineRegionsEmpty() {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2170,    return this.onlineRegions.isEmpty();
5c78c1a4a7e,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2011-03-23,21:26:07,2171,  }
5c78c1a4a7e,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2011-03-23,21:26:07,2172,
5c78c1a4a7e,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2011-03-23,21:26:07,2173,  /**
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2012-11-06,23:22:01,2174,"   * For tests, web ui and metrics."
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2175,   * This method will only work if HRegionServer is in the same JVM as client;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2176,   * HRegion cannot be serialized to cross an rpc.
94c6f4c1b84,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-06-02,20:05:27,2177,   */
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2178,  public Collection<HRegion> getOnlineRegionsLocalContext() {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2179,    Collection<HRegion> regions = this.onlineRegions.values();
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2180,    return Collections.unmodifiableCollection(regions);
18815c8879f,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2009-01-06,20:21:17,2181,  }
e06e00450ef,core/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-05-07,19:26:45,2182,
34dc2a4b664,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,karthik,2011-12-12,22:58:51,2183,  @Override
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2184,  public void addToOnlineRegions(HRegion region) {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2185,"    this.onlineRegions.put(region.getRegionInfo().getEncodedName(), region);"
34dc2a4b664,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,karthik,2011-12-12,22:58:51,2186,  }
34dc2a4b664,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,karthik,2011-12-12,22:58:51,2187,
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2188,  /**
9bf0760123e,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-07-17,22:24:32,2189,   * @return A new Map of online regions sorted by region size with the first entry being the
9bf0760123e,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-07-17,22:24:32,2190,"   * biggest.  If two regions are the same size, then the last one found wins; i.e. this method"
9bf0760123e,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-07-17,22:24:32,2191,   * may NOT return all regions.
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2192,   */
9bf0760123e,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-07-17,22:24:32,2193,"  SortedMap<Long, HRegion> getCopyOfOnlineRegionsSortedBySize() {"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2194,    // we\'ll sort the regions in reverse
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2195,"    SortedMap<Long, HRegion> sortedRegions = new TreeMap<Long, HRegion>("
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2196,        new Comparator<Long>() {
7fa275407fd,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-07-15,21:38:37,2197,          @Override
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2198,"          public int compare(Long a, Long b) {"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2199,            return -1 * a.compareTo(b);
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2200,          }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2201,        });
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2202,    // Copy over all regions. Regions are sorted by size with biggest first.
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2203,    for (HRegion region : this.onlineRegions.values()) {
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,2204,"      sortedRegions.put(region.memstoreSize.get(), region);"
34dc2a4b664,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,karthik,2011-12-12,22:58:51,2205,    }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2206,    return sortedRegions;
34dc2a4b664,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,karthik,2011-12-12,22:58:51,2207,  }
34dc2a4b664,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,karthik,2011-12-12,22:58:51,2208,
34dc2a4b664,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,karthik,2011-12-12,22:58:51,2209,  /**
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2210,   * @return time stamp in millis of when this region server was started
34dc2a4b664,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,karthik,2011-12-12,22:58:51,2211,   */
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2212,  public long getStartcode() {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2213,    return this.startcode;
34dc2a4b664,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,karthik,2011-12-12,22:58:51,2214,  }
5c78c1a4a7e,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2011-03-23,21:26:07,2215,
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2216,  /** @return reference to FlushRequester */
7fa275407fd,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-07-15,21:38:37,2217,  @Override
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2218,  public FlushRequester getFlushRequester() {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2219,    return this.cacheFlusher;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2220,  }
5c78c1a4a7e,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2011-03-23,21:26:07,2221,
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2222,  /**
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2223,   * Get the top N most loaded regions this server is serving so we can tell the
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2224,   * master which regions it can reallocate if we\'re overloaded. TODO: actually
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2225,"   * calculate which regions are most loaded. (Right now, we\'re just grabbing"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2226,   * the first N regions being served regardless of load.)
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2227,   */
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2228,  protected HRegionInfo[] getMostLoadedRegions() {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2229,    ArrayList<HRegionInfo> regions = new ArrayList<HRegionInfo>();
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2230,    for (HRegion r : onlineRegions.values()) {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2231,      if (!r.isAvailable()) {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2232,        continue;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2233,      }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2234,      if (regions.size() < numRegionsToReport) {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2235,        regions.add(r.getRegionInfo());
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2236,      } else {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2237,        break;
0dd25bd5385,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Gary Helmling,2011-04-15,23:05:02,2238,      }
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,2239,    }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2240,    return regions.toArray(new HRegionInfo[regions.size()]);
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,2241,  }
e06e00450ef,core/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-05-07,19:26:45,2242,
a77305afda9,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,larsh,2012-08-09,00:56:59,2243,  @Override
a77305afda9,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,larsh,2012-08-09,00:56:59,2244,  public Leases getLeases() {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2245,    return leases;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2246,  }
a17043496ba,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2011-03-24,06:27:23,2247,
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2248,  /**
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2249,   * @return Return the rootDir.
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2250,   */
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2251,  protected Path getRootDir() {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2252,    return rootDir;
e06e00450ef,core/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-05-07,19:26:45,2253,  }
78af4ede604,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2009-06-16,04:27:44,2254,
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2255,  /**
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2256,   * @return Return the fs.
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2257,   */
7fa275407fd,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-07-15,21:38:37,2258,  @Override
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2259,  public FileSystem getFileSystem() {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2260,    return fs;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2261,  }
a17043496ba,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2011-03-24,06:27:23,2262,
7fa275407fd,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-07-15,21:38:37,2263,  @Override
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2264,  public String toString() {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2265,    return getServerName().toString();
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2266,  }
a17043496ba,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2011-03-24,06:27:23,2267,
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2268,  /**
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2269,   * Interval at which threads should run
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2270,   *
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2271,   * @return the interval
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2272,   */
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2273,  public int getThreadWakeFrequency() {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2274,    return threadWakeFrequency;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2275,  }
a17043496ba,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2011-03-24,06:27:23,2276,
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2277,  @Override
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2278,  public ZooKeeperWatcher getZooKeeper() {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2279,    return zooKeeper;
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,2280,  }
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,2281,
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2282,  @Override
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2283,  public ServerName getServerName() {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2284,    // Our servername could change after we talk to the master.
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2285,    return this.serverNameFromMasterPOV == null?
bc7c3c7daaa,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2013-11-20,20:02:25,2286,"        ServerName.valueOf(this.isa.getHostName(), this.isa.getPort(), this.startcode) :"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2287,        this.serverNameFromMasterPOV;
0bbcc18c604,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2008-12-31,09:53:11,2288,  }
dd2f3d46540,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2009-09-15,16:25:36,2289,
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2290,  @Override
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2291,  public CompactionRequestor getCompactionRequester() {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2292,    return this.compactSplitThread;
dd2f3d46540,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2009-09-15,16:25:36,2293,  }
0bbcc18c604,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2008-12-31,09:53:11,2294,
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2295,  public ZooKeeperWatcher getZooKeeperWatcher() {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2296,    return this.zooKeeper;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2297,  }
1793a0bbcd5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-12-21,04:29:43,2298,
1ef06216950,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2012-12-14,21:12:36,2299,  public RegionServerCoprocessorHost getCoprocessorHost(){
1ef06216950,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2012-12-14,21:12:36,2300,    return this.rsHost;
1ef06216950,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2012-12-14,21:12:36,2301,  }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2302,
7fa275407fd,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-07-15,21:38:37,2303,  @Override
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,2304,"  public ConcurrentMap<byte[], Boolean> getRegionsInTransitionInRS() {"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2305,    return this.regionsInTransitionInRS;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2306,  }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2307,
7fa275407fd,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-07-15,21:38:37,2308,  @Override
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2309,  public ExecutorService getExecutorService() {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2310,    return service;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2311,  }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2312,
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2313,  //
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2314,  // Main program and support routines
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2315,  //
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2316,
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2317,  /**
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2318,"   * Load the replication service objects, if any"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2319,   */
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2320,"  static private void createNewReplicationInstance(Configuration conf,"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2321,"    HRegionServer server, FileSystem fs, Path logDir, Path oldLogDir) throws IOException{"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2322,
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2323,"    // If replication is not enabled, then return immediately."
5a0016d1af0,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jean-Daniel Cryans,2013-09-16,21:31:08,2324,"    if (!conf.getBoolean(HConstants.REPLICATION_ENABLE_KEY,"
5a0016d1af0,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jean-Daniel Cryans,2013-09-16,21:31:08,2325,        HConstants.REPLICATION_ENABLE_DEFAULT)) {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2326,      return;
e1ab934e5d8,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-13,00:07:29,2327,    }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2328,
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2329,    // read in the name of the source replication class from the config file.
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2330,"    String sourceClassname = conf.get(HConstants.REPLICATION_SOURCE_SERVICE_CLASSNAME,"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2331,                               HConstants.REPLICATION_SERVICE_CLASSNAME_DEFAULT);
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2332,
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2333,    // read in the name of the sink replication class from the config file.
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2334,"    String sinkClassname = conf.get(HConstants.REPLICATION_SINK_SERVICE_CLASSNAME,"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2335,                             HConstants.REPLICATION_SERVICE_CLASSNAME_DEFAULT);
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2336,
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2337,"    // If both the sink and the source class names are the same, then instantiate"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2338,    // only one object.
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2339,    if (sourceClassname.equals(sinkClassname)) {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2340,      server.replicationSourceHandler = (ReplicationSourceService)
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2341,"                                         newReplicationInstance(sourceClassname,"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2342,"                                         conf, server, fs, logDir, oldLogDir);"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2343,      server.replicationSinkHandler = (ReplicationSinkService)
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2344,                                         server.replicationSourceHandler;
f400db0d9b2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-07-02,21:35:30,2345,    } else {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2346,      server.replicationSourceHandler = (ReplicationSourceService)
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2347,"                                         newReplicationInstance(sourceClassname,"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2348,"                                         conf, server, fs, logDir, oldLogDir);"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2349,      server.replicationSinkHandler = (ReplicationSinkService)
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2350,"                                         newReplicationInstance(sinkClassname,"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2351,"                                         conf, server, fs, logDir, oldLogDir);"
e1ab934e5d8,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-13,00:07:29,2352,    }
e1ab934e5d8,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-13,00:07:29,2353,  }
e1ab934e5d8,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-13,00:07:29,2354,
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2355,"  static private ReplicationService newReplicationInstance(String classname,"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2356,"    Configuration conf, HRegionServer server, FileSystem fs, Path logDir,"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2357,    Path oldLogDir) throws IOException{
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2358,
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2359,    Class<?> clazz = null;
e1ab934e5d8,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-13,00:07:29,2360,    try {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2361,      ClassLoader classLoader = Thread.currentThread().getContextClassLoader();
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2362,"      clazz = Class.forName(classname, true, classLoader);"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2363,    } catch (java.lang.ClassNotFoundException nfe) {
83f51a4d6af,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-07-15,22:25:40,2364,"      throw new IOException(""Could not find class for "" + classname);"
e1ab934e5d8,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-13,00:07:29,2365,    }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2366,
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2367,    // create an instance of the replication object.
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2368,    ReplicationService service = (ReplicationService)
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2369,"                              ReflectionUtils.newInstance(clazz, conf);"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2370,"    service.initialize(server, fs, logDir, oldLogDir);"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2371,    return service;
e1ab934e5d8,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-13,00:07:29,2372,  }
e1ab934e5d8,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-13,00:07:29,2373,
e32b161c8f7,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2011-10-31,17:26:42,2374,  /**
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2375,   * @param hrs
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2376,   * @return Thread the RegionServer is running in correctly named.
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2377,   * @throws IOException
e32b161c8f7,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2011-10-31,17:26:42,2378,   */
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2379,  public static Thread startRegionServer(final HRegionServer hrs)
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2380,      throws IOException {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2381,"    return startRegionServer(hrs, ""regionserver"" + hrs.isa.getPort());"
f9a10488c02,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Todd Lipcon,2010-06-02,00:40:48,2382,  }
41938755804,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-06-11,17:49:55,2383,
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2384,  /**
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2385,   * @param hrs
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2386,   * @param name
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2387,   * @return Thread the RegionServer is running in correctly named.
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2388,   * @throws IOException
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2389,   */
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2390,"  public static Thread startRegionServer(final HRegionServer hrs,"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2391,      final String name) throws IOException {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2392,    Thread t = new Thread(hrs);
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2393,    t.setName(name);
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2394,    t.start();
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2395,    // Install shutdown hook that will catch signals and run an orderly shutdown
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2396,    // of the hrs.
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2397,"    ShutdownHook.install(hrs.getConfiguration(), FileSystem.get(hrs"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2398,"        .getConfiguration()), hrs, t);"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2399,    return t;
18e9b218629,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-09-08,18:50:26,2400,  }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2401,
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2402,  /**
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2403,   * Utility for constructing an instance of the passed HRegionServer class.
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2404,   *
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2405,   * @param regionServerClass
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2406,   * @param conf2
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2407,   * @return HRegionServer instance.
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2408,   */
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2409,  public static HRegionServer constructRegionServer(
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2410,"      Class<? extends HRegionServer> regionServerClass,"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2411,      final Configuration conf2) {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2412,    try {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2413,      Constructor<? extends HRegionServer> c = regionServerClass
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2414,          .getConstructor(Configuration.class);
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2415,      return c.newInstance(conf2);
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2416,    } catch (Exception e) {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2417,"      throw new RuntimeException(""Failed construction of "" + ""Regionserver: """
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2418,"          + regionServerClass.toString(), e);"
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,2419,    }
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,2420,  }
77dae7ccb78,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-12-08,00:11:26,2421,
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2422,  /**
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2423,   * @see org.apache.hadoop.hbase.regionserver.HRegionServerCommandLine
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2424,   */
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2425,  public static void main(String[] args) throws Exception {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2426,\tVersionInfo.logVersion();
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2427,    Configuration conf = HBaseConfiguration.create();
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2428,"    @SuppressWarnings(""unchecked"")"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2429,    Class<? extends HRegionServer> regionServerClass = (Class<? extends HRegionServer>) conf
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2430,"        .getClass(HConstants.REGION_SERVER_IMPL, HRegionServer.class);"
94682d09d34,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-09-30,23:12:56,2431,
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2432,    new HRegionServerCommandLine(regionServerClass).doMain(args);
30a0a2c6d61,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-01-06,22:55:36,2433,  }
30a0a2c6d61,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-01-06,22:55:36,2434,
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2435,  /**
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2436,   * Gets the online regions of the specified table.
df49eca1eb0,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-09-06,00:29:48,2437,   * This method looks at the in-memory onlineRegions.  It does not go to <code>hbase:meta</code>.
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2438,   * Only returns <em>online</em> regions.  If a region on this table has been
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2439,"   * closed during a disable, etc., it will not be included in the returned list."
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2440,"   * So, the returned list may not necessarily be ALL regions in this table, its"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2441,   * all the ONLINE regions in the table.
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2442,   * @param tableName
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2443,   * @return Online regions from <code>tableName</code>
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2444,   */
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-08-08,04:19:49,2445,  @Override
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-08-08,04:19:49,2446,  public List<HRegion> getOnlineRegions(TableName tableName) {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2447,     List<HRegion> tableRegions = new ArrayList<HRegion>();
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2448,     synchronized (this.onlineRegions) {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2449,       for (HRegion region: this.onlineRegions.values()) {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2450,         HRegionInfo regionInfo = region.getRegionInfo();
ed509f750c9,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-09-13,23:15:00,2451,         if(regionInfo.getTable().equals(tableName)) {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2452,           tableRegions.add(region);
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2453,         }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2454,       }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2455,     }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2456,     return tableRegions;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2457,   }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2458,
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2459,  // used by org/apache/hbase/tmpl/regionserver/RSStatusTmpl.jamon (HBASE-4070).
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2460,  public String[] getCoprocessors() {
2c4a2a6c516,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-12-12,04:39:06,2461,    TreeSet<String> coprocessors = new TreeSet<String>(
2c4a2a6c516,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-12-12,04:39:06,2462,        this.hlog.getCoprocessorHost().getCoprocessors());
2c4a2a6c516,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-12-12,04:39:06,2463,    Collection<HRegion> regions = getOnlineRegionsLocalContext();
2c4a2a6c516,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-12-12,04:39:06,2464,    for (HRegion region: regions) {
2c4a2a6c516,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-12-12,04:39:06,2465,      coprocessors.addAll(region.getCoprocessorHost().getCoprocessors());
2c4a2a6c516,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-12-12,04:39:06,2466,    }
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,2467,    return coprocessors.toArray(new String[coprocessors.size()]);
581af1b086b,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-08-25,17:29:54,2468,  }
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,2469,
581af1b086b,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-08-25,17:29:54,2470,  /**
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2471,"   * Instantiated as a scanner lease. If the lease times out, the scanner is"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2472,   * closed
581af1b086b,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-08-25,17:29:54,2473,   */
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2474,  private class ScannerListener implements LeaseListener {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2475,    private final String scannerName;
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,2476,
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2477,    ScannerListener(final String n) {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2478,      this.scannerName = n;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2479,    }
c74c0975730,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Nicolas Spiegelberg,2010-12-15,01:44:06,2480,
7fa275407fd,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-07-15,21:38:37,2481,    @Override
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2482,    public void leaseExpired() {
c9073c46319,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-10-25,16:43:22,2483,      RegionScannerHolder rsh = scanners.remove(this.scannerName);
c9073c46319,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-10-25,16:43:22,2484,      if (rsh != null) {
d20edb96dc4,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2013-08-06,20:10:37,2485,        RegionScanner s = rsh.s;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2486,"        LOG.info(""Scanner "" + this.scannerName + "" lease expired on region """
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2487,            + s.getRegionInfo().getRegionNameAsString());
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2488,        try {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2489,          HRegion region = getRegion(s.getRegionInfo().getRegionName());
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2490,          if (region != null && region.getCoprocessorHost() != null) {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2491,            region.getCoprocessorHost().preScannerClose(s);
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2492,          }
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,2493,
d20edb96dc4,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2013-08-06,20:10:37,2494,          s.close();
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2495,          if (region != null && region.getCoprocessorHost() != null) {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2496,            region.getCoprocessorHost().postScannerClose(s);
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2497,          }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2498,        } catch (IOException e) {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2499,"          LOG.error(""Closing scanner for """
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2500,"              + s.getRegionInfo().getRegionNameAsString(), e);"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2501,        }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2502,      } else {
7f95fccd067,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2014-03-07,23:47:17,2503,"        LOG.warn(""Scanner "" + this.scannerName + "" lease expired, but no related"" +"
7f95fccd067,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2014-03-07,23:47:17,2504,"            "" scanner found, hence no chance to close that related scanner!"");"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2505,      }
1f4eb71478b,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Nicolas Spiegelberg,2011-05-10,23:20:45,2506,    }
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,2507,  }
e06e00450ef,core/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-05-07,19:26:45,2508,
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,2509,  /**
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2510,   * Called to verify that this server is up and running.
e06e00450ef,core/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-05-07,19:26:45,2511,   *
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2512,   * @throws IOException
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,2513,   */
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2514,  protected void checkOpen() throws IOException {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2515,    if (this.stopped || this.abortRequested) {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2516,"      throw new RegionServerStoppedException(""Server "" + getServerName() +"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2517,"        "" not running"" + (this.abortRequested ? "", aborting"" : """"));"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2518,    }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2519,    if (!fsOk) {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2520,"      throw new RegionServerStoppedException(""File system not available"");"
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,2521,    }
6af4292630d,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Ryan Rawson,2009-06-06,01:26:21,2522,  }
e06e00450ef,core/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-05-07,19:26:45,2523,
1955d5dfe45,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-12-02,00:00:30,2524,
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2525,  /**
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,2526,"   * Try to close the region, logs a warning on failure but continues."
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2527,   * @param region Region to close
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2528,   */
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,2529,"  private void closeRegionIgnoreErrors(HRegionInfo region, final boolean abort) {"
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,2530,    try {
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,2531,"      if (!closeRegion(region.getEncodedName(), abort, false, -1, null)) {"
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,2532,"        LOG.warn(""Failed to close "" + region.getRegionNameAsString() +"
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,2533,"            "" - ignoring and continuing"");"
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,2534,      }
b7d127e5e7a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-09-14,19:43:23,2535,    } catch (IOException e) {
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,2536,"      LOG.warn(""Failed to close "" + region.getRegionNameAsString() +"
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,2537,"          "" - ignoring and continuing"", e);"
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,2538,    }
02cd4a9b019,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Todd Lipcon,2010-09-13,18:37:11,2539,  }
02cd4a9b019,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Todd Lipcon,2010-09-13,18:37:11,2540,
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,2541,  /**
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,2542,"   * Close asynchronously a region, can be called from the master or internally by the regionserver"
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,2543,"   * when stopping. If called from the master, the region will update the znode status."
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,2544,   *
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,2545,   * <p>
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,2546,"   * If an opening was in progress, this method will cancel it, but will not start a new close. The"
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,2547,   * coprocessors are not called in this case. A NotServingRegionException exception is thrown.
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,2548,   * </p>
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,2549,
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,2550,   * <p>
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,2551,"   *   If a close was in progress, this new request will be ignored, and an exception thrown."
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,2552,   * </p>
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,2553,   *
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,2554,   * @param encodedName Region to close
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2555,   * @param abort True if we are aborting
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2556,   * @param zk True if we are to update zk about the region close; if the close
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2557,"   * was orchestrated by master, then update zk.  If the close is being run by"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2558,"   * the regionserver because its going down, don\'t update zk."
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,2559,   * @param versionOfClosingNode the version of znode to compare when RS transitions the znode from
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2560,   *   CLOSING state.
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2561,   * @return True if closed a region.
b7d127e5e7a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-09-14,19:43:23,2562,   * @throws NotServingRegionException if the region is not online
b7d127e5e7a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-09-14,19:43:23,2563,   * @throws RegionAlreadyInTransitionException if the region is already closing
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,2564,   */
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,2565,"  protected boolean closeRegion(String encodedName, final boolean abort,"
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,2566,"      final boolean zk, final int versionOfClosingNode, final ServerName sn)"
b7d127e5e7a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-09-14,19:43:23,2567,"      throws NotServingRegionException, RegionAlreadyInTransitionException {"
1ef06216950,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2012-12-14,21:12:36,2568,    //Check for permissions to close.
b7d127e5e7a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-09-14,19:43:23,2569,    HRegion actualRegion = this.getFromOnlineRegions(encodedName);
1ef06216950,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2012-12-14,21:12:36,2570,    if ((actualRegion != null) && (actualRegion.getCoprocessorHost() != null)) {
1ef06216950,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2012-12-14,21:12:36,2571,      try {
1ef06216950,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2012-12-14,21:12:36,2572,        actualRegion.getCoprocessorHost().preClose(false);
1ef06216950,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2012-12-14,21:12:36,2573,      } catch (IOException exp) {
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,2574,"        LOG.warn(""Unable to close region: the coprocessor launched an error "", exp);"
1ef06216950,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2012-12-14,21:12:36,2575,        return false;
1ef06216950,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2012-12-14,21:12:36,2576,      }
1ef06216950,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2012-12-14,21:12:36,2577,    }
1ef06216950,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2012-12-14,21:12:36,2578,
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,2579,"    final Boolean previous = this.regionsInTransitionInRS.putIfAbsent(encodedName.getBytes(),"
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,2580,        Boolean.FALSE);
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,2581,
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,2582,    if (Boolean.TRUE.equals(previous)) {
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,2583,"      LOG.info(""Received CLOSE for the region:"" + encodedName + "" , which we are already "" +"
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,2584,"          ""trying to OPEN. Cancelling OPENING."");"
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,2585,"      if (!regionsInTransitionInRS.replace(encodedName.getBytes(), previous, Boolean.FALSE)){"
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,2586,"        // The replace failed. That should be an exceptional case, but theoretically it can happen."
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,2587,        // We\'re going to try to do a standard close then.
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,2588,"        LOG.warn(""The opening for region "" + encodedName + "" was done before we could cancel it."" +"
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,2589,"            "" Doing a standard close now"");"
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,2590,"        return closeRegion(encodedName, abort, zk, versionOfClosingNode, sn);"
b7d127e5e7a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-09-14,19:43:23,2591,      }
b7d127e5e7a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-09-14,19:43:23,2592,      // Let\'s get the region from the online region list again
b7d127e5e7a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-09-14,19:43:23,2593,      actualRegion = this.getFromOnlineRegions(encodedName);
b7d127e5e7a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-09-14,19:43:23,2594,"      if (actualRegion == null) { // If already online, we still need to close it."
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,2595,"        LOG.info(""The opening previously in progress has been cancelled by a CLOSE request."");"
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,2596,        // The master deletes the znode when it receives this exception.
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,2597,"        throw new NotServingRegionException(""The region "" + encodedName +"
b7d127e5e7a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-09-14,19:43:23,2598,"          "" was opening but not yet served. Opening is cancelled."");"
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,2599,      }
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,2600,    } else if (Boolean.FALSE.equals(previous)) {
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,2601,"      LOG.info(""Received CLOSE for the region: "" + encodedName +"
b7d127e5e7a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-09-14,19:43:23,2602,"        "" ,which we are already trying to CLOSE, but not completed yet"");"
b7d127e5e7a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-09-14,19:43:23,2603,      // The master will retry till the region is closed. We need to do this since
b7d127e5e7a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-09-14,19:43:23,2604,      // the region could fail to close somehow. If we mark the region closed in master
b7d127e5e7a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-09-14,19:43:23,2605,"      // while it is not, there could be data loss."
b7d127e5e7a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-09-14,19:43:23,2606,"      // If the region stuck in closing for a while, and master runs out of retries,"
b7d127e5e7a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-09-14,19:43:23,2607,"      // master will move the region to failed_to_close. Later on, if the region"
b7d127e5e7a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-09-14,19:43:23,2608,"      // is indeed closed, master can properly re-assign it."
b7d127e5e7a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-09-14,19:43:23,2609,"      throw new RegionAlreadyInTransitionException(""The region "" + encodedName +"
b7d127e5e7a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-09-14,19:43:23,2610,"        "" was already closing. New CLOSE request is ignored."");"
b7d127e5e7a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-09-14,19:43:23,2611,    }
b7d127e5e7a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-09-14,19:43:23,2612,
b7d127e5e7a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-09-14,19:43:23,2613,    if (actualRegion == null) {
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,2614,"      LOG.error(""Received CLOSE for a region which is not online, and we\'re not opening."");"
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,2615,      this.regionsInTransitionInRS.remove(encodedName.getBytes());
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,2616,      // The master deletes the znode when it receives this exception.
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,2617,"      throw new NotServingRegionException(""The region "" + encodedName +"
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,2618,"          "" is not online, and is not opening."");"
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,2619,    }
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,2620,
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,2621,    CloseRegionHandler crh;
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,2622,    final HRegionInfo hri = actualRegion.getRegionInfo();
3a23adf5aba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-03-08,22:37:19,2623,    if (hri.isMetaRegion()) {
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,2624,"      crh = new CloseMetaHandler(this, this, hri, abort, zk, versionOfClosingNode);"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2625,    } else {
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,2626,"      crh = new CloseRegionHandler(this, this, hri, abort, zk, versionOfClosingNode, sn);"
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,2627,    }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2628,    this.service.submit(crh);
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2629,    return true;
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,2630,  }
529223130ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-27,23:12:42,2631,
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2632,   /**
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2633,   * @param regionName
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2634,   * @return HRegion for the passed binary <code>regionName</code> or null if
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2635,   *         named region is not member of the online regions.
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,2636,   */
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2637,  public HRegion getOnlineRegion(final byte[] regionName) {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2638,    String encodedRegionName = HRegionInfo.encodeRegionName(regionName);
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2639,    return this.onlineRegions.get(encodedRegionName);
f7b8d9cf7ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-04,00:00:51,2640,  }
f7b8d9cf7ab,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-04,00:00:51,2641,
7a7ab8b8da7,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-05-12,06:47:39,2642,  public InetSocketAddress[] getRegionBlockLocations(final String encodedRegionName) {
7a7ab8b8da7,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-05-12,06:47:39,2643,    return this.regionFavoredNodesMap.get(encodedRegionName);
7a7ab8b8da7,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-05-12,06:47:39,2644,  }
7a7ab8b8da7,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-05-12,06:47:39,2645,
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,2646,  @Override
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2647,  public HRegion getFromOnlineRegions(final String encodedRegionName) {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2648,    return this.onlineRegions.get(encodedRegionName);
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,2649,  }
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,2650,
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,2651,
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,2652,  @Override
f17016bd5b2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-01-21,20:07:25,2653,"  public boolean removeFromOnlineRegions(final HRegion r, ServerName destination) {"
f17016bd5b2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-01-21,20:07:25,2654,    HRegion toReturn = this.onlineRegions.remove(r.getRegionInfo().getEncodedName());
f17016bd5b2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-01-21,20:07:25,2655,
f17016bd5b2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-01-21,20:07:25,2656,    if (destination != null) {
f17016bd5b2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-01-21,20:07:25,2657,      HLog wal = getWAL();
f17016bd5b2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-01-21,20:07:25,2658,      long closeSeqNum = wal.getEarliestMemstoreSeqNum(r.getRegionInfo().getEncodedNameAsBytes());
f17016bd5b2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-01-21,20:07:25,2659,      if (closeSeqNum == HConstants.NO_SEQNUM) {
f17016bd5b2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-01-21,20:07:25,2660,        // No edits in WAL for this region; get the sequence number when the region was opened.
f17016bd5b2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-01-21,20:07:25,2661,        closeSeqNum = r.getOpenSeqNum();
f17016bd5b2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-01-21,20:07:25,2662,        if (closeSeqNum == HConstants.NO_SEQNUM) {
f17016bd5b2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-01-21,20:07:25,2663,          closeSeqNum = 0;
f17016bd5b2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-01-21,20:07:25,2664,        }
f17016bd5b2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-01-21,20:07:25,2665,      }
f17016bd5b2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-01-21,20:07:25,2666,"      addToMovedRegions(r.getRegionInfo().getEncodedName(), destination, closeSeqNum);"
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,2667,    }
7a7ab8b8da7,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-05-12,06:47:39,2668,    this.regionFavoredNodesMap.remove(r.getRegionInfo().getEncodedName());
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,2669,    return toReturn != null;
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,2670,  }
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,2671,
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,2672,  /**
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2673,   * Protected utility method for safely obtaining an HRegion handle.
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2674,   *
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2675,   * @param regionName
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2676,   *          Name of online {@link HRegion} to return
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2677,   * @return {@link HRegion} for <code>regionName</code>
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2678,   * @throws NotServingRegionException
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,2679,   */
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2680,  protected HRegion getRegion(final byte[] regionName)
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2681,      throws NotServingRegionException {
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,2682,    String encodedRegionName = HRegionInfo.encodeRegionName(regionName);
e15f36cdde3,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-11-14,05:01:29,2683,"    return getRegionByEncodedName(regionName, encodedRegionName);"
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,2684,  }
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,2685,
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,2686,  protected HRegion getRegionByEncodedName(String encodedRegionName)
e15f36cdde3,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-11-14,05:01:29,2687,      throws NotServingRegionException {
e15f36cdde3,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-11-14,05:01:29,2688,"    return getRegionByEncodedName(null, encodedRegionName);"
e15f36cdde3,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-11-14,05:01:29,2689,  }
e15f36cdde3,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-11-14,05:01:29,2690,
e15f36cdde3,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-11-14,05:01:29,2691,"  protected HRegion getRegionByEncodedName(byte[] regionName, String encodedRegionName)"
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,2692,    throws NotServingRegionException {
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,2693,    HRegion region = this.onlineRegions.get(encodedRegionName);
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2694,    if (region == null) {
f17016bd5b2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-01-21,20:07:25,2695,      MovedRegionInfo moveInfo = getMovedRegion(encodedRegionName);
f17016bd5b2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-01-21,20:07:25,2696,      if (moveInfo != null) {
900be56ea11,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2013-02-16,14:13:46,2697,"        throw new RegionMovedException(moveInfo.getServerName(), moveInfo.getSeqNum());"
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,2698,      }
66d90f865e9,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-03-21,02:04:07,2699,      Boolean isOpening = this.regionsInTransitionInRS.get(Bytes.toBytes(encodedRegionName));
e15f36cdde3,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-11-14,05:01:29,2700,      String regionNameStr = regionName == null?
e15f36cdde3,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-11-14,05:01:29,2701,        encodedRegionName: Bytes.toStringBinary(regionName);
66d90f865e9,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-03-21,02:04:07,2702,      if (isOpening != null && isOpening.booleanValue()) {
e15f36cdde3,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-11-14,05:01:29,2703,"        throw new RegionOpeningException(""Region "" + regionNameStr + "" is opening"");"
66d90f865e9,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-03-21,02:04:07,2704,      }
e15f36cdde3,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-11-14,05:01:29,2705,"      throw new NotServingRegionException(""Region "" + regionNameStr + "" is not online"");"
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,2706,    }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2707,    return region;
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,2708,  }
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,2709,
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2710,  /*
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2711,   * Cleanup after Throwable caught invoking method. Converts <code>t</code> to
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2712,   * IOE if it isn\'t already.
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2713,   *
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2714,   * @param t Throwable
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2715,   *
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2716,   * @return Throwable converted to an IOE; methods can only let out IOEs.
d9c8e9954a2,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-12-18,00:04:23,2717,   */
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2718,  protected Throwable cleanup(final Throwable t) {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2719,"    return cleanup(t, null);"
d9c8e9954a2,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-12-18,00:04:23,2720,  }
d9c8e9954a2,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-12-18,00:04:23,2721,
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2722,  /*
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2723,   * Cleanup after Throwable caught invoking method. Converts <code>t</code> to
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2724,   * IOE if it isn\'t already.
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2725,   *
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2726,   * @param t Throwable
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2727,   *
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2728,   * @param msg Message to log in error. Can be null.
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2729,   *
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2730,   * @return Throwable converted to an IOE; methods can only let out IOEs.
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2731,   */
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2732,"  protected Throwable cleanup(final Throwable t, final String msg) {"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2733,    // Don\'t log as error if NSRE; NSRE is \'normal\' operation.
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2734,    if (t instanceof NotServingRegionException) {
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,2735,"      LOG.debug(""NotServingRegionException; "" + t.getMessage());"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2736,      return t;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2737,    }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2738,    if (msg == null) {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2739,"      LOG.error("""", RemoteExceptionHandler.checkThrowable(t));"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2740,    } else {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2741,"      LOG.error(msg, RemoteExceptionHandler.checkThrowable(t));"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2742,    }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2743,    if (!checkOOME(t)) {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2744,      checkFileSystem();
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2745,    }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2746,    return t;
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,2747,  }
e06e00450ef,core/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-05-07,19:26:45,2748,
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2749,  /*
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2750,   * @param t
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2751,   *
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2752,   * @param msg Message to put in new IOE if passed <code>t</code> is not an IOE
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2753,   *
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2754,   * @return Make <code>t</code> an IOE if it isn\'t already.
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2755,   */
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2756,"  protected IOException convertThrowableToIOE(final Throwable t, final String msg) {"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2757,    return (t instanceof IOException ? (IOException) t : msg == null
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2758,"        || msg.length() == 0 ? new IOException(t) : new IOException(msg, t));"
7d8d42d01bd,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-11-06,21:48:31,2759,  }
7d8d42d01bd,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-11-06,21:48:31,2760,
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2761,  /*
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2762,"   * Check if an OOME and, if so, abort immediately to avoid creating more objects."
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2763,   *
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2764,   * @param e
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2765,   *
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2766,   * @return True if we OOME\'d and are aborting.
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2767,   */
7fa275407fd,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-07-15,21:38:37,2768,  @Override
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2769,  public boolean checkOOME(final Throwable e) {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2770,    boolean stop = false;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2771,    try {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2772,      if (e instanceof OutOfMemoryError
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2773,          || (e.getCause() != null && e.getCause() instanceof OutOfMemoryError)
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2774,          || (e.getMessage() != null && e.getMessage().contains(
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2775,"              ""java.lang.OutOfMemoryError""))) {"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2776,        stop = true;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2777,        LOG.fatal(
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2778,"          ""Run out of memory; HRegionServer will abort itself immediately"", e);"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2779,      }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2780,    } finally {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2781,      if (stop) {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2782,        Runtime.getRuntime().halt(1);
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2783,      }
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,2784,    }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2785,    return stop;
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,2786,  }
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,2787,
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,2788,  /**
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2789,"   * Checks to see if the file system is still accessible. If not, sets"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2790,   * abortRequested and stopRequested
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2791,   *
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2792,   * @return false if file system is not available
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,2793,   */
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2794,  public boolean checkFileSystem() {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2795,    if (this.fsOk && this.fs != null) {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2796,      try {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2797,        FSUtils.checkFileSystemAvailable(this.fs);
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2798,      } catch (IOException e) {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2799,"        abort(""File System not available"", e);"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2800,        this.fsOk = false;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2801,      }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2802,    }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2803,    return this.fsOk;
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,2804,  }
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,2805,
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,2806,"  protected long addScanner(RegionScanner s, HRegion r) throws LeaseStillHeldException {"
d8ce8d05063,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2014-03-12,21:33:55,2807,    long scannerId = this.scannerIdGen.incrementAndGet();
d8ce8d05063,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2014-03-12,21:33:55,2808,    String scannerName = String.valueOf(scannerId);
d8ce8d05063,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2014-03-12,21:33:55,2809,
d8ce8d05063,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2014-03-12,21:33:55,2810,    RegionScannerHolder existing =
d8ce8d05063,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2014-03-12,21:33:55,2811,"      scanners.putIfAbsent(scannerName, new RegionScannerHolder(s, r));"
d8ce8d05063,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2014-03-12,21:33:55,2812,"    assert existing == null : ""scannerId must be unique within regionserver\'s whole lifecycle!"";"
d8ce8d05063,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2014-03-12,21:33:55,2813,
d8ce8d05063,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2014-03-12,21:33:55,2814,"    this.leases.createLease(scannerName, this.scannerLeaseTimeoutPeriod,"
d8ce8d05063,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2014-03-12,21:33:55,2815,        new ScannerListener(scannerName));
d8ce8d05063,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2014-03-12,21:33:55,2816,
d20edb96dc4,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2013-08-06,20:10:37,2817,    return scannerId;
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,2818,  }
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,2819,
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2820,  // Start Client methods
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2821,
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2822,  /**
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2823,   * Get data from a table.
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2824,   *
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2825,   * @param controller the RPC controller
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2826,   * @param request the get request
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2827,   * @throws ServiceException
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2828,   */
202118d3b50,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,larsh,2011-10-12,21:42:20,2829,  @Override
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2830,"  public GetResponse get(final RpcController controller,"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2831,      final GetRequest request) throws ServiceException {
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2012-11-06,23:22:01,2832,    long before = EnvironmentEdgeManager.currentTimeMillis();
202118d3b50,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,larsh,2011-10-12,21:42:20,2833,    try {
4acb881d78a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-12-20,19:21:53,2834,      checkOpen();
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2012-11-06,23:22:01,2835,      requestCount.increment();
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2836,      HRegion region = getRegion(request.getRegion());
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,2837,
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2838,      GetResponse.Builder builder = GetResponse.newBuilder();
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2839,      ClientProtos.Get get = request.getGet();
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2840,      Boolean existence = null;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2841,      Result r = null;
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,2842,
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,2843,      if (get.hasClosestRowBefore() && get.getClosestRowBefore()) {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2844,        if (get.getColumnCount() != 1) {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2845,          throw new DoNotRetryIOException(
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2846,"            ""get ClosestRowBefore supports one and only one family now, not """
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2847,"              + get.getColumnCount() + "" families"");"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2848,        }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2849,        byte[] row = get.getRow().toByteArray();
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2850,        byte[] family = get.getColumn(0).getFamily().toByteArray();
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2851,"        r = region.getClosestRowBefore(row, family);"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2852,      } else {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2853,        Get clientGet = ProtobufUtil.toGet(get);
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,2854,        if (get.getExistenceOnly() && region.getCoprocessorHost() != null) {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2855,          existence = region.getCoprocessorHost().preExists(clientGet);
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2856,        }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2857,        if (existence == null) {
ea245beac7a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-01-19,22:45:11,2858,          r = region.get(clientGet);
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,2859,          if (get.getExistenceOnly()) {
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,2860,            boolean exists = r.getExists();
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2861,            if (region.getCoprocessorHost() != null) {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2862,"              exists = region.getCoprocessorHost().postExists(clientGet, exists);"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2863,            }
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,2864,            existence = exists;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2865,          }
202118d3b50,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,larsh,2011-10-12,21:42:20,2866,        }
202118d3b50,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,larsh,2011-10-12,21:42:20,2867,      }
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,2868,      if (existence != null){
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,2869,        ClientProtos.Result pbr = ProtobufUtil.toResult(existence);
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,2870,        builder.setResult(pbr);
74f6e25c8f0,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-11-19,15:39:35,2871,      } else  if (r != null) {
10eec81e096,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-09-16,21:05:35,2872,        ClientProtos.Result pbr = ProtobufUtil.toResult(r);
10eec81e096,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-09-16,21:05:35,2873,        builder.setResult(pbr);
202118d3b50,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,larsh,2011-10-12,21:42:20,2874,      }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2875,      return builder.build();
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2876,    } catch (IOException ie) {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2877,      throw new ServiceException(ie);
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2012-11-06,23:22:01,2878,    } finally {
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2012-11-06,23:22:01,2879,      metricsRegionServer.updateGet(EnvironmentEdgeManager.currentTimeMillis() - before);
202118d3b50,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,larsh,2011-10-12,21:42:20,2880,    }
202118d3b50,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,larsh,2011-10-12,21:42:20,2881,  }
202118d3b50,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,larsh,2011-10-12,21:42:20,2882,
202118d3b50,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,larsh,2011-10-12,21:42:20,2883,
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2884,  /**
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2885,   * Mutate data in a table.
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2886,   *
5fde90f68f2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-03-20,19:36:46,2887,   * @param rpcc the RPC controller
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2888,   * @param request the mutate request
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2889,   * @throws ServiceException
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2890,   */
97f79767551,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Gray,2010-10-26,18:50:13,2891,  @Override
5fde90f68f2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-03-20,19:36:46,2892,"  public MutateResponse mutate(final RpcController rpcc,"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2893,      final MutateRequest request) throws ServiceException {
5fde90f68f2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-03-20,19:36:46,2894,    // rpc controller is how we bring in data via the back door;  it is unprotobuf\'ed data.
5fde90f68f2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-03-20,19:36:46,2895,    // It is also the conduit via which we pass back data.
5fde90f68f2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-03-20,19:36:46,2896,    PayloadCarryingRpcController controller = (PayloadCarryingRpcController)rpcc;
5fde90f68f2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-03-20,19:36:46,2897,    CellScanner cellScanner = controller != null? controller.cellScanner(): null;
5fde90f68f2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-03-20,19:36:46,2898,    // Clear scanner so we are not holding on to reference across call.
0d5a678ac9d,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-05-29,16:21:33,2899,    if (controller != null) controller.setCellScanner(null);
97f79767551,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Gray,2010-10-26,18:50:13,2900,    try {
4acb881d78a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-12-20,19:21:53,2901,      checkOpen();
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2012-11-06,23:22:01,2902,      requestCount.increment();
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2903,      HRegion region = getRegion(request.getRegion());
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2904,      MutateResponse.Builder builder = MutateResponse.newBuilder();
5fde90f68f2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-03-20,19:36:46,2905,      MutationProto mutation = request.getMutation();
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2906,      if (!region.getRegionInfo().isMetaTable()) {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2907,        cacheFlusher.reclaimMemStoreMemory();
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2908,      }
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,2909,      long nonceGroup = request.hasNonceGroup()
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,2910,          ? request.getNonceGroup() : HConstants.NO_NONCE;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2911,      Result r = null;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2912,      Boolean processed = null;
5fde90f68f2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-03-20,19:36:46,2913,      MutationType type = mutation.getMutateType();
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2914,      switch (type) {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2915,      case APPEND:
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,2916,        // TODO: this doesn\'t actually check anything.
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,2917,"        r = append(region, mutation, cellScanner, nonceGroup);"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2918,        break;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2919,      case INCREMENT:
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,2920,        // TODO: this doesn\'t actually check anything.
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,2921,"        r = increment(region, mutation, cellScanner, nonceGroup);"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2922,        break;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2923,      case PUT:
5fde90f68f2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-03-20,19:36:46,2924,"        Put put = ProtobufUtil.toPut(mutation, cellScanner);"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2925,        if (request.hasCondition()) {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2926,          Condition condition = request.getCondition();
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2927,          byte[] row = condition.getRow().toByteArray();
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2928,          byte[] family = condition.getFamily().toByteArray();
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2929,          byte[] qualifier = condition.getQualifier().toByteArray();
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2930,          CompareOp compareOp = CompareOp.valueOf(condition.getCompareType().name());
476a2747290,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,gchanan,2012-09-13,02:41:05,2931,          ByteArrayComparable comparator =
b4be2041d45,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-08-24,23:51:51,2932,            ProtobufUtil.toComparator(condition.getComparator());
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2933,          if (region.getCoprocessorHost() != null) {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2934,            processed = region.getCoprocessorHost().preCheckAndPut(
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2935,"              row, family, qualifier, compareOp, comparator, put);"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2936,          }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2937,          if (processed == null) {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2938,"            boolean result = region.checkAndMutate(row, family,"
ea245beac7a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-01-19,22:45:11,2939,"              qualifier, compareOp, comparator, put, true);"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2940,            if (region.getCoprocessorHost() != null) {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2941,"              result = region.getCoprocessorHost().postCheckAndPut(row, family,"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2942,"                qualifier, compareOp, comparator, put, result);"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2943,            }
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,2944,            processed = result;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2945,          }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2946,        } else {
ea245beac7a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-01-19,22:45:11,2947,          region.put(put);
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2948,          processed = Boolean.TRUE;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2949,        }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2950,        break;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2951,      case DELETE:
5fde90f68f2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-03-20,19:36:46,2952,"        Delete delete = ProtobufUtil.toDelete(mutation, cellScanner);"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2953,        if (request.hasCondition()) {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2954,          Condition condition = request.getCondition();
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2955,          byte[] row = condition.getRow().toByteArray();
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2956,          byte[] family = condition.getFamily().toByteArray();
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2957,          byte[] qualifier = condition.getQualifier().toByteArray();
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2958,          CompareOp compareOp = CompareOp.valueOf(condition.getCompareType().name());
476a2747290,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,gchanan,2012-09-13,02:41:05,2959,          ByteArrayComparable comparator =
b4be2041d45,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-08-24,23:51:51,2960,            ProtobufUtil.toComparator(condition.getComparator());
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2961,          if (region.getCoprocessorHost() != null) {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2962,            processed = region.getCoprocessorHost().preCheckAndDelete(
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2963,"              row, family, qualifier, compareOp, comparator, delete);"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2964,          }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2965,          if (processed == null) {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2966,"            boolean result = region.checkAndMutate(row, family,"
ea245beac7a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-01-19,22:45:11,2967,"              qualifier, compareOp, comparator, delete, true);"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2968,            if (region.getCoprocessorHost() != null) {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2969,"              result = region.getCoprocessorHost().postCheckAndDelete(row, family,"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2970,"                qualifier, compareOp, comparator, delete, result);"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2971,            }
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,2972,            processed = result;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2973,          }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2974,        } else {
3c0f2508d01,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,larsh,2013-04-12,17:07:00,2975,          region.delete(delete);
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2976,          processed = Boolean.TRUE;
1842a1ee857,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2010-12-15,10:11:59,2977,        }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2978,        break;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2979,        default:
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2980,          throw new DoNotRetryIOException(
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2981,"            ""Unsupported mutate type: "" + type.name());"
7299a72715f,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2010-11-20,01:23:39,2982,      }
10eec81e096,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-09-16,21:05:35,2983,      if (processed != null) builder.setProcessed(processed.booleanValue());
10eec81e096,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-09-16,21:05:35,2984,"      addResult(builder, r, controller);"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2985,      return builder.build();
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2986,    } catch (IOException ie) {
97f79767551,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Gray,2010-10-26,18:50:13,2987,      checkFileSystem();
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,2988,      throw new ServiceException(ie);
97f79767551,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Gray,2010-10-26,18:50:13,2989,    }
97f79767551,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Gray,2010-10-26,18:50:13,2990,  }
97f79767551,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Gray,2010-10-26,18:50:13,2991,
10eec81e096,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-09-16,21:05:35,2992,
10eec81e096,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-09-16,21:05:35,2993,  /**
10eec81e096,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-09-16,21:05:35,2994,   * @return True if current call supports cellblocks
10eec81e096,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-09-16,21:05:35,2995,   */
10eec81e096,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-09-16,21:05:35,2996,  private boolean isClientCellBlockSupport() {
10eec81e096,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-09-16,21:05:35,2997,    RpcCallContext context = RpcServer.getCurrentCall();
10eec81e096,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-09-16,21:05:35,2998,    return context != null && context.isClientCellBlockSupport();
10eec81e096,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-09-16,21:05:35,2999,  }
10eec81e096,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-09-16,21:05:35,3000,
10eec81e096,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-09-16,21:05:35,3001,"  private void addResult(final MutateResponse.Builder builder,"
10eec81e096,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-09-16,21:05:35,3002,"      final Result result, final PayloadCarryingRpcController rpcc) {"
10eec81e096,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-09-16,21:05:35,3003,    if (result == null) return;
10eec81e096,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-09-16,21:05:35,3004,    if (isClientCellBlockSupport()) {
10eec81e096,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-09-16,21:05:35,3005,      builder.setResult(ProtobufUtil.toResultNoData(result));
10eec81e096,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-09-16,21:05:35,3006,      rpcc.setCellScanner(result.cellScanner());
10eec81e096,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-09-16,21:05:35,3007,    } else {
10eec81e096,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-09-16,21:05:35,3008,      ClientProtos.Result pbr = ProtobufUtil.toResult(result);
10eec81e096,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-09-16,21:05:35,3009,      builder.setResult(pbr);
10eec81e096,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-09-16,21:05:35,3010,    }
10eec81e096,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-09-16,21:05:35,3011,  }
10eec81e096,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-09-16,21:05:35,3012,
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3013,  //
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3014,  // remote scanner interface
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3015,  //
19b01d968d3,core/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-04-30,06:52:27,3016,
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3017,  /**
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3018,   * Scan data in a table.
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3019,   *
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3020,   * @param controller the RPC controller
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3021,   * @param request the scan request
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3022,   * @throws ServiceException
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3023,   */
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3024,  @Override
02de8c40d9b,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-08-28,19:59:09,3025,"  public ScanResponse scan(final RpcController controller, final ScanRequest request)"
02de8c40d9b,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-08-28,19:59:09,3026,  throws ServiceException {
d20edb96dc4,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2013-08-06,20:10:37,3027,    Leases.Lease lease = null;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3028,    String scannerName = null;
19b01d968d3,core/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-04-30,06:52:27,3029,    try {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3030,      if (!request.hasScannerId() && !request.hasScan()) {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3031,        throw new DoNotRetryIOException(
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3032,"          ""Missing required input: scannerId or scan"");"
7299a72715f,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2010-11-20,01:23:39,3033,      }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3034,      long scannerId = -1;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3035,      if (request.hasScannerId()) {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3036,        scannerId = request.getScannerId();
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3037,        scannerName = String.valueOf(scannerId);
7299a72715f,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2010-11-20,01:23:39,3038,      }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3039,      try {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3040,        checkOpen();
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3041,      } catch (IOException e) {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3042,"        // If checkOpen failed, server not running or filesystem gone,"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3043,        // cancel this lease; filesystem is gone or we\'re closing or something.
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3044,        if (scannerName != null) {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3045,          try {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3046,            leases.cancelLease(scannerName);
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3047,          } catch (LeaseException le) {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3048,"            LOG.info(""Server shutting down and client tried to access missing scanner "" +"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3049,              scannerName);
9f12e0d0605,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-09-04,03:57:21,3050,          }
9f12e0d0605,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-09-04,03:57:21,3051,        }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3052,        throw e;
7e394dcb87b,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Ryan Rawson,2010-11-10,01:54:13,3053,      }
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2012-11-06,23:22:01,3054,      requestCount.increment();
1eede65ae18,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Ryan Rawson,2010-10-19,01:01:52,3055,
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3056,      int ttl = 0;
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3057,      HRegion region = null;
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3058,      RegionScanner scanner = null;
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3059,      RegionScannerHolder rsh = null;
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3060,      boolean moreResults = true;
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3061,      boolean closeScanner = false;
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3062,      ScanResponse.Builder builder = ScanResponse.newBuilder();
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3063,      if (request.hasCloseScanner()) {
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3064,        closeScanner = request.getCloseScanner();
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3065,      }
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3066,      int rows = 1;
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3067,      if (request.hasNumberOfRows()) {
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3068,        rows = request.getNumberOfRows();
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3069,      }
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3070,      if (request.hasScannerId()) {
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3071,        rsh = scanners.get(scannerName);
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3072,        if (rsh == null) {
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3073,"          LOG.info(""Client tried to access missing scanner "" + scannerName);"
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3074,          throw new UnknownScannerException(
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3075,"            ""Name: "" + scannerName + "", already closed?"");"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3076,        }
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3077,        scanner = rsh.s;
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3078,        HRegionInfo hri = scanner.getRegionInfo();
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3079,        region = getRegion(hri.getRegionName());
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3080,"        if (region != rsh.r) { // Yes, should be the same instance"
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3081,"          throw new NotServingRegionException(""Region was re-opened after the scanner"""
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3082,"            + scannerName + "" was created: "" + hri.getRegionNameAsString());"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3083,        }
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3084,      } else {
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3085,        region = getRegion(request.getRegion());
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3086,        ClientProtos.Scan protoScan = request.getScan();
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3087,        boolean isLoadingCfsOnDemandSet = protoScan.hasLoadColumnFamiliesOnDemand();
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3088,        Scan scan = ProtobufUtil.toScan(protoScan);
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3089,"        // if the request doesn\'t set this, get the default region setting."
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3090,        if (!isLoadingCfsOnDemandSet) {
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3091,          scan.setLoadColumnFamiliesOnDemand(region.isLoadingCfsOnDemandDefault());
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3092,        }
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3093,        scan.getAttribute(Scan.SCAN_ATTRIBUTES_METRICS_ENABLE);
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3094,        region.prepareScanner(scan);
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3095,        if (region.getCoprocessorHost() != null) {
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3096,          scanner = region.getCoprocessorHost().preScannerOpen(scan);
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3097,        }
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3098,        if (scanner == null) {
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3099,          scanner = region.getScanner(scan);
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3100,        }
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3101,        if (region.getCoprocessorHost() != null) {
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3102,"          scanner = region.getCoprocessorHost().postScannerOpen(scan, scanner);"
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3103,        }
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3104,"        scannerId = addScanner(scanner, region);"
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3105,        scannerName = String.valueOf(scannerId);
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3106,        ttl = this.scannerLeaseTimeoutPeriod;
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3107,      }
1eede65ae18,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Ryan Rawson,2010-10-19,01:01:52,3108,
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3109,      if (rows > 0) {
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3110,        // if nextCallSeq does not match throw Exception straight away. This needs to be
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3111,        // performed even before checking of Lease.
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3112,        // See HBASE-5974
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3113,        if (request.hasNextCallSeq()) {
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3114,          if (rsh == null) {
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3115,            rsh = scanners.get(scannerName);
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3116,          }
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3117,          if (rsh != null) {
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3118,            if (request.getNextCallSeq() != rsh.nextCallSeq) {
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3119,"              throw new OutOfOrderScannerNextException(""Expected nextCallSeq: "" + rsh.nextCallSeq"
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3120,"                + "" But the nextCallSeq got from client: "" + request.getNextCallSeq() +"
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3121,"                ""; request="" + TextFormat.shortDebugString(request));"
c9073c46319,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-10-25,16:43:22,3122,            }
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3123,            // Increment the nextCallSeq value which is the next expected from client.
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3124,            rsh.nextCallSeq++;
c9073c46319,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-10-25,16:43:22,3125,          }
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3126,        }
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3127,        try {
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3128,          // Remove lease while its being processed in server; protects against case
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3129,          // where processing of request takes > lease expiration time.
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3130,          lease = leases.removeLease(scannerName);
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3131,          List<Result> results = new ArrayList<Result>(rows);
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3132,          long currentScanResultSize = 0;
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3133,
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3134,          boolean done = false;
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3135,          // Call coprocessor. Get region info from scanner.
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3136,          if (region != null && region.getCoprocessorHost() != null) {
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3137,            Boolean bypass = region.getCoprocessorHost().preScannerNext(
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3138,"              scanner, results, rows);"
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3139,            if (!results.isEmpty()) {
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3140,              for (Result r : results) {
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3141,                if (maxScannerResultSize < Long.MAX_VALUE){
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3142,                  for (Cell kv : r.rawCells()) {
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3143,                    // TODO
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3144,                    currentScanResultSize += KeyValueUtil.ensureKeyValue(kv).heapSize();
d20edb96dc4,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2013-08-06,20:10:37,3145,                  }
d20edb96dc4,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2013-08-06,20:10:37,3146,                }
d20edb96dc4,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2013-08-06,20:10:37,3147,              }
d20edb96dc4,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2013-08-06,20:10:37,3148,            }
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3149,            if (bypass != null && bypass.booleanValue()) {
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3150,              done = true;
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3151,            }
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3152,          }
7e394dcb87b,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Ryan Rawson,2010-11-10,01:54:13,3153,
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3154,          if (!done) {
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3155,            long maxResultSize = scanner.getMaxResultSize();
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3156,            if (maxResultSize <= 0) {
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3157,              maxResultSize = maxScannerResultSize;
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3158,            }
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3159,            List<Cell> values = new ArrayList<Cell>();
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3160,            region.startRegionOperation(Operation.SCAN);
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3161,            try {
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3162,              int i = 0;
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3163,              synchronized(scanner) {
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3164,                for (; i < rows
4fb0da7f842,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2013-12-18,01:29:21,3165,                    && currentScanResultSize < maxResultSize; ) {
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3166,                  // Collect values to be returned here
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3167,                  boolean moreRows = scanner.nextRaw(values);
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3168,                  if (!values.isEmpty()) {
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3169,                    if (maxScannerResultSize < Long.MAX_VALUE){
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3170,                      for (Cell kv : values) {
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3171,                        currentScanResultSize += KeyValueUtil.ensureKeyValue(kv).heapSize();
d20edb96dc4,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2013-08-06,20:10:37,3172,                      }
d20edb96dc4,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2013-08-06,20:10:37,3173,                    }
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3174,                    results.add(Result.create(values));
4fb0da7f842,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2013-12-18,01:29:21,3175,                    i++;
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3176,                  }
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3177,                  if (!moreRows) {
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3178,                    break;
d20edb96dc4,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2013-08-06,20:10:37,3179,                  }
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3180,                  values.clear();
d20edb96dc4,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2013-08-06,20:10:37,3181,                }
d20edb96dc4,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2013-08-06,20:10:37,3182,              }
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3183,              region.readRequestsCount.add(i);
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3184,            } finally {
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3185,              region.closeRegionOperation();
d20edb96dc4,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2013-08-06,20:10:37,3186,            }
d20edb96dc4,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2013-08-06,20:10:37,3187,
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3188,            // coprocessor postNext hook
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3189,            if (region != null && region.getCoprocessorHost() != null) {
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3190,"              region.getCoprocessorHost().postScannerNext(scanner, results, rows, true);"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3191,            }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3192,          }
1eede65ae18,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Ryan Rawson,2010-10-19,01:01:52,3193,
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3194,          // If the scanner\'s filter - if any - is done with the scan
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3195,          // and wants to tell the client to stop the scan. This is done by passing
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3196,"          // a null result, and setting moreResults to false."
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3197,          if (scanner.isFilterDone() && results.isEmpty()) {
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3198,            moreResults = false;
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3199,            results = null;
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3200,          } else {
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3201,"            addResults(builder, results, controller);"
7e394dcb87b,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Ryan Rawson,2010-11-10,01:54:13,3202,          }
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3203,        } finally {
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3204,          // We\'re done. On way out re-add the above removed lease.
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3205,          // Adding resets expiration time on lease.
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3206,          if (scanners.containsKey(scannerName)) {
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3207,            if (lease != null) leases.addLease(lease);
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3208,            ttl = this.scannerLeaseTimeoutPeriod;
1eede65ae18,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Ryan Rawson,2010-10-19,01:01:52,3209,          }
1eede65ae18,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Ryan Rawson,2010-10-19,01:01:52,3210,        }
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3211,      }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3212,
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3213,      if (!moreResults || closeScanner) {
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3214,        ttl = 0;
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3215,        moreResults = false;
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3216,        if (region != null && region.getCoprocessorHost() != null) {
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3217,          if (region.getCoprocessorHost().preScannerClose(scanner)) {
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3218,            return builder.build(); // bypass
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3219,          }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3220,        }
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3221,        rsh = scanners.remove(scannerName);
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3222,        if (rsh != null) {
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3223,          scanner = rsh.s;
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3224,          scanner.close();
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3225,          leases.cancelLease(scannerName);
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3226,          if (region != null && region.getCoprocessorHost() != null) {
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3227,            region.getCoprocessorHost().postScannerClose(scanner);
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3228,          }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3229,        }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3230,      }
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3231,
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3232,      if (ttl > 0) {
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3233,        builder.setTtl(ttl);
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3234,      }
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3235,      builder.setScannerId(scannerId);
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3236,      builder.setMoreResults(moreResults);
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3237,      return builder.build();
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3238,    } catch (IOException ie) {
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3239,      if (scannerName != null && ie instanceof NotServingRegionException) {
fc9407f3a3d,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2014-03-06,01:42:32,3240,        RegionScannerHolder rsh = scanners.remove(scannerName);
fc9407f3a3d,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2014-03-06,01:42:32,3241,        if (rsh != null) {
fc9407f3a3d,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2014-03-06,01:42:32,3242,          try {
fc9407f3a3d,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2014-03-06,01:42:32,3243,            RegionScanner scanner = rsh.s;
fc9407f3a3d,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2014-03-06,01:42:32,3244,            scanner.close();
fc9407f3a3d,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2014-03-06,01:42:32,3245,            leases.cancelLease(scannerName);
fc9407f3a3d,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2014-03-06,01:42:32,3246,          } catch (IOException e) {}
fc9407f3a3d,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2014-03-06,01:42:32,3247,        }
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,3248,      }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3249,      throw new ServiceException(ie);
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3250,    }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3251,  }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3252,
10eec81e096,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-09-16,21:05:35,3253,"  private void addResults(final ScanResponse.Builder builder, final List<Result> results,"
02de8c40d9b,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-08-28,19:59:09,3254,      final RpcController controller) {
02de8c40d9b,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-08-28,19:59:09,3255,    if (results == null || results.isEmpty()) return;
10eec81e096,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-09-16,21:05:35,3256,    if (isClientCellBlockSupport()) {
02de8c40d9b,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-08-28,19:59:09,3257,      for (Result res : results) {
02de8c40d9b,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-08-28,19:59:09,3258,        builder.addCellsPerResult(res.size());
02de8c40d9b,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-08-28,19:59:09,3259,      }
02de8c40d9b,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-08-28,19:59:09,3260,      ((PayloadCarryingRpcController)controller).
10eec81e096,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-09-16,21:05:35,3261,        setCellScanner(CellUtil.createCellScanner(results));
02de8c40d9b,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-08-28,19:59:09,3262,    } else {
02de8c40d9b,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-08-28,19:59:09,3263,      for (Result res: results) {
02de8c40d9b,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-08-28,19:59:09,3264,        ClientProtos.Result pbr = ProtobufUtil.toResult(res);
02de8c40d9b,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-08-28,19:59:09,3265,        builder.addResults(pbr);
02de8c40d9b,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-08-28,19:59:09,3266,      }
02de8c40d9b,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-08-28,19:59:09,3267,    }
02de8c40d9b,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-08-28,19:59:09,3268,  }
02de8c40d9b,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-08-28,19:59:09,3269,
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3270,  /**
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3271,   * Atomically bulk load several HFiles into an open region
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3272,"   * @return true if successful, false is failed but recoverably (no action)"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3273,   * @throws IOException if failed unrecoverably
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3274,   */
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3275,  @Override
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3276,"  public BulkLoadHFileResponse bulkLoadHFile(final RpcController controller,"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3277,      final BulkLoadHFileRequest request) throws ServiceException {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3278,    try {
4acb881d78a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-12-20,19:21:53,3279,      checkOpen();
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2012-11-06,23:22:01,3280,      requestCount.increment();
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3281,      HRegion region = getRegion(request.getRegion());
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3282,"      List<Pair<byte[], String>> familyPaths = new ArrayList<Pair<byte[], String>>();"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3283,      for (FamilyPath familyPath: request.getFamilyPathList()) {
22ca8dc565d,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2012-06-23,00:54:11,3284,"        familyPaths.add(new Pair<byte[], String>(familyPath.getFamily().toByteArray(),"
22ca8dc565d,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2012-06-23,00:54:11,3285,          familyPath.getPath()));
22ca8dc565d,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2012-06-23,00:54:11,3286,      }
22ca8dc565d,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2012-06-23,00:54:11,3287,      boolean bypass = false;
22ca8dc565d,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2012-06-23,00:54:11,3288,      if (region.getCoprocessorHost() != null) {
22ca8dc565d,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2012-06-23,00:54:11,3289,        bypass = region.getCoprocessorHost().preBulkLoadHFile(familyPaths);
22ca8dc565d,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2012-06-23,00:54:11,3290,      }
22ca8dc565d,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2012-06-23,00:54:11,3291,      boolean loaded = false;
22ca8dc565d,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2012-06-23,00:54:11,3292,      if (!bypass) {
564fc2e7c3d,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-09-08,20:13:21,3293,"        loaded = region.bulkLoadHFiles(familyPaths, request.getAssignSeqNum());"
22ca8dc565d,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2012-06-23,00:54:11,3294,      }
22ca8dc565d,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2012-06-23,00:54:11,3295,      if (region.getCoprocessorHost() != null) {
22ca8dc565d,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2012-06-23,00:54:11,3296,"        loaded = region.getCoprocessorHost().postBulkLoadHFile(familyPaths, loaded);"
9f12e0d0605,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-09-04,03:57:21,3297,      }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3298,      BulkLoadHFileResponse.Builder builder = BulkLoadHFileResponse.newBuilder();
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3299,      builder.setLoaded(loaded);
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3300,      return builder.build();
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3301,    } catch (IOException ie) {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3302,      throw new ServiceException(ie);
9f12e0d0605,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-09-04,03:57:21,3303,    }
5d8b73585f5,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-09-15,18:10:43,3304,  }
5d8b73585f5,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-09-15,18:10:43,3305,
fbfbad4e4d5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Gary Helmling,2012-09-18,06:32:57,3306,  @Override
fbfbad4e4d5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Gary Helmling,2012-09-18,06:32:57,3307,"  public CoprocessorServiceResponse execService(final RpcController controller,"
fbfbad4e4d5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Gary Helmling,2012-09-18,06:32:57,3308,      final CoprocessorServiceRequest request) throws ServiceException {
fbfbad4e4d5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Gary Helmling,2012-09-18,06:32:57,3309,    try {
4acb881d78a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-12-20,19:21:53,3310,      checkOpen();
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2012-11-06,23:22:01,3311,      requestCount.increment();
fbfbad4e4d5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Gary Helmling,2012-09-18,06:32:57,3312,      HRegion region = getRegion(request.getRegion());
d54525ca904,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2014-03-12,15:56:57,3313,"      Message result = execServiceOnRegion(region, request.getCall());"
fbfbad4e4d5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Gary Helmling,2012-09-18,06:32:57,3314,      CoprocessorServiceResponse.Builder builder =
fbfbad4e4d5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Gary Helmling,2012-09-18,06:32:57,3315,          CoprocessorServiceResponse.newBuilder();
fbfbad4e4d5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Gary Helmling,2012-09-18,06:32:57,3316,      builder.setRegion(RequestConverter.buildRegionSpecifier(
fbfbad4e4d5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Gary Helmling,2012-09-18,06:32:57,3317,"          RegionSpecifierType.REGION_NAME, region.getRegionName()));"
fbfbad4e4d5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Gary Helmling,2012-09-18,06:32:57,3318,      builder.setValue(
fbfbad4e4d5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Gary Helmling,2012-09-18,06:32:57,3319,          builder.getValueBuilder().setName(result.getClass().getName())
fbfbad4e4d5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Gary Helmling,2012-09-18,06:32:57,3320,              .setValue(result.toByteString()));
fbfbad4e4d5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Gary Helmling,2012-09-18,06:32:57,3321,      return builder.build();
fbfbad4e4d5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Gary Helmling,2012-09-18,06:32:57,3322,    } catch (IOException ie) {
fbfbad4e4d5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Gary Helmling,2012-09-18,06:32:57,3323,      throw new ServiceException(ie);
a5f27d67ca0,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2010-11-19,21:14:05,3324,    }
a5f27d67ca0,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2010-11-19,21:14:05,3325,  }
a5f27d67ca0,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2010-11-19,21:14:05,3326,
d54525ca904,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2014-03-12,15:56:57,3327,"  private Message execServiceOnRegion(HRegion region,"
d54525ca904,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2014-03-12,15:56:57,3328,      final ClientProtos.CoprocessorServiceCall serviceCall) throws IOException {
d54525ca904,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2014-03-12,15:56:57,3329,    // ignore the passed in controller (from the serialized call)
d54525ca904,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2014-03-12,15:56:57,3330,    ServerRpcController execController = new ServerRpcController();
d54525ca904,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2014-03-12,15:56:57,3331,"    Message result = region.execService(execController, serviceCall);"
d54525ca904,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2014-03-12,15:56:57,3332,    if (execController.getFailedOn() != null) {
d54525ca904,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2014-03-12,15:56:57,3333,      throw execController.getFailedOn();
d54525ca904,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2014-03-12,15:56:57,3334,    }
d54525ca904,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2014-03-12,15:56:57,3335,    return result;
d54525ca904,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2014-03-12,15:56:57,3336,  }
d54525ca904,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2014-03-12,15:56:57,3337,
19b01d968d3,core/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-04-30,06:52:27,3338,  /**
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3339,"   * Execute multiple actions on a table: get, mutate, and/or execCoprocessor"
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,3340,   *
5fde90f68f2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-03-20,19:36:46,3341,   * @param rpcc the RPC controller
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3342,   * @param request the multi request
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3343,   * @throws ServiceException
19b01d968d3,core/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-04-30,06:52:27,3344,   */
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,3345,  @Override
5fde90f68f2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-03-20,19:36:46,3346,"  public MultiResponse multi(final RpcController rpcc, final MultiRequest request)"
5fde90f68f2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-03-20,19:36:46,3347,  throws ServiceException {
4acb881d78a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-12-20,19:21:53,3348,    try {
4acb881d78a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-12-20,19:21:53,3349,      checkOpen();
4acb881d78a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-12-20,19:21:53,3350,    } catch (IOException ie) {
4acb881d78a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-12-20,19:21:53,3351,      throw new ServiceException(ie);
4acb881d78a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-12-20,19:21:53,3352,    }
4acb881d78a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-12-20,19:21:53,3353,
5fde90f68f2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-03-20,19:36:46,3354,    // rpc controller is how we bring in data via the back door;  it is unprotobuf\'ed data.
5fde90f68f2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-03-20,19:36:46,3355,    // It is also the conduit via which we pass back data.
5fde90f68f2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-03-20,19:36:46,3356,    PayloadCarryingRpcController controller = (PayloadCarryingRpcController)rpcc;
0d5a678ac9d,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-05-29,16:21:33,3357,    CellScanner cellScanner = controller != null ? controller.cellScanner(): null;
0d5a678ac9d,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-05-29,16:21:33,3358,    if (controller != null) controller.setCellScanner(null);
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3359,
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,3360,    long nonceGroup = request.hasNonceGroup() ? request.getNonceGroup() : HConstants.NO_NONCE;
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,3361,
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3362,"    // this will contain all the cells that we need to return. It\'s created later, if needed."
5fde90f68f2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-03-20,19:36:46,3363,    List<CellScannable> cellsToReturn = null;
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3364,    MultiResponse.Builder responseBuilder = MultiResponse.newBuilder();
dc8ecd9a9a2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2013-11-19,14:01:30,3365,    RegionActionResult.Builder regionActionResultBuilder = RegionActionResult.newBuilder();
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3366,
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3367,    for (RegionAction regionAction : request.getRegionActionList()) {
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3368,      this.requestCount.add(regionAction.getActionCount());
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3369,      HRegion region;
dc8ecd9a9a2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2013-11-19,14:01:30,3370,      regionActionResultBuilder.clear();
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3371,      try {
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3372,        region = getRegion(regionAction.getRegion());
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3373,      } catch (IOException e) {
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3374,        regionActionResultBuilder.setException(ResponseConverter.buildException(e));
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3375,        responseBuilder.addRegionActionResult(regionActionResultBuilder.build());
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3376,        continue;  // For this region it\'s a failure.
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3377,      }
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3378,
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3379,      if (regionAction.hasAtomic() && regionAction.getAtomic()) {
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3380,        // How does this call happen?  It may need some work to play well w/ the surroundings.
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3381,        // Need to return an item per Action along w/ Action index.  TODO.
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3382,        try {
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3383,"          mutateRows(region, regionAction.getActionList(), cellScanner);"
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3384,        } catch (IOException e) {
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3385,"          // As it\'s atomic, we may expect it\'s a global failure."
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3386,          regionActionResultBuilder.setException(ResponseConverter.buildException(e));
5987ee67e12,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-09-30,21:27:33,3387,        }
5987ee67e12,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-09-30,21:27:33,3388,      } else {
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3389,        // doNonAtomicRegionMutation manages the exception internally
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3390,"        cellsToReturn = doNonAtomicRegionMutation(region, regionAction, cellScanner,"
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,3391,"            regionActionResultBuilder, cellsToReturn, nonceGroup);"
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3392,      }
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3393,      responseBuilder.addRegionActionResult(regionActionResultBuilder.build());
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3394,    }
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3395,    // Load the controller with the Cells to return.
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3396,    if (cellsToReturn != null && !cellsToReturn.isEmpty() && controller != null) {
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3397,      controller.setCellScanner(CellUtil.createCellScanner(cellsToReturn));
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3398,    }
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3399,    return responseBuilder.build();
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3400,  }
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3401,
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3402,  /**
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3403,"   * Run through the regionMutation <code>rm</code> and per Mutation, do the work, and then when"
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3404,"   * done, add an instance of a {@link ResultOrException} that corresponds to each Mutation."
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3405,   * @param region
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3406,   * @param actions
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3407,   * @param cellScanner
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3408,   * @param builder
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3409,   * @param cellsToReturn  Could be null. May be allocated in this method.  This is what this
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3410,   * method returns as a \'result\'.
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3411,   * @return Return the <code>cellScanner</code> passed
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3412,   */
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3413,"  private List<CellScannable> doNonAtomicRegionMutation(final HRegion region,"
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3414,"      final RegionAction actions, final CellScanner cellScanner,"
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,3415,"      final RegionActionResult.Builder builder, List<CellScannable> cellsToReturn, long nonceGroup) {"
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3416,    // Gather up CONTIGUOUS Puts and Deletes in this mutations List.  Idea is that rather than do
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3417,"    // one at a time, we instead pass them in batch.  Be aware that the corresponding"
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3418,    // ResultOrException instance that matches each Put or Delete is then added down in the
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3419,    // doBatchOp call.  We should be staying aligned though the Put and Delete are deferred/batched
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3420,    List<ClientProtos.Action> mutations = null;
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3421,    for (ClientProtos.Action action: actions.getActionList()) {
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3422,      ClientProtos.ResultOrException.Builder resultOrExceptionBuilder = null;
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3423,      try {
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3424,        Result r = null;
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3425,        if (action.hasGet()) {
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3426,          Get get = ProtobufUtil.toGet(action.getGet());
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3427,          r = region.get(get);
d54525ca904,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2014-03-12,15:56:57,3428,        } else if (action.hasServiceCall()) {
d54525ca904,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2014-03-12,15:56:57,3429,          resultOrExceptionBuilder = ResultOrException.newBuilder();
d54525ca904,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2014-03-12,15:56:57,3430,          try {
d54525ca904,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2014-03-12,15:56:57,3431,"            Message result = execServiceOnRegion(region, action.getServiceCall());"
d54525ca904,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2014-03-12,15:56:57,3432,            ClientProtos.CoprocessorServiceResult.Builder serviceResultBuilder =
d54525ca904,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2014-03-12,15:56:57,3433,                ClientProtos.CoprocessorServiceResult.newBuilder();
d54525ca904,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2014-03-12,15:56:57,3434,            resultOrExceptionBuilder.setServiceResult(
d54525ca904,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2014-03-12,15:56:57,3435,                serviceResultBuilder.setValue(
d54525ca904,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2014-03-12,15:56:57,3436,                  serviceResultBuilder.getValueBuilder()
d54525ca904,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2014-03-12,15:56:57,3437,                    .setName(result.getClass().getName())
d54525ca904,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2014-03-12,15:56:57,3438,                    .setValue(result.toByteString())));
d54525ca904,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2014-03-12,15:56:57,3439,          } catch (IOException ioe) {
d54525ca904,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2014-03-12,15:56:57,3440,            resultOrExceptionBuilder.setException(ResponseConverter.buildException(ioe));
d54525ca904,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2014-03-12,15:56:57,3441,          }
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3442,        } else if (action.hasMutation()) {
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3443,          MutationType type = action.getMutation().getMutateType();
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3444,          if (type != MutationType.PUT && type != MutationType.DELETE && mutations != null &&
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3445,              !mutations.isEmpty()) {
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3446,            // Flush out any Puts or Deletes already collected.
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3447,"            doBatchOp(builder, region, mutations, cellScanner);"
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3448,            mutations.clear();
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3449,          }
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3450,          switch (type) {
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3451,          case APPEND:
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,3452,"            r = append(region, action.getMutation(), cellScanner, nonceGroup);"
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3453,            break;
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3454,          case INCREMENT:
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,3455,"            r = increment(region, action.getMutation(), cellScanner,  nonceGroup);"
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3456,            break;
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3457,          case PUT:
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3458,          case DELETE:
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3459,            // Collect the individual mutations and apply in a batch
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3460,            if (mutations == null) {
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3461,              mutations = new ArrayList<ClientProtos.Action>(actions.getActionCount());
5987ee67e12,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-09-30,21:27:33,3462,            }
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3463,            mutations.add(action);
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3464,            break;
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3465,          default:
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3466,"            throw new DoNotRetryIOException(""Unsupported mutate type: "" + type.name());"
5987ee67e12,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-09-30,21:27:33,3467,          }
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3468,        } else {
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3469,"          throw new HBaseIOException(""Unexpected Action type"");"
5987ee67e12,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-09-30,21:27:33,3470,        }
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3471,        if (r != null) {
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3472,          ClientProtos.Result pbResult = null;
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3473,          if (isClientCellBlockSupport()) {
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3474,            pbResult = ProtobufUtil.toResultNoData(r);
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3475,            //  Hard to guess the size here.  Just make a rough guess.
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3476,            if (cellsToReturn == null) cellsToReturn = new ArrayList<CellScannable>();
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3477,            cellsToReturn.add(r);
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3478,          } else {
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3479,            pbResult = ProtobufUtil.toResult(r);
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3480,          }
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3481,          resultOrExceptionBuilder =
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3482,            ClientProtos.ResultOrException.newBuilder().setResult(pbResult);
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3483,        }
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3484,        // Could get to here and there was no result and no exception.  Presumes we added
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3485,        // a Put or Delete to the collecting Mutations List for adding later.  In this
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3486,        // case the corresponding ResultOrException instance for the Put or Delete will be added
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3487,        // down in the doBatchOp method call rather than up here.
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3488,      } catch (IOException ie) {
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3489,        resultOrExceptionBuilder = ResultOrException.newBuilder().
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3490,          setException(ResponseConverter.buildException(ie));
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3491,      }
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3492,      if (resultOrExceptionBuilder != null) {
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3493,        // Propagate index.
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3494,        resultOrExceptionBuilder.setIndex(action.getIndex());
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3495,        builder.addResultOrException(resultOrExceptionBuilder.build());
5fde90f68f2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-03-20,19:36:46,3496,      }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3497,    }
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3498,    // Finish up any outstanding mutations
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3499,    if (mutations != null && !mutations.isEmpty()) {
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3500,"      doBatchOp(builder, region, mutations, cellScanner);"
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3501,    }
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,3502,    return cellsToReturn;
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,3503,  }
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,3504,
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3505,// End Client methods
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3506,// Start Admin methods
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,3507,
f5213095324,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-31,23:51:44,3508,  @Override
4559e53e649,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,larsh,2012-08-31,00:05:36,3509,  @QosPriority(priority=HConstants.HIGH_QOS)
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3510,"  public GetRegionInfoResponse getRegionInfo(final RpcController controller,"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3511,      final GetRegionInfoRequest request) throws ServiceException {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3512,    try {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3513,      checkOpen();
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2012-11-06,23:22:01,3514,      requestCount.increment();
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3515,      HRegion region = getRegion(request.getRegion());
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3516,      HRegionInfo info = region.getRegionInfo();
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3517,      GetRegionInfoResponse.Builder builder = GetRegionInfoResponse.newBuilder();
373270dd773,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-18,20:20:33,3518,      builder.setRegionInfo(HRegionInfo.convert(info));
c35206b4200,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-24,06:05:50,3519,      if (request.hasCompactionState() && request.getCompactionState()) {
c69c94062a7,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-02-13,15:56:18,3520,        builder.setCompactionState(region.getCompactionState());
c35206b4200,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-24,06:05:50,3521,      }
e80484d7bfc,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-08-10,02:25:50,3522,      builder.setIsRecovering(region.isRecovering());
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3523,      return builder.build();
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3524,    } catch (IOException ie) {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3525,      throw new ServiceException(ie);
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3526,    }
04ac5314bdb,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-18,17:16:15,3527,  }
04ac5314bdb,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-04-18,17:16:15,3528,
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3529,  @Override
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3530,"  public GetStoreFileResponse getStoreFile(final RpcController controller,"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3531,      final GetStoreFileRequest request) throws ServiceException {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3532,    try {
4acb881d78a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-12-20,19:21:53,3533,      checkOpen();
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3534,      HRegion region = getRegion(request.getRegion());
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2012-11-06,23:22:01,3535,      requestCount.increment();
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,3536,      Set<byte[]> columnFamilies;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3537,      if (request.getFamilyCount() == 0) {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3538,        columnFamilies = region.getStores().keySet();
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3539,      } else {
f29ecf904df,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-02-21,19:26:24,3540,        columnFamilies = new TreeSet<byte[]>(Bytes.BYTES_RAWCOMPARATOR);
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3541,        for (ByteString cf: request.getFamilyList()) {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3542,          columnFamilies.add(cf.toByteArray());
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3543,        }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3544,      }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3545,      int nCF = columnFamilies.size();
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3546,      List<String>  fileList = region.getStoreFileList(
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3547,        columnFamilies.toArray(new byte[nCF][]));
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3548,      GetStoreFileResponse.Builder builder = GetStoreFileResponse.newBuilder();
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3549,      builder.addAllStoreFile(fileList);
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3550,      return builder.build();
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3551,    } catch (IOException ie) {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3552,      throw new ServiceException(ie);
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3553,    }
4219e2accb9,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jean-Daniel Cryans,2011-04-27,22:42:58,3554,  }
77dae7ccb78,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-12-08,00:11:26,3555,
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3556,  @Override
4559e53e649,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,larsh,2012-08-31,00:05:36,3557,  @QosPriority(priority=HConstants.HIGH_QOS)
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3558,"  public GetOnlineRegionResponse getOnlineRegion(final RpcController controller,"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3559,      final GetOnlineRegionRequest request) throws ServiceException {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3560,    try {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3561,      checkOpen();
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2012-11-06,23:22:01,3562,      requestCount.increment();
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3563,      List<HRegionInfo> list = new ArrayList<HRegionInfo>(onlineRegions.size());
57afee6a6bb,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2012-07-27,16:34:32,3564,      for (HRegion region: this.onlineRegions.values()) {
57afee6a6bb,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2012-07-27,16:34:32,3565,        list.add(region.getRegionInfo());
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3566,      }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3567,      Collections.sort(list);
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3568,      return ResponseConverter.buildGetOnlineRegionResponse(list);
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3569,    } catch (IOException ie) {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3570,      throw new ServiceException(ie);
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3571,    }
954b292bbfc,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Todd Lipcon,2011-08-30,21:08:04,3572,  }
4219e2accb9,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jean-Daniel Cryans,2011-04-27,22:42:58,3573,
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3574,  // Region open/close direct RPCs
e06e00450ef,core/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-05-07,19:26:45,3575,
2c988abf35a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Gray,2011-09-28,15:56:22,3576,  /**
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,3577,   * Open asynchronously a region or a set of regions on the region server.
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3578,   *
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,3579,"   * The opening is coordinated by ZooKeeper, and this method requires the znode to be created"
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,3580,"   *  before being called. As a consequence, this method should be called only from the master."
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,3581,   * <p>
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,3582,   * Different manages states for the region are:<ul>
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,3583,   *  <li>region not opened: the region opening will start asynchronously.</li>
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,3584,   *  <li>a close is already in progress: this is considered as an error.</li>
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,3585,   *  <li>an open is already in progress: this new open request will be ignored. This is important
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,3586,   *  because the Master can do multiple requests if it crashes.</li>
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,3587,   *  <li>the region is already opened:  this new open request will be ignored./li>
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,3588,   *  </ul>
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,3589,   * </p>
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,3590,   * <p>
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,3591,"   * Bulk assign: If there are more than 1 region to open, it will be considered as a bulk assign."
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,3592,"   * For a single region opening, errors are sent through a ServiceException. For bulk assign,"
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,3593,   * errors are put in the response as FAILED_OPENING.
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,3594,   * </p>
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3595,   * @param controller the RPC controller
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3596,   * @param request the request
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3597,   * @throws ServiceException
2c988abf35a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Gray,2011-09-28,15:56:22,3598,   */
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3599,  @Override
4559e53e649,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,larsh,2012-08-31,00:05:36,3600,  @QosPriority(priority=HConstants.HIGH_QOS)
a5bd102cd8b,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2012-10-20,03:57:49,3601,"  public OpenRegionResponse openRegion(final RpcController controller,"
a5bd102cd8b,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2012-10-20,03:57:49,3602,      final OpenRegionRequest request) throws ServiceException {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3603,    try {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3604,      checkOpen();
b8d39795052,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-06-12,14:47:59,3605,    } catch (IOException ie) {
b8d39795052,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-06-12,14:47:59,3606,      throw new ServiceException(ie);
b8d39795052,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-06-12,14:47:59,3607,    }
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2012-11-06,23:22:01,3608,    requestCount.increment();
7be181e4556,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2014-03-15,23:24:26,3609,    if (request.hasServerStartCode() && this.serverNameFromMasterPOV != null) {
7be181e4556,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2014-03-15,23:24:26,3610,      // check that we are the same server that this RPC is intended for.
7be181e4556,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2014-03-15,23:24:26,3611,      long serverStartCode = request.getServerStartCode();
7be181e4556,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2014-03-15,23:24:26,3612,      if (this.serverNameFromMasterPOV.getStartcode() !=  serverStartCode) {
7be181e4556,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2014-03-15,23:24:26,3613,"        throw new ServiceException(new DoNotRetryIOException(""This RPC was intended for a "" +"
7be181e4556,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2014-03-15,23:24:26,3614,"            ""different server with startCode: "" + serverStartCode + "", this server is: """
7be181e4556,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2014-03-15,23:24:26,3615,            + this.serverNameFromMasterPOV));
7be181e4556,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2014-03-15,23:24:26,3616,      }
7be181e4556,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2014-03-15,23:24:26,3617,    }
b8d39795052,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-06-12,14:47:59,3618,    OpenRegionResponse.Builder builder = OpenRegionResponse.newBuilder();
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,3619,    final int regionCount = request.getOpenInfoCount();
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-08-08,04:19:49,3620,"    final Map<TableName, HTableDescriptor> htds ="
46fb7c409df,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-08-08,04:19:49,3621,"        new HashMap<TableName, HTableDescriptor>(regionCount);"
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,3622,    final boolean isBulkAssign = regionCount > 1;
a5bd102cd8b,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2012-10-20,03:57:49,3623,    for (RegionOpenInfo regionOpenInfo : request.getOpenInfoList()) {
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,3624,      final HRegionInfo region = HRegionInfo.convert(regionOpenInfo.getRegion());
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,3625,
a5bd102cd8b,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2012-10-20,03:57:49,3626,      int versionOfOfflineNode = -1;
a5bd102cd8b,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2012-10-20,03:57:49,3627,      if (regionOpenInfo.hasVersionOfOfflineNode()) {
a5bd102cd8b,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2012-10-20,03:57:49,3628,        versionOfOfflineNode = regionOpenInfo.getVersionOfOfflineNode();
a5bd102cd8b,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2012-10-20,03:57:49,3629,      }
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,3630,      HTableDescriptor htd;
b8d39795052,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-06-12,14:47:59,3631,      try {
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,3632,        final HRegion onlineRegion = getFromOnlineRegions(region.getEncodedName());
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,3633,        if (onlineRegion != null) {
1793a0bbcd5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-12-21,04:29:43,3634,          //Check if the region can actually be opened.
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,3635,          if (onlineRegion.getCoprocessorHost() != null) {
1ef06216950,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2012-12-14,21:12:36,3636,            onlineRegion.getCoprocessorHost().preOpen();
1ef06216950,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2012-12-14,21:12:36,3637,          }
df49eca1eb0,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-09-06,00:29:48,3638,          // See HBASE-5094. Cross check with hbase:meta if still this RS is owning
b8d39795052,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-06-12,14:47:59,3639,          // the region.
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3640,"          Pair<HRegionInfo, ServerName> p = MetaReader.getRegion("
b8d39795052,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-06-12,14:47:59,3641,"              this.catalogTracker, region.getRegionName());"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3642,          if (this.getServerName().equals(p.getSecond())) {
c4b775eb177,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-07-09,19:08:29,3643,            Boolean closing = regionsInTransitionInRS.get(region.getEncodedNameAsBytes());
c4b775eb177,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-07-09,19:08:29,3644,            // Map regionsInTransitionInRSOnly has an entry for a region only if the region
c4b775eb177,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-07-09,19:08:29,3645,"            // is in transition on this RS, so here closing can be null. If not null, it can"
c4b775eb177,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-07-09,19:08:29,3646,            // be true or false. True means the region is opening on this RS; while false
c4b775eb177,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-07-09,19:08:29,3647,            // means the region is closing. Only return ALREADY_OPENED if not closing (i.e.
c4b775eb177,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-07-09,19:08:29,3648,"            // not in transition any more, or still transition to open."
bcce156b8b3,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-07-11,18:18:57,3649,            if (!Boolean.FALSE.equals(closing)
bcce156b8b3,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-07-11,18:18:57,3650,                && getFromOnlineRegions(region.getEncodedName()) != null) {
c4b775eb177,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-07-09,19:08:29,3651,"              LOG.warn(""Attempted open of "" + region.getEncodedName()"
b8d39795052,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-06-12,14:47:59,3652,"                + "" but already online on this server"");"
c4b775eb177,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-07-09,19:08:29,3653,              builder.addOpeningState(RegionOpeningState.ALREADY_OPENED);
c4b775eb177,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-07-09,19:08:29,3654,              continue;
c4b775eb177,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-07-09,19:08:29,3655,            }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3656,          } else {
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,3657,"            LOG.warn(""The region "" + region.getEncodedName() + "" is online on this server"" +"
df49eca1eb0,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-09-06,00:29:48,3658,"                "" but hbase:meta does not have this server - continue opening."");"
f17016bd5b2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-01-21,20:07:25,3659,"            removeFromOnlineRegions(onlineRegion, null);"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3660,          }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3661,        }
a71464bf842,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-06-19,04:48:04,3662,"        LOG.info(""Open "" + region.getRegionNameAsString());"
ed509f750c9,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-09-13,23:15:00,3663,        htd = htds.get(region.getTable());
7693a7c9f27,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-15,21:56:48,3664,        if (htd == null) {
ed509f750c9,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-09-13,23:15:00,3665,          htd = this.tableDescriptors.get(region.getTable());
ed509f750c9,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-09-13,23:15:00,3666,"          htds.put(region.getTable(), htd);"
7693a7c9f27,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-15,21:56:48,3667,        }
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,3668,
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,3669,        final Boolean previous = this.regionsInTransitionInRS.putIfAbsent(
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,3670,"            region.getEncodedNameAsBytes(), Boolean.TRUE);"
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,3671,
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,3672,        if (Boolean.FALSE.equals(previous)) {
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,3673,          // There is a close in progress. We need to mark this open as failed in ZK.
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,3674,          OpenRegionHandler.
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,3675,"              tryTransitionFromOfflineToFailedOpen(this, region, versionOfOfflineNode);"
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,3676,
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,3677,"          throw new RegionAlreadyInTransitionException(""Received OPEN for the region:"" +"
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,3678,"              region.getRegionNameAsString() + "" , which we are already trying to CLOSE "");"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3679,        }
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,3680,
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,3681,        if (Boolean.TRUE.equals(previous)) {
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,3682,"          // An open is in progress. This is supported, but let\'s log this."
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,3683,"          LOG.info(""Receiving OPEN for the region:"" +"
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,3684,"              region.getRegionNameAsString() + "" , which we are already trying to OPEN"" +"
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,3685,"              "" - ignoring this new request for this region."");"
b8d39795052,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-06-12,14:47:59,3686,        }
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,3687,
49cab5a7c20,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-02-21,18:34:32,3688,"        // We are opening this region. If it moves back and forth for whatever reason, we don\'t"
49cab5a7c20,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-02-21,18:34:32,3689,        // want to keep returning the stale moved record while we are opening/if we close again.
49cab5a7c20,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-02-21,18:34:32,3690,        removeFromMovedRegions(region.getEncodedName());
49cab5a7c20,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-02-21,18:34:32,3691,
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,3692,        if (previous == null) {
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,3693,          // check if the region to be opened is marked in recovering state in ZK
b9ad5e84138,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-09-15,06:13:22,3694,          if (this.distributedLogReplay
b9ad5e84138,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-09-15,06:13:22,3695,"              && SplitLogManager.isRegionMarkedRecoveringInZK(this.getZooKeeper(),"
d70d599161d,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-08-04,06:16:31,3696,            region.getEncodedName())) {
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,3697,"            this.recoveringRegions.put(region.getEncodedName(), null);"
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,3698,          }
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,3699,"          // If there is no action in progress, we can submit a specific handler."
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,3700,          // Need to pass the expected version in the constructor.
3a23adf5aba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-03-08,22:37:19,3701,          if (region.isMetaRegion()) {
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,3702,"            this.service.submit(new OpenMetaHandler(this, this, region, htd,"
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,3703,                versionOfOfflineNode));
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,3704,          } else {
7a7ab8b8da7,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-05-12,06:47:39,3705,"            updateRegionFavoredNodesMapping(region.getEncodedName(),"
7a7ab8b8da7,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-05-12,06:47:39,3706,                regionOpenInfo.getFavoredNodesList());
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,3707,"            this.service.submit(new OpenRegionHandler(this, this, region, htd,"
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,3708,                versionOfOfflineNode));
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,3709,          }
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,3710,        }
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,3711,
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,3712,        builder.addOpeningState(RegionOpeningState.OPENED);
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,3713,
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,3714,      } catch (KeeperException zooKeeperEx) {
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,3715,"        LOG.error(""Can\'t retrieve recovering state from zookeeper"", zooKeeperEx);"
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,3716,        throw new ServiceException(zooKeeperEx);
b8d39795052,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-06-12,14:47:59,3717,      } catch (IOException ie) {
b8d39795052,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-06-12,14:47:59,3718,"        LOG.warn(""Failed opening region "" + region.getRegionNameAsString(), ie);"
b8d39795052,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-06-12,14:47:59,3719,        if (isBulkAssign) {
b8d39795052,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-06-12,14:47:59,3720,          builder.addOpeningState(RegionOpeningState.FAILED_OPENING);
b8d39795052,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-06-12,14:47:59,3721,        } else {
b8d39795052,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-06-12,14:47:59,3722,          throw new ServiceException(ie);
b8d39795052,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-06-12,14:47:59,3723,        }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3724,      }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3725,    }
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,3726,
b8d39795052,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-06-12,14:47:59,3727,    return builder.build();
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3728,  }
2c988abf35a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Gray,2011-09-28,15:56:22,3729,
87a052f08df,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-05-23,06:01:27,3730,  @Override
87a052f08df,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-05-23,06:01:27,3731,"  public void updateRegionFavoredNodesMapping(String encodedRegionName,"
7a7ab8b8da7,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-05-12,06:47:39,3732,      List<org.apache.hadoop.hbase.protobuf.generated.HBaseProtos.ServerName> favoredNodes) {
7a7ab8b8da7,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-05-12,06:47:39,3733,    InetSocketAddress[] addr = new InetSocketAddress[favoredNodes.size()];
7a7ab8b8da7,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-05-12,06:47:39,3734,    // Refer to the comment on the declaration of regionFavoredNodesMap on why
7a7ab8b8da7,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-05-12,06:47:39,3735,    // it is a map of region name to InetSocketAddress[]
7a7ab8b8da7,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-05-12,06:47:39,3736,    for (int i = 0; i < favoredNodes.size(); i++) {
7a7ab8b8da7,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-05-12,06:47:39,3737,"      addr[i] = InetSocketAddress.createUnresolved(favoredNodes.get(i).getHostName(),"
7a7ab8b8da7,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-05-12,06:47:39,3738,          favoredNodes.get(i).getPort());
7a7ab8b8da7,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-05-12,06:47:39,3739,    }
7a7ab8b8da7,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-05-12,06:47:39,3740,"    regionFavoredNodesMap.put(encodedRegionName, addr);"
7a7ab8b8da7,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-05-12,06:47:39,3741,  }
7a7ab8b8da7,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-05-12,06:47:39,3742,
7a7ab8b8da7,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-05-12,06:47:39,3743,  /**
7a7ab8b8da7,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-05-12,06:47:39,3744,   * Return the favored nodes for a region given its encoded name. Look at the
7a7ab8b8da7,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-05-12,06:47:39,3745,   * comment around {@link #regionFavoredNodesMap} on why it is InetSocketAddress[]
7a7ab8b8da7,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-05-12,06:47:39,3746,   * @param encodedRegionName
7a7ab8b8da7,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-05-12,06:47:39,3747,   * @return array of favored locations
7a7ab8b8da7,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-05-12,06:47:39,3748,   */
87a052f08df,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-05-23,06:01:27,3749,  @Override
7a7ab8b8da7,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-05-12,06:47:39,3750,  public InetSocketAddress[] getFavoredNodesForRegion(String encodedRegionName) {
7a7ab8b8da7,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-05-12,06:47:39,3751,    return regionFavoredNodesMap.get(encodedRegionName);
7a7ab8b8da7,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-05-12,06:47:39,3752,  }
7a7ab8b8da7,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-05-12,06:47:39,3753,
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3754,  /**
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3755,   * Close a region on the region server.
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3756,   *
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3757,   * @param controller the RPC controller
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3758,   * @param request the request
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3759,   * @throws ServiceException
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3760,   */
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3761,  @Override
4559e53e649,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,larsh,2012-08-31,00:05:36,3762,  @QosPriority(priority=HConstants.HIGH_QOS)
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3763,"  public CloseRegionResponse closeRegion(final RpcController controller,"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3764,      final CloseRegionRequest request) throws ServiceException {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3765,    int versionOfClosingNode = -1;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3766,    if (request.hasVersionOfClosingNode()) {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3767,      versionOfClosingNode = request.getVersionOfClosingNode();
2c988abf35a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Gray,2011-09-28,15:56:22,3768,    }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3769,    boolean zk = request.getTransitionInZK();
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,3770,    final ServerName sn = (request.hasDestinationServer() ?
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,3771,      ProtobufUtil.toServerName(request.getDestinationServer()) : null);
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,3772,
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3773,    try {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3774,      checkOpen();
7be181e4556,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2014-03-15,23:24:26,3775,      if (request.hasServerStartCode() && this.serverNameFromMasterPOV != null) {
7be181e4556,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2014-03-15,23:24:26,3776,        // check that we are the same server that this RPC is intended for.
7be181e4556,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2014-03-15,23:24:26,3777,        long serverStartCode = request.getServerStartCode();
7be181e4556,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2014-03-15,23:24:26,3778,        if (this.serverNameFromMasterPOV.getStartcode() !=  serverStartCode) {
7be181e4556,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2014-03-15,23:24:26,3779,"          throw new ServiceException(new DoNotRetryIOException(""This RPC was intended for a "" +"
7be181e4556,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2014-03-15,23:24:26,3780,"              ""different server with startCode: "" + serverStartCode + "", this server is: """
7be181e4556,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2014-03-15,23:24:26,3781,              + this.serverNameFromMasterPOV));
7be181e4556,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2014-03-15,23:24:26,3782,        }
7be181e4556,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2014-03-15,23:24:26,3783,      }
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,3784,      final String encodedRegionName = ProtobufUtil.getRegionEncodedName(request.getRegion());
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,3785,
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,3786,      // Can be null if we\'re calling close on a region that\'s not online
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,3787,      final HRegion region = this.getFromOnlineRegions(encodedRegionName);
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,3788,      if ((region  != null) && (region .getCoprocessorHost() != null)) {
1ef06216950,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2012-12-14,21:12:36,3789,        region.getCoprocessorHost().preClose(false);
1ef06216950,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2012-12-14,21:12:36,3790,      }
1793a0bbcd5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-12-21,04:29:43,3791,
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2012-11-06,23:22:01,3792,      requestCount.increment();
41db4e539f3,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-08-21,19:25:21,3793,"      LOG.info(""Close "" + encodedRegionName + "", via zk="" + (zk ? ""yes"" : ""no"") +"
41db4e539f3,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-08-21,19:25:21,3794,"        "", znode version="" + versionOfClosingNode + "", on "" + sn);"
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,3795,
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,3796,"      boolean closed = closeRegion(encodedRegionName, false, zk, versionOfClosingNode, sn);"
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,3797,      CloseRegionResponse.Builder builder = CloseRegionResponse.newBuilder().setClosed(closed);
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3798,      return builder.build();
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3799,    } catch (IOException ie) {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3800,      throw new ServiceException(ie);
2c988abf35a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Gray,2011-09-28,15:56:22,3801,    }
2c988abf35a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Gray,2011-09-28,15:56:22,3802,  }
2c988abf35a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Gray,2011-09-28,15:56:22,3803,
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3804,  /**
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3805,   * Flush a region on the region server.
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3806,   *
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3807,   * @param controller the RPC controller
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3808,   * @param request the request
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3809,   * @throws ServiceException
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3810,   */
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3811,  @Override
4559e53e649,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,larsh,2012-08-31,00:05:36,3812,  @QosPriority(priority=HConstants.HIGH_QOS)
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3813,"  public FlushRegionResponse flushRegion(final RpcController controller,"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3814,      final FlushRegionRequest request) throws ServiceException {
2c988abf35a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Gray,2011-09-28,15:56:22,3815,    try {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3816,      checkOpen();
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2012-11-06,23:22:01,3817,      requestCount.increment();
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3818,      HRegion region = getRegion(request.getRegion());
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3819,"      LOG.info(""Flushing "" + region.getRegionNameAsString());"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3820,      boolean shouldFlush = true;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3821,      if (request.hasIfOlderThanTs()) {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3822,        shouldFlush = region.getLastFlushTime() < request.getIfOlderThanTs();
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3823,      }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3824,      FlushRegionResponse.Builder builder = FlushRegionResponse.newBuilder();
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3825,      if (shouldFlush) {
190aac3613f,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,ramkrishna,2013-05-20,16:35:55,3826,        boolean result = region.flushcache();
190aac3613f,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,ramkrishna,2013-05-20,16:35:55,3827,        if (result) {
03dc97a1f41,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-06-11,00:24:21,3828,"          this.compactSplitThread.requestSystemCompaction(region,"
190aac3613f,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,ramkrishna,2013-05-20,16:35:55,3829,"              ""Compaction through user triggered flush"");"
190aac3613f,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,ramkrishna,2013-05-20,16:35:55,3830,        }
190aac3613f,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,ramkrishna,2013-05-20,16:35:55,3831,        builder.setFlushed(result);
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3832,      }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3833,      builder.setLastFlushTime(region.getLastFlushTime());
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3834,      return builder.build();
64740a5c076,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2014-02-25,00:58:56,3835,    } catch (DroppedSnapshotException ex) {
64740a5c076,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2014-02-25,00:58:56,3836,      // Cache flush can fail in a few places. If it fails in a critical
64740a5c076,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2014-02-25,00:58:56,3837,"      // section, we get a DroppedSnapshotException and a replay of hlog"
64740a5c076,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2014-02-25,00:58:56,3838,      // is required. Currently the only way to do this is a restart of
64740a5c076,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2014-02-25,00:58:56,3839,      // the server.
64740a5c076,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2014-02-25,00:58:56,3840,"      abort(""Replay of HLog required. Forcing server shutdown"", ex);"
64740a5c076,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2014-02-25,00:58:56,3841,      throw new ServiceException(ex);
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3842,    } catch (IOException ie) {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3843,      throw new ServiceException(ie);
2c988abf35a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Gray,2011-09-28,15:56:22,3844,    }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3845,  }
2c988abf35a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Gray,2011-09-28,15:56:22,3846,
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3847,  /**
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3848,   * Split a region on the region server.
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3849,   *
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3850,   * @param controller the RPC controller
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3851,   * @param request the request
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3852,   * @throws ServiceException
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3853,   */
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3854,  @Override
4559e53e649,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,larsh,2012-08-31,00:05:36,3855,  @QosPriority(priority=HConstants.HIGH_QOS)
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3856,"  public SplitRegionResponse splitRegion(final RpcController controller,"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3857,      final SplitRegionRequest request) throws ServiceException {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3858,    try {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3859,      checkOpen();
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2012-11-06,23:22:01,3860,      requestCount.increment();
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3861,      HRegion region = getRegion(request.getRegion());
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,3862,      region.startRegionOperation(Operation.SPLIT_REGION);
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3863,"      LOG.info(""Splitting "" + region.getRegionNameAsString());"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3864,      region.flushcache();
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3865,      byte[] splitPoint = null;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3866,      if (request.hasSplitPoint()) {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3867,        splitPoint = request.getSplitPoint().toByteArray();
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3868,      }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3869,      region.forceSplit(splitPoint);
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3870,"      compactSplitThread.requestSplit(region, region.checkSplit());"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3871,      return SplitRegionResponse.newBuilder().build();
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3872,    } catch (IOException ie) {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3873,      throw new ServiceException(ie);
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3874,    }
2c988abf35a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Gray,2011-09-28,15:56:22,3875,  }
2c988abf35a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Gray,2011-09-28,15:56:22,3876,
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,zjushch,2013-03-24,10:26:21,3877,  /**
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,zjushch,2013-03-24,10:26:21,3878,   * Merge regions on the region server.
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,zjushch,2013-03-24,10:26:21,3879,   *
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,zjushch,2013-03-24,10:26:21,3880,   * @param controller the RPC controller
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,zjushch,2013-03-24,10:26:21,3881,   * @param request the request
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,zjushch,2013-03-24,10:26:21,3882,   * @return merge regions response
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,zjushch,2013-03-24,10:26:21,3883,   * @throws ServiceException
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,zjushch,2013-03-24,10:26:21,3884,   */
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,zjushch,2013-03-24,10:26:21,3885,  @Override
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,zjushch,2013-03-24,10:26:21,3886,  @QosPriority(priority = HConstants.HIGH_QOS)
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,zjushch,2013-03-24,10:26:21,3887,"  public MergeRegionsResponse mergeRegions(final RpcController controller,"
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,zjushch,2013-03-24,10:26:21,3888,      final MergeRegionsRequest request) throws ServiceException {
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,zjushch,2013-03-24,10:26:21,3889,    try {
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,zjushch,2013-03-24,10:26:21,3890,      checkOpen();
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,zjushch,2013-03-24,10:26:21,3891,      requestCount.increment();
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,zjushch,2013-03-24,10:26:21,3892,      HRegion regionA = getRegion(request.getRegionA());
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,zjushch,2013-03-24,10:26:21,3893,      HRegion regionB = getRegion(request.getRegionB());
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,zjushch,2013-03-24,10:26:21,3894,      boolean forcible = request.getForcible();
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,3895,      regionA.startRegionOperation(Operation.MERGE_REGION);
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,3896,      regionB.startRegionOperation(Operation.MERGE_REGION);
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,zjushch,2013-03-24,10:26:21,3897,"      LOG.info(""Receiving merging request for  "" + regionA + "", "" + regionB"
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,zjushch,2013-03-24,10:26:21,3898,"          + "",forcible="" + forcible);"
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,zjushch,2013-03-24,10:26:21,3899,      regionA.flushcache();
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,zjushch,2013-03-24,10:26:21,3900,      regionB.flushcache();
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,zjushch,2013-03-24,10:26:21,3901,"      compactSplitThread.requestRegionsMerge(regionA, regionB, forcible);"
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,zjushch,2013-03-24,10:26:21,3902,      return MergeRegionsResponse.newBuilder().build();
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,zjushch,2013-03-24,10:26:21,3903,    } catch (IOException ie) {
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,zjushch,2013-03-24,10:26:21,3904,      throw new ServiceException(ie);
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,zjushch,2013-03-24,10:26:21,3905,    }
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,zjushch,2013-03-24,10:26:21,3906,  }
c7309e82efb,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,zjushch,2013-03-24,10:26:21,3907,
19b01d968d3,core/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-04-30,06:52:27,3908,  /**
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3909,   * Compact a region on the region server.
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3910,   *
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3911,   * @param controller the RPC controller
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3912,   * @param request the request
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3913,   * @throws ServiceException
19b01d968d3,core/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-04-30,06:52:27,3914,   */
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3915,  @Override
4559e53e649,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,larsh,2012-08-31,00:05:36,3916,  @QosPriority(priority=HConstants.HIGH_QOS)
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3917,"  public CompactRegionResponse compactRegion(final RpcController controller,"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3918,      final CompactRegionRequest request) throws ServiceException {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3919,    try {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3920,      checkOpen();
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2012-11-06,23:22:01,3921,      requestCount.increment();
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3922,      HRegion region = getRegion(request.getRegion());
e80484d7bfc,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-08-10,02:25:50,3923,      region.startRegionOperation(Operation.COMPACT_REGION);
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3924,"      LOG.info(""Compacting "" + region.getRegionNameAsString());"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3925,      boolean major = false;
82ebcfd4584,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,gchanan,2012-11-08,19:22:58,3926,      byte [] family = null;
82ebcfd4584,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,gchanan,2012-11-08,19:22:58,3927,      Store store = null;
82ebcfd4584,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,gchanan,2012-11-08,19:22:58,3928,      if (request.hasFamily()) {
82ebcfd4584,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,gchanan,2012-11-08,19:22:58,3929,        family = request.getFamily().toByteArray();
82ebcfd4584,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,gchanan,2012-11-08,19:22:58,3930,        store = region.getStore(family);
82ebcfd4584,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,gchanan,2012-11-08,19:22:58,3931,        if (store == null) {
82ebcfd4584,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,gchanan,2012-11-08,19:22:58,3932,"          throw new ServiceException(new IOException(""column family "" + Bytes.toString(family) +"
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,3933,"            "" does not exist in region "" + region.getRegionNameAsString()));"
82ebcfd4584,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,gchanan,2012-11-08,19:22:58,3934,        }
82ebcfd4584,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,gchanan,2012-11-08,19:22:58,3935,      }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3936,      if (request.hasMajor()) {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3937,        major = request.getMajor();
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3938,      }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3939,      if (major) {
82ebcfd4584,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,gchanan,2012-11-08,19:22:58,3940,        if (family != null) {
82ebcfd4584,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,gchanan,2012-11-08,19:22:58,3941,          store.triggerMajorCompaction();
82ebcfd4584,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,gchanan,2012-11-08,19:22:58,3942,        } else {
82ebcfd4584,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,gchanan,2012-11-08,19:22:58,3943,          region.triggerMajorCompaction();
82ebcfd4584,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,gchanan,2012-11-08,19:22:58,3944,        }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3945,      }
82ebcfd4584,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,gchanan,2012-11-08,19:22:58,3946,
6f09882c7f6,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,gchanan,2012-11-12,23:19:53,3947,"      String familyLogMsg = (family != null)?"" for column family: "" + Bytes.toString(family):"""";"
6f09882c7f6,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,gchanan,2012-11-12,23:19:53,3948,"      LOG.trace(""User-triggered compaction requested for region "" +"
6f09882c7f6,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,gchanan,2012-11-12,23:19:53,3949,        region.getRegionNameAsString() + familyLogMsg);
6f09882c7f6,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,gchanan,2012-11-12,23:19:53,3950,"      String log = ""User-triggered "" + (major ? ""major "" : """") + ""compaction"" + familyLogMsg;"
82ebcfd4584,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,gchanan,2012-11-08,19:22:58,3951,      if(family != null) {
82ebcfd4584,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,gchanan,2012-11-08,19:22:58,3952,"        compactSplitThread.requestCompaction(region, store, log,"
1a766c42a18,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jyates,2013-02-20,22:40:55,3953,"          Store.PRIORITY_USER, null);"
82ebcfd4584,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,gchanan,2012-11-08,19:22:58,3954,      } else {
82ebcfd4584,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,gchanan,2012-11-08,19:22:58,3955,"        compactSplitThread.requestCompaction(region, log,"
1a766c42a18,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jyates,2013-02-20,22:40:55,3956,"          Store.PRIORITY_USER, null);"
82ebcfd4584,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,gchanan,2012-11-08,19:22:58,3957,      }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3958,      return CompactRegionResponse.newBuilder().build();
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3959,    } catch (IOException ie) {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3960,      throw new ServiceException(ie);
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3961,    }
19b01d968d3,core/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-04-30,06:52:27,3962,  }
19b01d968d3,core/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-04-30,06:52:27,3963,
19b01d968d3,core/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-04-30,06:52:27,3964,  /**
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3965,   * Replicate WAL entries on the region server.
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3966,   *
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3967,   * @param controller the RPC controller
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3968,   * @param request the request
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3969,   * @throws ServiceException
19b01d968d3,core/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-04-30,06:52:27,3970,   */
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3971,  @Override
4559e53e649,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,larsh,2012-08-31,00:05:36,3972,  @QosPriority(priority=HConstants.REPLICATION_QOS)
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3973,"  public ReplicateWALEntryResponse replicateWALEntry(final RpcController controller,"
f400db0d9b2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-07-02,21:35:30,3974,      final ReplicateWALEntryRequest request)
f400db0d9b2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-07-02,21:35:30,3975,  throws ServiceException {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3976,    try {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3977,      if (replicationSinkHandler != null) {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3978,        checkOpen();
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2012-11-06,23:22:01,3979,        requestCount.increment();
f400db0d9b2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-07-02,21:35:30,3980,"        this.replicationSinkHandler.replicateLogEntries(request.getEntryList(),"
f400db0d9b2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-07-02,21:35:30,3981,          ((PayloadCarryingRpcController)controller).cellScanner());
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3982,      }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3983,      return ReplicateWALEntryResponse.newBuilder().build();
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3984,    } catch (IOException ie) {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3985,      throw new ServiceException(ie);
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,3986,    }
19b01d968d3,core/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-04-30,06:52:27,3987,  }
8763e9e92c4,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jim Kellerman,2008-08-11,17:57:53,3988,
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,3989,  /**
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,3990,   * Replay the given changes when distributedLogReplay WAL edits from a failed RS. The guarantee is
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,3991,   * that the given mutations will be durable on the receiving RS if this method returns without any
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,3992,   * exception.
f67903e4d6a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-09-26,21:16:33,3993,   * @param controller the RPC controller
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,3994,   * @param request the request
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,3995,   * @throws ServiceException
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,3996,   */
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,3997,  @Override
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,3998,  @QosPriority(priority = HConstants.REPLAY_QOS)
f67903e4d6a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-09-26,21:16:33,3999,"  public ReplicateWALEntryResponse replay(final RpcController controller,"
f67903e4d6a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-09-26,21:16:33,4000,      final ReplicateWALEntryRequest request) throws ServiceException {
93b92713e03,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-23,22:02:38,4001,    long before = EnvironmentEdgeManager.currentTimeMillis();
f67903e4d6a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-09-26,21:16:33,4002,    CellScanner cells = ((PayloadCarryingRpcController) controller).cellScanner();
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,4003,    try {
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,4004,      checkOpen();
f67903e4d6a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-09-26,21:16:33,4005,      List<WALEntry> entries = request.getEntryList();
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,4006,      if (entries == null || entries.isEmpty()) {
f67903e4d6a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-09-26,21:16:33,4007,        // empty input
f67903e4d6a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-09-26,21:16:33,4008,        return ReplicateWALEntryResponse.newBuilder().build();
f67903e4d6a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-09-26,21:16:33,4009,      }
f67903e4d6a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-09-26,21:16:33,4010,      HRegion region = this.getRegionByEncodedName(
f67903e4d6a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-09-26,21:16:33,4011,        entries.get(0).getKey().getEncodedRegionName().toStringUtf8());
266e1791d13,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-09-30,05:13:03,4012,      RegionCoprocessorHost coprocessorHost = region.getCoprocessorHost();
f67903e4d6a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-09-26,21:16:33,4013,"      List<Pair<HLogKey, WALEdit>> walEntries = new ArrayList<Pair<HLogKey, WALEdit>>();"
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,4014,      List<HLogSplitter.MutationReplay> mutations = new ArrayList<HLogSplitter.MutationReplay>();
7d411abdfb9,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-12-20,22:21:01,4015,"      // when tag is enabled, we need tag replay edits with log sequence number"
7d411abdfb9,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-12-20,22:21:01,4016,      boolean needAddReplayTag = (HFile.getFormatVersion(this.conf) >= 3);
266e1791d13,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-09-30,05:13:03,4017,      for (WALEntry entry : entries) {
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,4018,        if (nonceManager != null) {
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,4019,          long nonceGroup = entry.getKey().hasNonceGroup()
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,4020,              ? entry.getKey().getNonceGroup() : HConstants.NO_NONCE;
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,4021,          long nonce = entry.getKey().hasNonce() ? entry.getKey().getNonce() : HConstants.NO_NONCE;
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,4022,"          nonceManager.reportOperationFromWal(nonceGroup, nonce, entry.getKey().getWriteTime());"
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,4023,        }
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,4024,"        Pair<HLogKey, WALEdit> walEntry = (coprocessorHost == null) ? null :"
266e1791d13,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-09-30,05:13:03,4025,"          new Pair<HLogKey, WALEdit>();"
7d411abdfb9,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-12-20,22:21:01,4026,"        List<HLogSplitter.MutationReplay> edits = HLogSplitter.getMutationsFromWALEntry(entry,"
7d411abdfb9,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-12-20,22:21:01,4027,"          cells, walEntry, needAddReplayTag);"
266e1791d13,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-09-30,05:13:03,4028,        if (coprocessorHost != null) {
266e1791d13,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-09-30,05:13:03,4029,          // Start coprocessor replay here. The coprocessor is for each WALEdit instead of a
266e1791d13,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-09-30,05:13:03,4030,          // KeyValue.
266e1791d13,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-09-30,05:13:03,4031,"          if (coprocessorHost.preWALRestore(region.getRegionInfo(), walEntry.getFirst(),"
266e1791d13,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-09-30,05:13:03,4032,            walEntry.getSecond())) {
266e1791d13,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-09-30,05:13:03,4033,"            // if bypass this log entry, ignore it ..."
266e1791d13,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-09-30,05:13:03,4034,            continue;
266e1791d13,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-09-30,05:13:03,4035,          }
266e1791d13,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-09-30,05:13:03,4036,          walEntries.add(walEntry);
266e1791d13,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-09-30,05:13:03,4037,        }
266e1791d13,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-09-30,05:13:03,4038,        mutations.addAll(edits);
266e1791d13,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-09-30,05:13:03,4039,      }
266e1791d13,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-09-30,05:13:03,4040,
f67903e4d6a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-09-26,21:16:33,4041,      if (!mutations.isEmpty()) {
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,4042,"        OperationStatus[] result = doReplayBatchOp(region, mutations);"
f67903e4d6a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-09-26,21:16:33,4043,        // check if it\'s a partial success
f67903e4d6a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-09-26,21:16:33,4044,        for (int i = 0; result != null && i < result.length; i++) {
f67903e4d6a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-09-26,21:16:33,4045,          if (result[i] != OperationStatus.SUCCESS) {
f67903e4d6a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-09-26,21:16:33,4046,            throw new IOException(result[i].getExceptionMsg());
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,4047,          }
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,4048,        }
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,4049,      }
266e1791d13,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-09-30,05:13:03,4050,      if (coprocessorHost != null) {
f67903e4d6a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-09-26,21:16:33,4051,"        for (Pair<HLogKey, WALEdit> wal : walEntries) {"
266e1791d13,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-09-30,05:13:03,4052,"          coprocessorHost.postWALRestore(region.getRegionInfo(), wal.getFirst(),"
f67903e4d6a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-09-26,21:16:33,4053,            wal.getSecond());
f67903e4d6a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-09-26,21:16:33,4054,        }
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,4055,      }
f67903e4d6a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-09-26,21:16:33,4056,      return ReplicateWALEntryResponse.newBuilder().build();
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,4057,    } catch (IOException ie) {
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,4058,      throw new ServiceException(ie);
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,4059,    } finally {
93b92713e03,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-23,22:02:38,4060,      metricsRegionServer.updateReplay(EnvironmentEdgeManager.currentTimeMillis() - before);
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,4061,    }
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,4062,  }
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,4063,
196882e2cd6,core/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-05-03,19:53:39,4064,  /**
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4065,   * Roll the WAL writer of the region server.
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4066,   * @param controller the RPC controller
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4067,   * @param request the request
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4068,   * @throws ServiceException
196882e2cd6,core/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-05-03,19:53:39,4069,   */
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4070,  @Override
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4071,"  public RollWALWriterResponse rollWALWriter(final RpcController controller,"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4072,      final RollWALWriterRequest request) throws ServiceException {
196882e2cd6,core/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-05-03,19:53:39,4073,    try {
4acb881d78a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-12-20,19:21:53,4074,      checkOpen();
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2012-11-06,23:22:01,4075,      requestCount.increment();
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4076,      HLog wal = this.getWAL();
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4077,      byte[][] regionsToFlush = wal.rollWriter(true);
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4078,      RollWALWriterResponse.Builder builder = RollWALWriterResponse.newBuilder();
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4079,      if (regionsToFlush != null) {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4080,        for (byte[] region: regionsToFlush) {
e0c10338912,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-01-29,20:31:31,4081,          builder.addRegionToFlush(HBaseZeroCopyByteString.wrap(region));
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4082,        }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4083,      }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4084,      return builder.build();
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4085,    } catch (IOException ie) {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4086,      throw new ServiceException(ie);
196882e2cd6,core/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-05-03,19:53:39,4087,    }
196882e2cd6,core/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-05-03,19:53:39,4088,  }
196882e2cd6,core/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-05-03,19:53:39,4089,
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4090,  /**
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4091,   * Stop the region server.
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4092,   *
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4093,   * @param controller the RPC controller
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4094,   * @param request the request
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4095,   * @throws ServiceException
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4096,   */
03933720fa4,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jean-Daniel Cryans,2010-07-01,00:25:50,4097,  @Override
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4098,"  public StopServerResponse stopServer(final RpcController controller,"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4099,      final StopServerRequest request) throws ServiceException {
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2012-11-06,23:22:01,4100,    requestCount.increment();
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4101,    String reason = request.getReason();
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4102,    stop(reason);
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4103,    return StopServerResponse.newBuilder().build();
03933720fa4,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jean-Daniel Cryans,2010-07-01,00:25:50,4104,  }
03933720fa4,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jean-Daniel Cryans,2010-07-01,00:25:50,4105,
6af4292630d,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Ryan Rawson,2009-06-06,01:26:21,4106,  /**
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4107,   * Get some information of the region server.
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4108,   *
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4109,   * @param controller the RPC controller
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4110,   * @param request the request
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4111,   * @throws ServiceException
6af4292630d,src/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Ryan Rawson,2009-06-06,01:26:21,4112,   */
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4113,  @Override
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4114,"  public GetServerInfoResponse getServerInfo(final RpcController controller,"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4115,      final GetServerInfoRequest request) throws ServiceException {
4acb881d78a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-12-20,19:21:53,4116,    try {
4acb881d78a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-12-20,19:21:53,4117,      checkOpen();
4acb881d78a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-12-20,19:21:53,4118,    } catch (IOException ie) {
4acb881d78a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-12-20,19:21:53,4119,      throw new ServiceException(ie);
4acb881d78a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-12-20,19:21:53,4120,    }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4121,    ServerName serverName = getServerName();
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2012-11-06,23:22:01,4122,    requestCount.increment();
7ea071db1ff,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-12-17,04:35:59,4123,"    return ResponseConverter.buildGetServerInfoResponse(serverName, rsInfo.getInfoPort());"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4124,  }
f4ed3cd699a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-08,15:59:46,4125,
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4126,// End Admin methods
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4127,
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4128,  /**
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4129,   * Find the HRegion based on a region specifier
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4130,   *
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4131,   * @param regionSpecifier the region specifier
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4132,   * @return the corresponding region
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4133,"   * @throws IOException if the specifier is not null,"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4134,   *    but failed to find the region
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4135,   */
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4136,  protected HRegion getRegion(
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4137,      final RegionSpecifier regionSpecifier) throws IOException {
e15f36cdde3,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-11-14,05:01:29,4138,"    return getRegionByEncodedName(regionSpecifier.getValue().toByteArray(),"
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,4139,        ProtobufUtil.getRegionEncodedName(regionSpecifier));
f4ed3cd699a,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2010-08-08,15:59:46,4140,  }
0e152ad9e23,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2011-08-22,22:58:39,4141,
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4142,  /**
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4143,   * Execute an append mutation.
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4144,   *
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4145,   * @param region
5fde90f68f2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-03-20,19:36:46,4146,   * @param m
5fde90f68f2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-03-20,19:36:46,4147,   * @param cellScanner
0edd9e13d9a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Hsieh,2013-02-13,18:56:44,4148,   * @return result to return to client if default operation should be
0edd9e13d9a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Jonathan Hsieh,2013-02-13,18:56:44,4149,"   * bypassed as indicated by RegionObserver, null otherwise"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4150,   * @throws IOException
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4151,   */
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4152,"  protected Result append(final HRegion region,"
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,4153,"      final MutationProto m, final CellScanner cellScanner, long nonceGroup) throws IOException {"
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2012-11-06,23:22:01,4154,    long before = EnvironmentEdgeManager.currentTimeMillis();
5fde90f68f2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-03-20,19:36:46,4155,"    Append append = ProtobufUtil.toAppend(m, cellScanner);"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4156,    Result r = null;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4157,    if (region.getCoprocessorHost() != null) {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4158,      r = region.getCoprocessorHost().preAppend(append);
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4159,    }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4160,    if (r == null) {
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,4161,"      long nonce = startNonceOperation(m, nonceGroup);"
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,4162,      boolean success = false;
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,4163,      try {
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,4164,"        r = region.append(append, nonceGroup, nonce);"
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,4165,        success = true;
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,4166,      } finally {
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,4167,"        endNonceOperation(m, nonceGroup, success);"
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,4168,      }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4169,      if (region.getCoprocessorHost() != null) {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4170,"        region.getCoprocessorHost().postAppend(append, r);"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4171,      }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4172,    }
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2012-11-06,23:22:01,4173,    metricsRegionServer.updateAppend(EnvironmentEdgeManager.currentTimeMillis() - before);
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4174,    return r;
0e152ad9e23,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2011-08-22,22:58:39,4175,  }
0e152ad9e23,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2011-08-22,22:58:39,4176,
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4177,  /**
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4178,   * Execute an increment mutation.
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4179,   *
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4180,   * @param region
5fde90f68f2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-03-20,19:36:46,4181,   * @param mutation
e21c9fde832,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-12-18,19:07:34,4182,   * @return the Result
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4183,   * @throws IOException
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4184,   */
5fde90f68f2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-03-20,19:36:46,4185,"  protected Result increment(final HRegion region, final MutationProto mutation,"
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,4186,"      final CellScanner cells, long nonceGroup) throws IOException {"
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2012-11-06,23:22:01,4187,    long before = EnvironmentEdgeManager.currentTimeMillis();
5fde90f68f2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-03-20,19:36:46,4188,"    Increment increment = ProtobufUtil.toIncrement(mutation, cells);"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4189,    Result r = null;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4190,    if (region.getCoprocessorHost() != null) {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4191,      r = region.getCoprocessorHost().preIncrement(increment);
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4192,    }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4193,    if (r == null) {
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,4194,"      long nonce = startNonceOperation(mutation, nonceGroup);"
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,4195,      boolean success = false;
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,4196,      try {
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,4197,"        r = region.increment(increment, nonceGroup, nonce);"
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,4198,        success = true;
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,4199,      } finally {
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,4200,"        endNonceOperation(mutation, nonceGroup, success);"
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,4201,      }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4202,      if (region.getCoprocessorHost() != null) {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4203,"        r = region.getCoprocessorHost().postIncrement(increment, r);"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4204,      }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4205,    }
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2012-11-06,23:22:01,4206,    metricsRegionServer.updateIncrement(EnvironmentEdgeManager.currentTimeMillis() - before);
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4207,    return r;
76de714e2be,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2011-09-08,04:22:42,4208,  }
ed76ba8de34,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2011-10-24,23:18:04,4209,
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,4210,  /**
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,4211,"   * Starts the nonce operation for a mutation, if needed."
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,4212,   * @param mutation Mutation.
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,4213,   * @param nonceGroup Nonce group from the request.
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,4214,   * @returns Nonce used (can be NO_NONCE).
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,4215,   */
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,4216,"  private long startNonceOperation(final MutationProto mutation, long nonceGroup)"
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,4217,"      throws IOException, OperationConflictException {"
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,4218,    if (nonceManager == null || !mutation.hasNonce()) return HConstants.NO_NONCE;
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,4219,    boolean canProceed = false;
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,4220,    try {
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,4221,"      canProceed = nonceManager.startOperation(nonceGroup, mutation.getNonce(), this);"
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,4222,    } catch (InterruptedException ex) {
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,4223,"      throw new InterruptedIOException(""Nonce start operation interrupted"");"
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,4224,    }
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,4225,    if (!canProceed) {
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,4226,"      // TODO: instead, we could convert append/increment to get w/mvcc"
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,4227,"      String message = ""The operation with nonce {"" + nonceGroup + "", "" + mutation.getNonce()"
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,4228,"          + ""} on row ["" + Bytes.toString(mutation.getRow().toByteArray())"
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,4229,"          + ""] may have already completed"";"
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,4230,      throw new OperationConflictException(message);
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,4231,    }
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,4232,    return mutation.getNonce();
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,4233,  }
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,4234,
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,4235,  /**
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,4236,"   * Ends nonce operation for a mutation, if needed."
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,4237,   * @param mutation Mutation.
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,4238,   * @param nonceGroup Nonce group from the request. Always 0 in initial implementation.
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,4239,   * @param success Whether the operation for this nonce has succeeded.
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,4240,   */
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,4241,"  private void endNonceOperation(final MutationProto mutation, long nonceGroup,"
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,4242,      boolean success) {
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,4243,    if (nonceManager == null || !mutation.hasNonce()) return;
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,4244,"    nonceManager.endOperation(nonceGroup, mutation.getNonce(), success);"
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,4245,  }
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,4246,
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,4247,  @Override
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,4248,  public ServerNonceManager getNonceManager() {
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,4249,    return this.nonceManager;
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,4250,  }
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,4251,
7a8c36be23e,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2011-11-21,17:29:32,4252,  /**
65059399704,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-07-03,03:53:11,4253,   * Execute a list of Put/Delete mutations.
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4254,   *
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4255,   * @param builder
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4256,   * @param region
5fde90f68f2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-03-20,19:36:46,4257,   * @param mutations
de4f4aa9e4b,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-04-05,18:57:09,4258,   */
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,4259,"  protected void doBatchOp(final RegionActionResult.Builder builder, final HRegion region,"
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,4260,"      final List<ClientProtos.Action> mutations, final CellScanner cells) {"
00175ae8340,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,larsh,2013-07-17,05:34:00,4261,    Mutation[] mArray = new Mutation[mutations.size()];
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2012-11-06,23:22:01,4262,    long before = EnvironmentEdgeManager.currentTimeMillis();
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2012-11-06,23:22:01,4263,"    boolean batchContainsPuts = false, batchContainsDelete = false;"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4264,    try {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4265,      int i = 0;
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,4266,      for (ClientProtos.Action action: mutations) {
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,4267,        MutationProto m = action.getMutation();
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,4268,        Mutation mutation;
5fde90f68f2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-03-20,19:36:46,4269,        if (m.getMutateType() == MutationType.PUT) {
5fde90f68f2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-03-20,19:36:46,4270,"          mutation = ProtobufUtil.toPut(m, cells);"
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2012-11-06,23:22:01,4271,          batchContainsPuts = true;
65059399704,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-07-03,03:53:11,4272,        } else {
5fde90f68f2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-03-20,19:36:46,4273,"          mutation = ProtobufUtil.toDelete(m, cells);"
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2012-11-06,23:22:01,4274,          batchContainsDelete = true;
65059399704,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-07-03,03:53:11,4275,        }
00175ae8340,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,larsh,2013-07-17,05:34:00,4276,        mArray[i++] = mutation;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4277,      }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4278,
5fde90f68f2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-03-20,19:36:46,4279,      requestCount.add(mutations.size());
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4280,      if (!region.getRegionInfo().isMetaTable()) {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4281,        cacheFlusher.reclaimMemStoreMemory();
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4282,      }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4283,
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,4284,      OperationStatus codes[] = region.batchMutate(mArray);
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4285,      for (i = 0; i < codes.length; i++) {
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,4286,        int index = mutations.get(i).getIndex();
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,4287,        Exception e = null;
786a5213c98,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,larsh,2012-09-13,15:44:21,4288,        switch (codes[i].getOperationStatusCode()) {
786a5213c98,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,larsh,2012-09-13,15:44:21,4289,          case BAD_FAMILY:
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,4290,            e = new NoSuchColumnFamilyException(codes[i].getExceptionMsg());
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,4291,"            builder.addResultOrException(getResultOrException(e, index));"
786a5213c98,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,larsh,2012-09-13,15:44:21,4292,            break;
786a5213c98,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,larsh,2012-09-13,15:44:21,4293,
786a5213c98,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,larsh,2012-09-13,15:44:21,4294,          case SANITY_CHECK_FAILURE:
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,4295,            e = new FailedSanityCheckException(codes[i].getExceptionMsg());
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,4296,"            builder.addResultOrException(getResultOrException(e, index));"
786a5213c98,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,larsh,2012-09-13,15:44:21,4297,            break;
786a5213c98,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,larsh,2012-09-13,15:44:21,4298,
786a5213c98,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,larsh,2012-09-13,15:44:21,4299,          default:
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,4300,            e = new DoNotRetryIOException(codes[i].getExceptionMsg());
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,4301,"            builder.addResultOrException(getResultOrException(e, index));"
786a5213c98,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,larsh,2012-09-13,15:44:21,4302,            break;
786a5213c98,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,larsh,2012-09-13,15:44:21,4303,
786a5213c98,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,larsh,2012-09-13,15:44:21,4304,          case SUCCESS:
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,4305,"            builder.addResultOrException(getResultOrException(ClientProtos.Result.getDefaultInstance(), index));"
786a5213c98,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,larsh,2012-09-13,15:44:21,4306,            break;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4307,        }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4308,      }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4309,    } catch (IOException ie) {
5fde90f68f2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-03-20,19:36:46,4310,      for (int i = 0; i < mutations.size(); i++) {
7709eb393a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-10-09,17:41:54,4311,"        builder.addResultOrException(getResultOrException(ie, mutations.get(i).getIndex()));"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4312,      }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4313,    }
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2012-11-06,23:22:01,4314,    long after = EnvironmentEdgeManager.currentTimeMillis();
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2012-11-06,23:22:01,4315,    if (batchContainsPuts) {
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2012-11-06,23:22:01,4316,      metricsRegionServer.updatePut(after - before);
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2012-11-06,23:22:01,4317,    }
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2012-11-06,23:22:01,4318,    if (batchContainsDelete) {
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2012-11-06,23:22:01,4319,      metricsRegionServer.updateDelete(after - before);
3900978ffea,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2012-11-06,23:22:01,4320,    }
ed76ba8de34,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2011-10-24,23:18:04,4321,  }
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,4322,"  private static ResultOrException getResultOrException(final ClientProtos.Result r,"
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,4323,      final int index) {
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,4324,"    return getResultOrException(ResponseConverter.buildActionResult(r), index);"
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,4325,  }
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,4326,"  private static ResultOrException getResultOrException(final Exception e, final int index) {"
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,4327,"    return getResultOrException(ResponseConverter.buildActionResult(e), index);"
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,4328,  }
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,4329,
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,4330,"  private static ResultOrException getResultOrException(final ResultOrException.Builder builder,"
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,4331,      final int index) {
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,4332,    return builder.setIndex(index).build();
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,4333,  }
d7050d3541d,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-02-24,21:06:12,4334,
f67903e4d6a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-09-26,21:16:33,4335,  /**
266e1791d13,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-09-30,05:13:03,4336,   * Execute a list of Put/Delete mutations. The function returns OperationStatus instead of
266e1791d13,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-09-30,05:13:03,4337,   * constructing MultiResponse to save a possible loop if caller doesn\'t need MultiResponse.
f67903e4d6a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-09-26,21:16:33,4338,   * @param region
f67903e4d6a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-09-26,21:16:33,4339,   * @param mutations
266e1791d13,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-09-30,05:13:03,4340,   * @return an array of OperationStatus which internally contains the OperationStatusCode and the
266e1791d13,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-09-30,05:13:03,4341,   *         exceptionMessage if any
f67903e4d6a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-09-26,21:16:33,4342,   * @throws IOException
f67903e4d6a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-09-26,21:16:33,4343,   */
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,4344,"  protected OperationStatus [] doReplayBatchOp(final HRegion region,"
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,4345,      final List<HLogSplitter.MutationReplay> mutations) throws IOException {
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,4346,    HLogSplitter.MutationReplay[] mArray = new HLogSplitter.MutationReplay[mutations.size()];
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,4347,
f67903e4d6a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-09-26,21:16:33,4348,    long before = EnvironmentEdgeManager.currentTimeMillis();
f67903e4d6a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-09-26,21:16:33,4349,"    boolean batchContainsPuts = false, batchContainsDelete = false;"
f67903e4d6a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-09-26,21:16:33,4350,    try {
f67903e4d6a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-09-26,21:16:33,4351,      int i = 0;
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,4352,      for (HLogSplitter.MutationReplay m : mutations) {
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,4353,        if (m.type == MutationType.PUT) {
f67903e4d6a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-09-26,21:16:33,4354,          batchContainsPuts = true;
f67903e4d6a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-09-26,21:16:33,4355,        } else {
f67903e4d6a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-09-26,21:16:33,4356,          batchContainsDelete = true;
f67903e4d6a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-09-26,21:16:33,4357,        }
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,4358,        mArray[i++] = m;
f67903e4d6a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-09-26,21:16:33,4359,      }
f67903e4d6a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-09-26,21:16:33,4360,      requestCount.add(mutations.size());
f67903e4d6a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-09-26,21:16:33,4361,      if (!region.getRegionInfo().isMetaTable()) {
f67903e4d6a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-09-26,21:16:33,4362,        cacheFlusher.reclaimMemStoreMemory();
f67903e4d6a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-09-26,21:16:33,4363,      }
6119df9ccba,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-11-15,04:36:30,4364,      return region.batchReplay(mArray);
f67903e4d6a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-09-26,21:16:33,4365,    } finally {
f67903e4d6a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-09-26,21:16:33,4366,      long after = EnvironmentEdgeManager.currentTimeMillis();
f67903e4d6a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-09-26,21:16:33,4367,      if (batchContainsPuts) {
f67903e4d6a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-09-26,21:16:33,4368,        metricsRegionServer.updatePut(after - before);
f67903e4d6a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-09-26,21:16:33,4369,      }
f67903e4d6a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-09-26,21:16:33,4370,      if (batchContainsDelete) {
f67903e4d6a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-09-26,21:16:33,4371,        metricsRegionServer.updateDelete(after - before);
f67903e4d6a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-09-26,21:16:33,4372,      }
f67903e4d6a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-09-26,21:16:33,4373,    }
f67903e4d6a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-09-26,21:16:33,4374,  }
f67903e4d6a,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jeffreyz,2013-09-26,21:16:33,4375,
d7050d3541d,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-02-24,21:06:12,4376,  /**
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4377,   * Mutate a list of rows atomically.
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4378,   *
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4379,   * @param region
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,4380,   * @param actions
5fde90f68f2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-03-20,19:36:46,4381," * @param cellScanner if non-null, the mutation data -- the Cell content."
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4382,   * @throws IOException
d7050d3541d,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-02-24,21:06:12,4383,   */
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,4384,"  protected void mutateRows(final HRegion region, final List<ClientProtos.Action> actions,"
5fde90f68f2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-03-20,19:36:46,4385,      final CellScanner cellScanner)
5fde90f68f2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-03-20,19:36:46,4386,  throws IOException {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4387,    if (!region.getRegionInfo().isMetaTable()) {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4388,      cacheFlusher.reclaimMemStoreMemory();
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4389,    }
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,4390,    RowMutations rm = null;
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,4391,    for (ClientProtos.Action action: actions) {
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,4392,      if (action.hasGet()) {
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,4393,"        throw new DoNotRetryIOException(""Atomic put and/or delete only, not a Get="" +"
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,4394,          action.getGet());
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,4395,      }
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,4396,      MutationType type = action.getMutation().getMutateType();
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,4397,      if (rm == null) {
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,4398,        rm = new RowMutations(action.getMutation().getRow().toByteArray());
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,4399,      }
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,4400,      switch (type) {
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4401,      case PUT:
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,4402,"        rm.add(ProtobufUtil.toPut(action.getMutation(), cellScanner));"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4403,        break;
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4404,      case DELETE:
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,4405,"        rm.add(ProtobufUtil.toDelete(action.getMutation(), cellScanner));"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4406,        break;
d54525ca904,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2014-03-12,15:56:57,4407,      default:
36e49e01e33,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-10-04,23:38:41,4408,"          throw new DoNotRetryIOException(""Atomic put and/or delete only, not "" + type.name());"
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4409,      }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4410,    }
007d6da28c1,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-05,04:22:52,4411,    region.mutateRow(rm);
d7050d3541d,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-02-24,21:06:12,4412,  }
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,4413,
f17016bd5b2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-01-21,20:07:25,4414,  private static class MovedRegionInfo {
f17016bd5b2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-01-21,20:07:25,4415,    private final ServerName serverName;
f17016bd5b2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-01-21,20:07:25,4416,    private final long seqNum;
f17016bd5b2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-01-21,20:07:25,4417,    private final long ts;
f17016bd5b2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-01-21,20:07:25,4418,
f17016bd5b2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-01-21,20:07:25,4419,"    public MovedRegionInfo(ServerName serverName, long closeSeqNum) {"
f17016bd5b2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-01-21,20:07:25,4420,      this.serverName = serverName;
f17016bd5b2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-01-21,20:07:25,4421,      this.seqNum = closeSeqNum;
f17016bd5b2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-01-21,20:07:25,4422,      ts = EnvironmentEdgeManager.currentTimeMillis();
f17016bd5b2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-01-21,20:07:25,4423,     }
f17016bd5b2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-01-21,20:07:25,4424,
f17016bd5b2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-01-21,20:07:25,4425,    public ServerName getServerName() {
f17016bd5b2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-01-21,20:07:25,4426,      return serverName;
f17016bd5b2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-01-21,20:07:25,4427,    }
f17016bd5b2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-01-21,20:07:25,4428,
f17016bd5b2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-01-21,20:07:25,4429,    public long getSeqNum() {
f17016bd5b2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-01-21,20:07:25,4430,      return seqNum;
f17016bd5b2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-01-21,20:07:25,4431,    }
f17016bd5b2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-01-21,20:07:25,4432,
f17016bd5b2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-01-21,20:07:25,4433,    public long getMoveTime() {
f17016bd5b2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-01-21,20:07:25,4434,      return ts;
f17016bd5b2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-01-21,20:07:25,4435,    }
f17016bd5b2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-01-21,20:07:25,4436,  }
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,4437,
deeb84ae5a5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2012-12-31,09:50:27,4438,  // This map will contains all the regions that we closed for a move.
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,4439,  //  We add the time it was moved as we don\'t want to keep too old information
f17016bd5b2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-01-21,20:07:25,4440,"  protected Map<String, MovedRegionInfo> movedRegions ="
f17016bd5b2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-01-21,20:07:25,4441,"      new ConcurrentHashMap<String, MovedRegionInfo>(3000);"
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,4442,
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,4443,  // We need a timeout. If not there is a risk of giving a wrong information: this would double
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,4444,  //  the number of network calls instead of reducing them.
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,4445,  private static final int TIMEOUT_REGION_MOVED = (2 * 60 * 1000);
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,4446,
f17016bd5b2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-01-21,20:07:25,4447,"  protected void addToMovedRegions(String encodedName, ServerName destination, long closeSeqNum) {"
ea423691d9e,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-04-08,20:40:12,4448,"    if (ServerName.isSameHostnameAndPort(destination, this.getServerName())) {"
ea423691d9e,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-04-08,20:40:12,4449,"      LOG.warn(""Not adding moved region record: "" + encodedName + "" to self."");"
ea423691d9e,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-04-08,20:40:12,4450,      return;
ea423691d9e,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,sershe,2013-04-08,20:40:12,4451,    }
f17016bd5b2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-01-21,20:07:25,4452,"    LOG.info(""Adding moved region record: "" + encodedName + "" to """
f17016bd5b2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-01-21,20:07:25,4453,"        + destination.getServerName() + "":"" + destination.getPort()"
f17016bd5b2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-01-21,20:07:25,4454,"        + "" as of "" + closeSeqNum);"
49cab5a7c20,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-02-21,18:34:32,4455,"    movedRegions.put(encodedName, new MovedRegionInfo(destination, closeSeqNum));"
49cab5a7c20,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-02-21,18:34:32,4456,  }
49cab5a7c20,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-02-21,18:34:32,4457,
49cab5a7c20,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-02-21,18:34:32,4458,  private void removeFromMovedRegions(String encodedName) {
49cab5a7c20,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-02-21,18:34:32,4459,    movedRegions.remove(encodedName);
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,4460,  }
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,4461,
f17016bd5b2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-01-21,20:07:25,4462,  private MovedRegionInfo getMovedRegion(final String encodedRegionName) {
f17016bd5b2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-01-21,20:07:25,4463,    MovedRegionInfo dest = movedRegions.get(encodedRegionName);
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,4464,
f17016bd5b2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-01-21,20:07:25,4465,    long now = EnvironmentEdgeManager.currentTimeMillis();
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,4466,    if (dest != null) {
f17016bd5b2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-01-21,20:07:25,4467,      if (dest.getMoveTime() > (now - TIMEOUT_REGION_MOVED)) {
f17016bd5b2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-01-21,20:07:25,4468,        return dest;
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,4469,      } else {
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,4470,        movedRegions.remove(encodedRegionName);
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,4471,      }
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,4472,    }
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,4473,
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,4474,    return null;
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,4475,  }
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,4476,
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,4477,  /**
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,4478,   * Remove the expired entries from the moved regions list.
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,4479,   */
49cab5a7c20,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-02-21,18:34:32,4480,  protected void cleanMovedRegions() {
c7781e9a37f,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-09-29,17:57:49,4481,    final long cutOff = System.currentTimeMillis() - TIMEOUT_REGION_MOVED;
f17016bd5b2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-01-21,20:07:25,4482,"    Iterator<Entry<String, MovedRegionInfo>> it = movedRegions.entrySet().iterator();"
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,4483,
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,4484,    while (it.hasNext()){
f17016bd5b2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-01-21,20:07:25,4485,"      Map.Entry<String, MovedRegionInfo> e = it.next();"
f17016bd5b2,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-01-21,20:07:25,4486,      if (e.getValue().getMoveTime() < cutOff) {
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,4487,        it.remove();
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,4488,      }
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,4489,    }
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,4490,  }
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,4491,
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,4492,  /**
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,4493,   * Creates a Chore thread to clean the moved region cache.
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,4494,   */
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,4495,  protected static class MovedRegionsCleaner extends Chore implements Stoppable {
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,4496,    private HRegionServer regionServer;
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,4497,    Stoppable stoppable;
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,4498,
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,4499,    private MovedRegionsCleaner(
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,4500,"      HRegionServer regionServer, Stoppable stoppable){"
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,4501,"      super(""MovedRegionsCleaner for region ""+regionServer, TIMEOUT_REGION_MOVED, stoppable);"
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,4502,      this.regionServer = regionServer;
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,4503,      this.stoppable = stoppable;
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,4504,    }
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,4505,
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,4506,    static MovedRegionsCleaner createAndStart(HRegionServer rs){
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,4507,      Stoppable stoppable = new Stoppable() {
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,4508,        private volatile boolean isStopped = false;
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,4509,        @Override public void stop(String why) { isStopped = true;}
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,4510,        @Override public boolean isStopped() {return isStopped;}
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,4511,      };
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,4512,
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,4513,"      return new MovedRegionsCleaner(rs, stoppable);"
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,4514,    }
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,4515,
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,4516,    @Override
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,4517,    protected void chore() {
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,4518,      regionServer.cleanMovedRegions();
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,4519,    }
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,4520,
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,4521,    @Override
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,4522,    public void stop(String why) {
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,4523,      stoppable.stop(why);
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,4524,    }
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,4525,
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,4526,    @Override
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,4527,    public boolean isStopped() {
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,4528,      return stoppable.isStopped();
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,4529,    }
5edfc1996d3,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2012-05-09,17:07:49,4530,  }
4c61d4a9651,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-18,17:44:04,4531,
4c61d4a9651,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-18,17:44:04,4532,  private String getMyEphemeralNodePath() {
4c61d4a9651,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-18,17:44:04,4533,"    return ZKUtil.joinZNode(this.zooKeeper.rsZNode, getServerName().toString());"
4c61d4a9651,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-05-18,17:44:04,4534,  }
1793a0bbcd5,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-12-21,04:29:43,4535,
d20edb96dc4,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2013-08-06,20:10:37,4536,  /**
d20edb96dc4,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2013-08-06,20:10:37,4537,   * Holder class which holds the RegionScanner and nextCallSeq together.
d20edb96dc4,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2013-08-06,20:10:37,4538,   */
d20edb96dc4,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2013-08-06,20:10:37,4539,  private static class RegionScannerHolder {
d20edb96dc4,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2013-08-06,20:10:37,4540,    private RegionScanner s;
d20edb96dc4,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2013-08-06,20:10:37,4541,    private long nextCallSeq = 0L;
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,4542,    private HRegion r;
d20edb96dc4,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2013-08-06,20:10:37,4543,
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,4544,"    public RegionScannerHolder(RegionScanner s, HRegion r) {"
d20edb96dc4,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2013-08-06,20:10:37,4545,      this.s = s;
26ddfe10b62,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jxiang,2013-11-11,23:40:37,4546,      this.r = r;
d20edb96dc4,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2013-08-06,20:10:37,4547,    }
d20edb96dc4,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2013-08-06,20:10:37,4548,  }
d20edb96dc4,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,eclark,2013-08-06,20:10:37,4549,
a1079157eca,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2013-01-03,02:12:24,4550,  private boolean isHealthCheckerConfigured() {
a1079157eca,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2013-01-03,02:12:24,4551,    String healthScriptLocation = this.conf.get(HConstants.HEALTH_SCRIPT_LOC);
a1079157eca,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2013-01-03,02:12:24,4552,    return org.apache.commons.lang.StringUtils.isNotBlank(healthScriptLocation);
a1079157eca,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Andrew Kyle Purtell,2013-01-03,02:12:24,4553,  }
1a766c42a18,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jyates,2013-02-20,22:40:55,4554,
1a766c42a18,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jyates,2013-02-20,22:40:55,4555,  /**
1a766c42a18,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jyates,2013-02-20,22:40:55,4556,   * @return the underlying {@link CompactSplitThread} for the servers
1a766c42a18,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jyates,2013-02-20,22:40:55,4557,   */
1a766c42a18,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jyates,2013-02-20,22:40:55,4558,  public CompactSplitThread getCompactSplitThread() {
1a766c42a18,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jyates,2013-02-20,22:40:55,4559,    return this.compactSplitThread;
1a766c42a18,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,jyates,2013-02-20,22:40:55,4560,  }
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,4561,
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,4562,  /**
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,4563,   * A helper function to store the last flushed sequence Id with the previous failed RS for a
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,4564,   * recovering region. The Id is used to skip wal edits which are flushed. Since the flushed
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,4565,"   * sequence id is only valid for each RS, we associate the Id with corresponding failed RS."
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,4566,   * @throws KeeperException
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,4567,   * @throws IOException
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,4568,   */
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,4569,"  private void updateRecoveringRegionLastFlushedSequenceId(HRegion r) throws KeeperException,"
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,4570,      IOException {
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,4571,    if (!r.isRecovering()) {
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,4572,      // return immdiately for non-recovering regions
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,4573,      return;
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,4574,    }
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,4575,
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,4576,    HRegionInfo region = r.getRegionInfo();
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,4577,    ZooKeeperWatcher zkw = getZooKeeper();
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,4578,    String previousRSName = this.getLastFailedRSFromZK(region.getEncodedName());
6bacd6839f1,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-24,21:18:32,4579,"    Map<byte[], Long> maxSeqIdInStores = r.getMaxStoreSeqIdForLogReplay();"
6bacd6839f1,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-24,21:18:32,4580,    long minSeqIdForLogReplay = -1;
095baf88480,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Zhihong Yu,2013-06-09,03:49:15,4581,    for (Long storeSeqIdForReplay : maxSeqIdInStores.values()) {
6bacd6839f1,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-24,21:18:32,4582,      if (minSeqIdForLogReplay == -1 || storeSeqIdForReplay < minSeqIdForLogReplay) {
6bacd6839f1,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-24,21:18:32,4583,        minSeqIdForLogReplay = storeSeqIdForReplay;
6bacd6839f1,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-24,21:18:32,4584,      }
6bacd6839f1,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-24,21:18:32,4585,    }
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,4586,    long lastRecordedFlushedSequenceId = -1;
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,4587,"    String nodePath = ZKUtil.joinZNode(this.zooKeeper.recoveringRegionsZNode,"
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,4588,      region.getEncodedName());
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,4589,    // recovering-region level
4742456403e,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-07,20:27:42,4590,    byte[] data;
4742456403e,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-07,20:27:42,4591,    try {
4742456403e,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-07,20:27:42,4592,"      data = ZKUtil.getData(zkw, nodePath);"
4742456403e,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-07,20:27:42,4593,    } catch (InterruptedException e) {
4742456403e,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-07,20:27:42,4594,      throw new InterruptedIOException();
4742456403e,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,nkeywal,2014-02-07,20:27:42,4595,    }
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,4596,    if (data != null) {
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,4597,      lastRecordedFlushedSequenceId = SplitLogManager.parseLastFlushedSequenceIdFrom(data);
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,4598,    }
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,4599,    if (data == null || lastRecordedFlushedSequenceId < minSeqIdForLogReplay) {
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,4600,"      ZKUtil.setData(zkw, nodePath, ZKUtil.positionToByteArray(minSeqIdForLogReplay));"
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,4601,    }
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,4602,    if (previousRSName != null) {
6bacd6839f1,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-24,21:18:32,4603,      // one level deeper for the failed RS
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,4604,"      nodePath = ZKUtil.joinZNode(nodePath, previousRSName);"
6bacd6839f1,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-24,21:18:32,4605,"      ZKUtil.setData(zkw, nodePath,"
6bacd6839f1,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-24,21:18:32,4606,"        ZKUtil.regionSequenceIdsToByteArray(minSeqIdForLogReplay, maxSeqIdInStores));"
7fa275407fd,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Enis Soztutar,2013-07-15,21:38:37,4607,"      LOG.debug(""Update last flushed sequence id of region "" + region.getEncodedName() + "" for """
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,4608,          + previousRSName);
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,4609,    } else {
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,4610,"      LOG.warn(""Can\'t find failed region server for recovering region "" + region.getEncodedName());"
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,4611,    }
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,4612,  }
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,4613,
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,4614,  /**
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,4615,   * Return the last failed RS name under /hbase/recovering-regions/encodedRegionName
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,4616,   * @param encodedRegionName
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,4617,   * @throws KeeperException
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,4618,   */
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,4619,  private String getLastFailedRSFromZK(String encodedRegionName) throws KeeperException {
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,4620,    String result = null;
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,4621,    long maxZxid = 0;
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,4622,    ZooKeeperWatcher zkw = this.getZooKeeper();
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,4623,"    String nodePath = ZKUtil.joinZNode(zkw.recoveringRegionsZNode, encodedRegionName);"
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,4624,"    List<String> failedServers = ZKUtil.listChildrenNoWatch(zkw, nodePath);"
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,4625,    if (failedServers == null || failedServers.isEmpty()) {
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,4626,      return result;
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,4627,    }
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,4628,    for (String failedServer : failedServers) {
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,4629,"      String rsPath = ZKUtil.joinZNode(nodePath, failedServer);"
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,4630,      Stat stat = new Stat();
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,4631,"      ZKUtil.getDataNoWatch(zkw, rsPath, stat);"
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,4632,      if (maxZxid < stat.getCzxid()) {
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,4633,        maxZxid = stat.getCzxid();
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,4634,        result = failedServer;
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,4635,      }
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,4636,    }
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,4637,    return result;
cb53db35f34,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2013-05-15,04:24:02,4638,  }
b936444e348,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-08-27,22:12:21,4639,
b936444e348,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-08-27,22:12:21,4640,  @Override
b936444e348,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-08-27,22:12:21,4641,"  public UpdateFavoredNodesResponse updateFavoredNodes(RpcController controller,"
b936444e348,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-08-27,22:12:21,4642,      UpdateFavoredNodesRequest request) throws ServiceException {
b936444e348,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-08-27,22:12:21,4643,    List<UpdateFavoredNodesRequest.RegionUpdateInfo> openInfoList = request.getUpdateInfoList();
b936444e348,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-08-27,22:12:21,4644,    UpdateFavoredNodesResponse.Builder respBuilder = UpdateFavoredNodesResponse.newBuilder();
b936444e348,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-08-27,22:12:21,4645,    for (UpdateFavoredNodesRequest.RegionUpdateInfo regionUpdateInfo : openInfoList) {
b936444e348,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-08-27,22:12:21,4646,      HRegionInfo hri = HRegionInfo.convert(regionUpdateInfo.getRegion());
b936444e348,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-08-27,22:12:21,4647,"      updateRegionFavoredNodesMapping(hri.getEncodedName(),"
b936444e348,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-08-27,22:12:21,4648,          regionUpdateInfo.getFavoredNodesList());
b936444e348,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-08-27,22:12:21,4649,    }
b936444e348,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-08-27,22:12:21,4650,    respBuilder.setResponse(openInfoList.size());
b936444e348,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-08-27,22:12:21,4651,    return respBuilder.build();
b936444e348,hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Devaraj Das,2013-08-27,22:12:21,4652,  }
4d04f853083,src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java,Michael Stack,2012-04-13,20:28:21,4653,}
